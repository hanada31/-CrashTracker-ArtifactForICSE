{
	"Crash Info in Dataset":{
		"Apk name":"sk.henrichg.phoneprofilesplus-131",
		"Method":"android.database.sqlite.SQLiteConnection.nativePrepareStatement",
		"Crash Message":"duplicate column name: deviceWifiAP (code 1): , while compiling: ALTER TABLE merged_profile ADD COLUMN deviceWifiAP INTEGER",
		"stack trace":[
			"android.database.sqlite.SQLiteConnection.nativePrepareStatement",
			"android.database.sqlite.SQLiteConnection.acquirePreparedStatement",
			"android.database.sqlite.SQLiteConnection.prepare",
			"android.database.sqlite.SQLiteSession.prepare",
			"android.database.sqlite.SQLiteProgram.<init>",
			"android.database.sqlite.SQLiteStatement.<init>",
			"android.database.sqlite.SQLiteDatabase.executeSql",
			"android.database.sqlite.SQLiteDatabase.execSQL",
			"sk.henrichg.phoneprofilesplus.DatabaseHandler.onUpgrade",
			"android.database.sqlite.SQLiteOpenHelper.getDatabaseLocked",
			"android.database.sqlite.SQLiteOpenHelper.getWritableDatabase",
			"sk.henrichg.phoneprofilesplus.DatabaseHandler.getMyWritableDatabase",
			"sk.henrichg.phoneprofilesplus.DatabaseHandler.deleteAllEventTimelines",
			"sk.henrichg.phoneprofilesplus.FirstStartService.onHandleIntent",
			"android.app.IntentService$ServiceHandler.handleMessage",
			"android.os.Handler.dispatchMessage",
			"android.os.Looper.loop",
			"android.os.HandlerThread.run"
		],
		"Labeled Buggy Method":"sk.henrichg.phoneprofilesplus.DatabaseHandler.onCreate"
	},
	"Fault Localization by CrashTracker":{
		"Buggy Method Candidates":[
			{
				"Candidate Name":"sk.henrichg.phoneprofilesplus.DatabaseHandler.onUpgrade",
				"Candidate Score":100,
				"Reasons":[
					{
						"Reason Type":"Key Variable Related 1",
						"Explanation":"Influences the value of keyVar by modifying the value of the passed parameters",
						"Influenced parameter id":"Unknown",
						"Influenced method":"android.database.sqlite.SQLiteConnection.nativePrepareStatement",
						"Trace":[
							"sk.henrichg.phoneprofilesplus.DatabaseHandler.onUpgrade"
						]
					},
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.database.sqlite.SQLiteOpenHelper.getDatabaseLocked",
							"android.database.sqlite.SQLiteOpenHelper.<clinit>",
							"android.database.sqlite.SQLiteOpenHelper.<clinit>",
							"android.database.sqlite.SQLiteOpenHelper.setFilePermissionsForDb",
							"<sk.henrichg.phoneprofilesplus.DatabaseHandler: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>",
							"<sk.henrichg.phoneprofilesplus.DatabaseHandler: java.lang.String profileTableCreationString(java.lang.String)>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.database.Cursor: boolean isNull(int)>",
							"<android.database.Cursor: long getLong(int)>",
							"<android.database.Cursor: int getInt(int)>",
							"<sk.henrichg.phoneprofilesplus.Profile: long convertBrightnessToPercents(int,int,int,android.content.Context)>",
							"<java.lang.Math: long round(double)>",
							"<java.lang.Integer: int parseInt(java.lang.String)>",
							"<android.database.Cursor: boolean moveToNext()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(long)>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<java.lang.String: java.lang.String[] split(java.lang.String)>",
							"<java.lang.Long: long parseLong(java.lang.String)>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>",
							"<java.util.TimeZone: int getRawOffset()>",
							"<java.util.TimeZone: java.util.TimeZone getDefault()>",
							"<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>",
							"<sk.henrichg.phoneprofilesplus.GlobalData: void logE(java.lang.String,java.lang.String)>",
							"<sk.henrichg.phoneprofilesplus.GlobalData: boolean logContainsFilterTag(java.lang.String)>",
							"<java.lang.String: java.lang.String[] split(java.lang.String)>",
							"<java.lang.String: boolean contains(java.lang.CharSequence)>",
							"<sk.henrichg.phoneprofilesplus.GlobalData: void logIntoFile(java.lang.String,java.lang.String,java.lang.String)>",
							"<android.os.Environment: java.io.File getExternalStorageDirectory()>",
							"<java.lang.Throwable: void printStackTrace()>",
							"<java.io.BufferedWriter: void close()>",
							"<java.io.BufferedWriter: void flush()>",
							"<java.io.BufferedWriter: void newLine()>",
							"<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.text.Format: java.lang.String format(java.lang.Object)>",
							"<java.lang.Long: java.lang.Long valueOf(long)>",
							"<java.util.Calendar: long getTimeInMillis()>",
							"<java.util.Calendar: java.util.Calendar getInstance()>",
							"<java.text.SimpleDateFormat: void <init>(java.lang.String)>",
							"<java.io.BufferedWriter: void <init>(java.io.Writer)>",
							"<java.io.FileWriter: void <init>(java.io.File,boolean)>",
							"<java.io.File: boolean createNewFile()>",
							"<sk.henrichg.phoneprofilesplus.GlobalData: void resetLog()>",
							"<android.os.Environment: java.io.File getExternalStorageDirectory()>",
							"<java.io.File: boolean delete()>",
							"<java.io.File: boolean mkdirs()>",
							"<java.io.File: boolean isDirectory()>",
							"<java.io.File: boolean exists()>",
							"<java.io.File: void <init>(java.io.File,java.lang.String)>",
							"<java.io.File: long length()>",
							"<java.io.File: boolean mkdirs()>",
							"<java.io.File: boolean isDirectory()>",
							"<java.io.File: boolean exists()>",
							"<java.io.File: void <init>(java.io.File,java.lang.String)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"android.database.sqlite.SQLiteOpenHelper.onUpgrade",
							"android.database.sqlite.SQLiteOpenHelper.onDowngrade",
							"android.database.sqlite.SQLiteOpenHelper.getDatabaseLocked",
							"<sk.henrichg.phoneprofilesplus.DatabaseHandler: void onCreate(android.database.sqlite.SQLiteDatabase)>",
							"<sk.henrichg.phoneprofilesplus.DatabaseHandler: java.lang.String profileTableCreationString(java.lang.String)>",
							"<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>",
							"android.database.sqlite.SQLiteOpenHelper.onCreate",
							"android.database.sqlite.SQLiteOpenHelper.onBeforeDelete",
							"android.database.sqlite.SQLiteOpenHelper.onConfigure",
							"android.database.sqlite.SQLiteOpenHelper.onOpen"
						]
					}
				]
			},
			{
				"Candidate Name":"sk.henrichg.phoneprofilesplus.DatabaseHandler.onCreate",
				"Candidate Score":98,
				"Reasons":[
					{"$ref":"$.Fault\\ Localization\\ by\\ CrashTracker.Buggy\\ Method\\ Candidates[0].Reasons[1]"}
				]
			},
			{
				"Candidate Name":"sk.henrichg.phoneprofilesplus.DatabaseHandler.getMyWritableDatabase",
				"Candidate Score":97,
				"Reasons":[
					{
						"Reason Type":"Key Variable Related 1",
						"Explanation":"Influences the value of keyVar by modifying the value of the passed parameters",
						"Influenced parameter id":"Unknown",
						"Influenced method":"android.database.sqlite.SQLiteConnection.nativePrepareStatement",
						"Trace":[
							"sk.henrichg.phoneprofilesplus.DatabaseHandler.getMyWritableDatabase"
						]
					}
				]
			},
			{
				"Candidate Name":"sk.henrichg.phoneprofilesplus.DatabaseHandler.profileTableCreationString",
				"Candidate Score":97,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.database.sqlite.SQLiteOpenHelper.getDatabaseLocked",
							"android.database.sqlite.SQLiteOpenHelper.<clinit>",
							"android.database.sqlite.SQLiteOpenHelper.<clinit>",
							"android.database.sqlite.SQLiteOpenHelper.setFilePermissionsForDb",
							"<sk.henrichg.phoneprofilesplus.DatabaseHandler: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>",
							"<sk.henrichg.phoneprofilesplus.DatabaseHandler: java.lang.String profileTableCreationString(java.lang.String)>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.database.Cursor: boolean isNull(int)>",
							"<android.database.Cursor: long getLong(int)>",
							"<android.database.Cursor: int getInt(int)>",
							"<sk.henrichg.phoneprofilesplus.Profile: long convertBrightnessToPercents(int,int,int,android.content.Context)>",
							"<java.lang.Math: long round(double)>",
							"<java.lang.Integer: int parseInt(java.lang.String)>",
							"<android.database.Cursor: boolean moveToNext()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(long)>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<java.lang.String: java.lang.String[] split(java.lang.String)>",
							"<java.lang.Long: long parseLong(java.lang.String)>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>",
							"<java.util.TimeZone: int getRawOffset()>",
							"<java.util.TimeZone: java.util.TimeZone getDefault()>",
							"<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>",
							"<sk.henrichg.phoneprofilesplus.GlobalData: void logE(java.lang.String,java.lang.String)>",
							"<sk.henrichg.phoneprofilesplus.GlobalData: boolean logContainsFilterTag(java.lang.String)>",
							"<java.lang.String: java.lang.String[] split(java.lang.String)>",
							"<java.lang.String: boolean contains(java.lang.CharSequence)>",
							"<sk.henrichg.phoneprofilesplus.GlobalData: void logIntoFile(java.lang.String,java.lang.String,java.lang.String)>",
							"<android.os.Environment: java.io.File getExternalStorageDirectory()>",
							"<java.lang.Throwable: void printStackTrace()>",
							"<java.io.BufferedWriter: void close()>",
							"<java.io.BufferedWriter: void flush()>",
							"<java.io.BufferedWriter: void newLine()>",
							"<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.text.Format: java.lang.String format(java.lang.Object)>",
							"<java.lang.Long: java.lang.Long valueOf(long)>",
							"<java.util.Calendar: long getTimeInMillis()>",
							"<java.util.Calendar: java.util.Calendar getInstance()>",
							"<java.text.SimpleDateFormat: void <init>(java.lang.String)>",
							"<java.io.BufferedWriter: void <init>(java.io.Writer)>",
							"<java.io.FileWriter: void <init>(java.io.File,boolean)>",
							"<java.io.File: boolean createNewFile()>",
							"<sk.henrichg.phoneprofilesplus.GlobalData: void resetLog()>",
							"<android.os.Environment: java.io.File getExternalStorageDirectory()>",
							"<java.io.File: boolean delete()>",
							"<java.io.File: boolean mkdirs()>",
							"<java.io.File: boolean isDirectory()>",
							"<java.io.File: boolean exists()>",
							"<java.io.File: void <init>(java.io.File,java.lang.String)>",
							"<java.io.File: long length()>",
							"<java.io.File: boolean mkdirs()>",
							"<java.io.File: boolean isDirectory()>",
							"<java.io.File: boolean exists()>",
							"<java.io.File: void <init>(java.io.File,java.lang.String)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"android.database.sqlite.SQLiteOpenHelper.onUpgrade",
							"android.database.sqlite.SQLiteOpenHelper.onDowngrade",
							"android.database.sqlite.SQLiteOpenHelper.getDatabaseLocked",
							"<sk.henrichg.phoneprofilesplus.DatabaseHandler: void onCreate(android.database.sqlite.SQLiteDatabase)>",
							"<sk.henrichg.phoneprofilesplus.DatabaseHandler: java.lang.String profileTableCreationString(java.lang.String)>",
							"<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>",
							"android.database.sqlite.SQLiteOpenHelper.onCreate",
							"android.database.sqlite.SQLiteOpenHelper.onBeforeDelete",
							"android.database.sqlite.SQLiteOpenHelper.onConfigure",
							"android.database.sqlite.SQLiteOpenHelper.onOpen"
						]
					},
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.database.sqlite.SQLiteOpenHelper.getDatabaseLocked",
							"android.database.sqlite.SQLiteOpenHelper.<clinit>",
							"android.database.sqlite.SQLiteOpenHelper.<clinit>",
							"android.database.sqlite.SQLiteOpenHelper.setFilePermissionsForDb",
							"<sk.henrichg.phoneprofilesplus.DatabaseHandler: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>",
							"<sk.henrichg.phoneprofilesplus.DatabaseHandler: java.lang.String profileTableCreationString(java.lang.String)>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.database.Cursor: boolean isNull(int)>",
							"<android.database.Cursor: long getLong(int)>",
							"<android.database.Cursor: int getInt(int)>",
							"<sk.henrichg.phoneprofilesplus.Profile: long convertBrightnessToPercents(int,int,int,android.content.Context)>",
							"<java.lang.Math: long round(double)>",
							"<java.lang.Integer: int parseInt(java.lang.String)>",
							"<android.database.Cursor: boolean moveToNext()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(long)>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<java.lang.String: java.lang.String[] split(java.lang.String)>",
							"<java.lang.Long: long parseLong(java.lang.String)>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>",
							"<java.util.TimeZone: int getRawOffset()>",
							"<java.util.TimeZone: java.util.TimeZone getDefault()>",
							"<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>",
							"<sk.henrichg.phoneprofilesplus.GlobalData: void logE(java.lang.String,java.lang.String)>",
							"<sk.henrichg.phoneprofilesplus.GlobalData: boolean logContainsFilterTag(java.lang.String)>",
							"<java.lang.String: java.lang.String[] split(java.lang.String)>",
							"<java.lang.String: boolean contains(java.lang.CharSequence)>",
							"<sk.henrichg.phoneprofilesplus.GlobalData: void logIntoFile(java.lang.String,java.lang.String,java.lang.String)>",
							"<android.os.Environment: java.io.File getExternalStorageDirectory()>",
							"<java.lang.Throwable: void printStackTrace()>",
							"<java.io.BufferedWriter: void close()>",
							"<java.io.BufferedWriter: void flush()>",
							"<java.io.BufferedWriter: void newLine()>",
							"<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.text.Format: java.lang.String format(java.lang.Object)>",
							"<java.lang.Long: java.lang.Long valueOf(long)>",
							"<java.util.Calendar: long getTimeInMillis()>",
							"<java.util.Calendar: java.util.Calendar getInstance()>",
							"<java.text.SimpleDateFormat: void <init>(java.lang.String)>",
							"<java.io.BufferedWriter: void <init>(java.io.Writer)>",
							"<java.io.FileWriter: void <init>(java.io.File,boolean)>",
							"<java.io.File: boolean createNewFile()>",
							"<sk.henrichg.phoneprofilesplus.GlobalData: void resetLog()>",
							"<android.os.Environment: java.io.File getExternalStorageDirectory()>",
							"<java.io.File: boolean delete()>",
							"<java.io.File: boolean mkdirs()>",
							"<java.io.File: boolean isDirectory()>",
							"<java.io.File: boolean exists()>",
							"<java.io.File: void <init>(java.io.File,java.lang.String)>",
							"<java.io.File: long length()>",
							"<java.io.File: boolean mkdirs()>",
							"<java.io.File: boolean isDirectory()>",
							"<java.io.File: boolean exists()>",
							"<java.io.File: void <init>(java.io.File,java.lang.String)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"android.database.sqlite.SQLiteOpenHelper.onUpgrade",
							"android.database.sqlite.SQLiteOpenHelper.onDowngrade",
							"android.database.sqlite.SQLiteOpenHelper.getDatabaseLocked",
							"<sk.henrichg.phoneprofilesplus.DatabaseHandler: void onCreate(android.database.sqlite.SQLiteDatabase)>",
							"<sk.henrichg.phoneprofilesplus.DatabaseHandler: java.lang.String profileTableCreationString(java.lang.String)>",
							"<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>",
							"android.database.sqlite.SQLiteOpenHelper.onCreate",
							"android.database.sqlite.SQLiteOpenHelper.onBeforeDelete",
							"android.database.sqlite.SQLiteOpenHelper.onConfigure",
							"android.database.sqlite.SQLiteOpenHelper.onOpen"
						]
					}
				]
			},
			{
				"Candidate Name":"sk.henrichg.phoneprofilesplus.DatabaseHandler.deleteAllEventTimelines",
				"Candidate Score":96,
				"Reasons":[
					{
						"Reason Type":"Key Variable Related 1",
						"Explanation":"Influences the value of keyVar by modifying the value of the passed parameters",
						"Influenced parameter id":"Unknown",
						"Influenced method":"android.database.sqlite.SQLiteConnection.nativePrepareStatement",
						"Trace":[
							"sk.henrichg.phoneprofilesplus.DatabaseHandler.deleteAllEventTimelines"
						]
					}
				]
			},
			{
				"Candidate Name":"sk.henrichg.phoneprofilesplus.FirstStartService.onHandleIntent",
				"Candidate Score":95,
				"Reasons":[
					{
						"Reason Type":"Key Variable Related 1",
						"Explanation":"Influences the value of keyVar by modifying the value of the passed parameters",
						"Influenced parameter id":"Unknown",
						"Influenced method":"android.database.sqlite.SQLiteConnection.nativePrepareStatement",
						"Trace":[
							"sk.henrichg.phoneprofilesplus.FirstStartService.onHandleIntent"
						]
					}
				]
			},
			{
				"Candidate Name":"sk.henrichg.phoneprofilesplus.GlobalData.logE",
				"Candidate Score":92,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.database.sqlite.SQLiteOpenHelper.getDatabaseLocked",
							"android.database.sqlite.SQLiteOpenHelper.<clinit>",
							"android.database.sqlite.SQLiteOpenHelper.<clinit>",
							"android.database.sqlite.SQLiteOpenHelper.setFilePermissionsForDb",
							"<sk.henrichg.phoneprofilesplus.DatabaseHandler: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>",
							"<sk.henrichg.phoneprofilesplus.DatabaseHandler: java.lang.String profileTableCreationString(java.lang.String)>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.database.Cursor: boolean isNull(int)>",
							"<android.database.Cursor: long getLong(int)>",
							"<android.database.Cursor: int getInt(int)>",
							"<sk.henrichg.phoneprofilesplus.Profile: long convertBrightnessToPercents(int,int,int,android.content.Context)>",
							"<java.lang.Math: long round(double)>",
							"<java.lang.Integer: int parseInt(java.lang.String)>",
							"<android.database.Cursor: boolean moveToNext()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(long)>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<java.lang.String: java.lang.String[] split(java.lang.String)>",
							"<java.lang.Long: long parseLong(java.lang.String)>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>",
							"<java.util.TimeZone: int getRawOffset()>",
							"<java.util.TimeZone: java.util.TimeZone getDefault()>",
							"<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>",
							"<sk.henrichg.phoneprofilesplus.GlobalData: void logE(java.lang.String,java.lang.String)>",
							"<sk.henrichg.phoneprofilesplus.GlobalData: boolean logContainsFilterTag(java.lang.String)>",
							"<java.lang.String: java.lang.String[] split(java.lang.String)>",
							"<java.lang.String: boolean contains(java.lang.CharSequence)>",
							"<sk.henrichg.phoneprofilesplus.GlobalData: void logIntoFile(java.lang.String,java.lang.String,java.lang.String)>",
							"<android.os.Environment: java.io.File getExternalStorageDirectory()>",
							"<java.lang.Throwable: void printStackTrace()>",
							"<java.io.BufferedWriter: void close()>",
							"<java.io.BufferedWriter: void flush()>",
							"<java.io.BufferedWriter: void newLine()>",
							"<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.text.Format: java.lang.String format(java.lang.Object)>",
							"<java.lang.Long: java.lang.Long valueOf(long)>",
							"<java.util.Calendar: long getTimeInMillis()>",
							"<java.util.Calendar: java.util.Calendar getInstance()>",
							"<java.text.SimpleDateFormat: void <init>(java.lang.String)>",
							"<java.io.BufferedWriter: void <init>(java.io.Writer)>",
							"<java.io.FileWriter: void <init>(java.io.File,boolean)>",
							"<java.io.File: boolean createNewFile()>",
							"<sk.henrichg.phoneprofilesplus.GlobalData: void resetLog()>",
							"<android.os.Environment: java.io.File getExternalStorageDirectory()>",
							"<java.io.File: boolean delete()>",
							"<java.io.File: boolean mkdirs()>",
							"<java.io.File: boolean isDirectory()>",
							"<java.io.File: boolean exists()>",
							"<java.io.File: void <init>(java.io.File,java.lang.String)>",
							"<java.io.File: long length()>",
							"<java.io.File: boolean mkdirs()>",
							"<java.io.File: boolean isDirectory()>",
							"<java.io.File: boolean exists()>",
							"<java.io.File: void <init>(java.io.File,java.lang.String)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"android.database.sqlite.SQLiteOpenHelper.onUpgrade",
							"android.database.sqlite.SQLiteOpenHelper.onDowngrade",
							"android.database.sqlite.SQLiteOpenHelper.getDatabaseLocked",
							"<sk.henrichg.phoneprofilesplus.DatabaseHandler: void onCreate(android.database.sqlite.SQLiteDatabase)>",
							"<sk.henrichg.phoneprofilesplus.DatabaseHandler: java.lang.String profileTableCreationString(java.lang.String)>",
							"<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>",
							"android.database.sqlite.SQLiteOpenHelper.onCreate",
							"android.database.sqlite.SQLiteOpenHelper.onBeforeDelete",
							"android.database.sqlite.SQLiteOpenHelper.onConfigure",
							"android.database.sqlite.SQLiteOpenHelper.onOpen"
						]
					}
				]
			},
			{
				"Candidate Name":"sk.henrichg.phoneprofilesplus.Profile.convertBrightnessToPercents",
				"Candidate Score":92,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.database.sqlite.SQLiteOpenHelper.getDatabaseLocked",
							"android.database.sqlite.SQLiteOpenHelper.<clinit>",
							"android.database.sqlite.SQLiteOpenHelper.<clinit>",
							"android.database.sqlite.SQLiteOpenHelper.setFilePermissionsForDb",
							"<sk.henrichg.phoneprofilesplus.DatabaseHandler: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>",
							"<sk.henrichg.phoneprofilesplus.DatabaseHandler: java.lang.String profileTableCreationString(java.lang.String)>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.database.Cursor: boolean isNull(int)>",
							"<android.database.Cursor: long getLong(int)>",
							"<android.database.Cursor: int getInt(int)>",
							"<sk.henrichg.phoneprofilesplus.Profile: long convertBrightnessToPercents(int,int,int,android.content.Context)>",
							"<java.lang.Math: long round(double)>",
							"<java.lang.Integer: int parseInt(java.lang.String)>",
							"<android.database.Cursor: boolean moveToNext()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(long)>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<java.lang.String: java.lang.String[] split(java.lang.String)>",
							"<java.lang.Long: long parseLong(java.lang.String)>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>",
							"<java.util.TimeZone: int getRawOffset()>",
							"<java.util.TimeZone: java.util.TimeZone getDefault()>",
							"<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>",
							"<sk.henrichg.phoneprofilesplus.GlobalData: void logE(java.lang.String,java.lang.String)>",
							"<sk.henrichg.phoneprofilesplus.GlobalData: boolean logContainsFilterTag(java.lang.String)>",
							"<java.lang.String: java.lang.String[] split(java.lang.String)>",
							"<java.lang.String: boolean contains(java.lang.CharSequence)>",
							"<sk.henrichg.phoneprofilesplus.GlobalData: void logIntoFile(java.lang.String,java.lang.String,java.lang.String)>",
							"<android.os.Environment: java.io.File getExternalStorageDirectory()>",
							"<java.lang.Throwable: void printStackTrace()>",
							"<java.io.BufferedWriter: void close()>",
							"<java.io.BufferedWriter: void flush()>",
							"<java.io.BufferedWriter: void newLine()>",
							"<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.text.Format: java.lang.String format(java.lang.Object)>",
							"<java.lang.Long: java.lang.Long valueOf(long)>",
							"<java.util.Calendar: long getTimeInMillis()>",
							"<java.util.Calendar: java.util.Calendar getInstance()>",
							"<java.text.SimpleDateFormat: void <init>(java.lang.String)>",
							"<java.io.BufferedWriter: void <init>(java.io.Writer)>",
							"<java.io.FileWriter: void <init>(java.io.File,boolean)>",
							"<java.io.File: boolean createNewFile()>",
							"<sk.henrichg.phoneprofilesplus.GlobalData: void resetLog()>",
							"<android.os.Environment: java.io.File getExternalStorageDirectory()>",
							"<java.io.File: boolean delete()>",
							"<java.io.File: boolean mkdirs()>",
							"<java.io.File: boolean isDirectory()>",
							"<java.io.File: boolean exists()>",
							"<java.io.File: void <init>(java.io.File,java.lang.String)>",
							"<java.io.File: long length()>",
							"<java.io.File: boolean mkdirs()>",
							"<java.io.File: boolean isDirectory()>",
							"<java.io.File: boolean exists()>",
							"<java.io.File: void <init>(java.io.File,java.lang.String)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"android.database.sqlite.SQLiteOpenHelper.onUpgrade",
							"android.database.sqlite.SQLiteOpenHelper.onDowngrade",
							"android.database.sqlite.SQLiteOpenHelper.getDatabaseLocked",
							"<sk.henrichg.phoneprofilesplus.DatabaseHandler: void onCreate(android.database.sqlite.SQLiteDatabase)>",
							"<sk.henrichg.phoneprofilesplus.DatabaseHandler: java.lang.String profileTableCreationString(java.lang.String)>",
							"<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>",
							"android.database.sqlite.SQLiteOpenHelper.onCreate",
							"android.database.sqlite.SQLiteOpenHelper.onBeforeDelete",
							"android.database.sqlite.SQLiteOpenHelper.onConfigure",
							"android.database.sqlite.SQLiteOpenHelper.onOpen"
						]
					}
				]
			},
			{
				"Candidate Name":"sk.henrichg.phoneprofilesplus.GlobalData.logContainsFilterTag",
				"Candidate Score":91,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.database.sqlite.SQLiteOpenHelper.getDatabaseLocked",
							"android.database.sqlite.SQLiteOpenHelper.<clinit>",
							"android.database.sqlite.SQLiteOpenHelper.<clinit>",
							"android.database.sqlite.SQLiteOpenHelper.setFilePermissionsForDb",
							"<sk.henrichg.phoneprofilesplus.DatabaseHandler: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>",
							"<sk.henrichg.phoneprofilesplus.DatabaseHandler: java.lang.String profileTableCreationString(java.lang.String)>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.database.Cursor: boolean isNull(int)>",
							"<android.database.Cursor: long getLong(int)>",
							"<android.database.Cursor: int getInt(int)>",
							"<sk.henrichg.phoneprofilesplus.Profile: long convertBrightnessToPercents(int,int,int,android.content.Context)>",
							"<java.lang.Math: long round(double)>",
							"<java.lang.Integer: int parseInt(java.lang.String)>",
							"<android.database.Cursor: boolean moveToNext()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(long)>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<java.lang.String: java.lang.String[] split(java.lang.String)>",
							"<java.lang.Long: long parseLong(java.lang.String)>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>",
							"<java.util.TimeZone: int getRawOffset()>",
							"<java.util.TimeZone: java.util.TimeZone getDefault()>",
							"<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>",
							"<sk.henrichg.phoneprofilesplus.GlobalData: void logE(java.lang.String,java.lang.String)>",
							"<sk.henrichg.phoneprofilesplus.GlobalData: boolean logContainsFilterTag(java.lang.String)>",
							"<java.lang.String: java.lang.String[] split(java.lang.String)>",
							"<java.lang.String: boolean contains(java.lang.CharSequence)>",
							"<sk.henrichg.phoneprofilesplus.GlobalData: void logIntoFile(java.lang.String,java.lang.String,java.lang.String)>",
							"<android.os.Environment: java.io.File getExternalStorageDirectory()>",
							"<java.lang.Throwable: void printStackTrace()>",
							"<java.io.BufferedWriter: void close()>",
							"<java.io.BufferedWriter: void flush()>",
							"<java.io.BufferedWriter: void newLine()>",
							"<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.text.Format: java.lang.String format(java.lang.Object)>",
							"<java.lang.Long: java.lang.Long valueOf(long)>",
							"<java.util.Calendar: long getTimeInMillis()>",
							"<java.util.Calendar: java.util.Calendar getInstance()>",
							"<java.text.SimpleDateFormat: void <init>(java.lang.String)>",
							"<java.io.BufferedWriter: void <init>(java.io.Writer)>",
							"<java.io.FileWriter: void <init>(java.io.File,boolean)>",
							"<java.io.File: boolean createNewFile()>",
							"<sk.henrichg.phoneprofilesplus.GlobalData: void resetLog()>",
							"<android.os.Environment: java.io.File getExternalStorageDirectory()>",
							"<java.io.File: boolean delete()>",
							"<java.io.File: boolean mkdirs()>",
							"<java.io.File: boolean isDirectory()>",
							"<java.io.File: boolean exists()>",
							"<java.io.File: void <init>(java.io.File,java.lang.String)>",
							"<java.io.File: long length()>",
							"<java.io.File: boolean mkdirs()>",
							"<java.io.File: boolean isDirectory()>",
							"<java.io.File: boolean exists()>",
							"<java.io.File: void <init>(java.io.File,java.lang.String)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"android.database.sqlite.SQLiteOpenHelper.onUpgrade",
							"android.database.sqlite.SQLiteOpenHelper.onDowngrade",
							"android.database.sqlite.SQLiteOpenHelper.getDatabaseLocked",
							"<sk.henrichg.phoneprofilesplus.DatabaseHandler: void onCreate(android.database.sqlite.SQLiteDatabase)>",
							"<sk.henrichg.phoneprofilesplus.DatabaseHandler: java.lang.String profileTableCreationString(java.lang.String)>",
							"<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>",
							"android.database.sqlite.SQLiteOpenHelper.onCreate",
							"android.database.sqlite.SQLiteOpenHelper.onBeforeDelete",
							"android.database.sqlite.SQLiteOpenHelper.onConfigure",
							"android.database.sqlite.SQLiteOpenHelper.onOpen"
						]
					}
				]
			},
			{
				"Candidate Name":"sk.henrichg.phoneprofilesplus.GlobalData.logIntoFile",
				"Candidate Score":91,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.database.sqlite.SQLiteOpenHelper.getDatabaseLocked",
							"android.database.sqlite.SQLiteOpenHelper.<clinit>",
							"android.database.sqlite.SQLiteOpenHelper.<clinit>",
							"android.database.sqlite.SQLiteOpenHelper.setFilePermissionsForDb",
							"<sk.henrichg.phoneprofilesplus.DatabaseHandler: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>",
							"<sk.henrichg.phoneprofilesplus.DatabaseHandler: java.lang.String profileTableCreationString(java.lang.String)>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.database.Cursor: boolean isNull(int)>",
							"<android.database.Cursor: long getLong(int)>",
							"<android.database.Cursor: int getInt(int)>",
							"<sk.henrichg.phoneprofilesplus.Profile: long convertBrightnessToPercents(int,int,int,android.content.Context)>",
							"<java.lang.Math: long round(double)>",
							"<java.lang.Integer: int parseInt(java.lang.String)>",
							"<android.database.Cursor: boolean moveToNext()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(long)>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<java.lang.String: java.lang.String[] split(java.lang.String)>",
							"<java.lang.Long: long parseLong(java.lang.String)>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>",
							"<java.util.TimeZone: int getRawOffset()>",
							"<java.util.TimeZone: java.util.TimeZone getDefault()>",
							"<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>",
							"<sk.henrichg.phoneprofilesplus.GlobalData: void logE(java.lang.String,java.lang.String)>",
							"<sk.henrichg.phoneprofilesplus.GlobalData: boolean logContainsFilterTag(java.lang.String)>",
							"<java.lang.String: java.lang.String[] split(java.lang.String)>",
							"<java.lang.String: boolean contains(java.lang.CharSequence)>",
							"<sk.henrichg.phoneprofilesplus.GlobalData: void logIntoFile(java.lang.String,java.lang.String,java.lang.String)>",
							"<android.os.Environment: java.io.File getExternalStorageDirectory()>",
							"<java.lang.Throwable: void printStackTrace()>",
							"<java.io.BufferedWriter: void close()>",
							"<java.io.BufferedWriter: void flush()>",
							"<java.io.BufferedWriter: void newLine()>",
							"<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.text.Format: java.lang.String format(java.lang.Object)>",
							"<java.lang.Long: java.lang.Long valueOf(long)>",
							"<java.util.Calendar: long getTimeInMillis()>",
							"<java.util.Calendar: java.util.Calendar getInstance()>",
							"<java.text.SimpleDateFormat: void <init>(java.lang.String)>",
							"<java.io.BufferedWriter: void <init>(java.io.Writer)>",
							"<java.io.FileWriter: void <init>(java.io.File,boolean)>",
							"<java.io.File: boolean createNewFile()>",
							"<sk.henrichg.phoneprofilesplus.GlobalData: void resetLog()>",
							"<android.os.Environment: java.io.File getExternalStorageDirectory()>",
							"<java.io.File: boolean delete()>",
							"<java.io.File: boolean mkdirs()>",
							"<java.io.File: boolean isDirectory()>",
							"<java.io.File: boolean exists()>",
							"<java.io.File: void <init>(java.io.File,java.lang.String)>",
							"<java.io.File: long length()>",
							"<java.io.File: boolean mkdirs()>",
							"<java.io.File: boolean isDirectory()>",
							"<java.io.File: boolean exists()>",
							"<java.io.File: void <init>(java.io.File,java.lang.String)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"android.database.sqlite.SQLiteOpenHelper.onUpgrade",
							"android.database.sqlite.SQLiteOpenHelper.onDowngrade",
							"android.database.sqlite.SQLiteOpenHelper.getDatabaseLocked",
							"<sk.henrichg.phoneprofilesplus.DatabaseHandler: void onCreate(android.database.sqlite.SQLiteDatabase)>",
							"<sk.henrichg.phoneprofilesplus.DatabaseHandler: java.lang.String profileTableCreationString(java.lang.String)>",
							"<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>",
							"android.database.sqlite.SQLiteOpenHelper.onCreate",
							"android.database.sqlite.SQLiteOpenHelper.onBeforeDelete",
							"android.database.sqlite.SQLiteOpenHelper.onConfigure",
							"android.database.sqlite.SQLiteOpenHelper.onOpen"
						]
					}
				]
			},
			{
				"Candidate Name":"sk.henrichg.phoneprofilesplus.GlobalData.resetLog",
				"Candidate Score":90,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.database.sqlite.SQLiteOpenHelper.getDatabaseLocked",
							"android.database.sqlite.SQLiteOpenHelper.<clinit>",
							"android.database.sqlite.SQLiteOpenHelper.<clinit>",
							"android.database.sqlite.SQLiteOpenHelper.setFilePermissionsForDb",
							"<sk.henrichg.phoneprofilesplus.DatabaseHandler: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>",
							"<sk.henrichg.phoneprofilesplus.DatabaseHandler: java.lang.String profileTableCreationString(java.lang.String)>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.database.Cursor: boolean isNull(int)>",
							"<android.database.Cursor: long getLong(int)>",
							"<android.database.Cursor: int getInt(int)>",
							"<sk.henrichg.phoneprofilesplus.Profile: long convertBrightnessToPercents(int,int,int,android.content.Context)>",
							"<java.lang.Math: long round(double)>",
							"<java.lang.Integer: int parseInt(java.lang.String)>",
							"<android.database.Cursor: boolean moveToNext()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(long)>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<java.lang.String: java.lang.String[] split(java.lang.String)>",
							"<java.lang.Long: long parseLong(java.lang.String)>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>",
							"<java.util.TimeZone: int getRawOffset()>",
							"<java.util.TimeZone: java.util.TimeZone getDefault()>",
							"<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>",
							"<sk.henrichg.phoneprofilesplus.GlobalData: void logE(java.lang.String,java.lang.String)>",
							"<sk.henrichg.phoneprofilesplus.GlobalData: boolean logContainsFilterTag(java.lang.String)>",
							"<java.lang.String: java.lang.String[] split(java.lang.String)>",
							"<java.lang.String: boolean contains(java.lang.CharSequence)>",
							"<sk.henrichg.phoneprofilesplus.GlobalData: void logIntoFile(java.lang.String,java.lang.String,java.lang.String)>",
							"<android.os.Environment: java.io.File getExternalStorageDirectory()>",
							"<java.lang.Throwable: void printStackTrace()>",
							"<java.io.BufferedWriter: void close()>",
							"<java.io.BufferedWriter: void flush()>",
							"<java.io.BufferedWriter: void newLine()>",
							"<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.text.Format: java.lang.String format(java.lang.Object)>",
							"<java.lang.Long: java.lang.Long valueOf(long)>",
							"<java.util.Calendar: long getTimeInMillis()>",
							"<java.util.Calendar: java.util.Calendar getInstance()>",
							"<java.text.SimpleDateFormat: void <init>(java.lang.String)>",
							"<java.io.BufferedWriter: void <init>(java.io.Writer)>",
							"<java.io.FileWriter: void <init>(java.io.File,boolean)>",
							"<java.io.File: boolean createNewFile()>",
							"<sk.henrichg.phoneprofilesplus.GlobalData: void resetLog()>",
							"<android.os.Environment: java.io.File getExternalStorageDirectory()>",
							"<java.io.File: boolean delete()>",
							"<java.io.File: boolean mkdirs()>",
							"<java.io.File: boolean isDirectory()>",
							"<java.io.File: boolean exists()>",
							"<java.io.File: void <init>(java.io.File,java.lang.String)>",
							"<java.io.File: long length()>",
							"<java.io.File: boolean mkdirs()>",
							"<java.io.File: boolean isDirectory()>",
							"<java.io.File: boolean exists()>",
							"<java.io.File: void <init>(java.io.File,java.lang.String)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"android.database.sqlite.SQLiteOpenHelper.onUpgrade",
							"android.database.sqlite.SQLiteOpenHelper.onDowngrade",
							"android.database.sqlite.SQLiteOpenHelper.getDatabaseLocked",
							"<sk.henrichg.phoneprofilesplus.DatabaseHandler: void onCreate(android.database.sqlite.SQLiteDatabase)>",
							"<sk.henrichg.phoneprofilesplus.DatabaseHandler: java.lang.String profileTableCreationString(java.lang.String)>",
							"<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>",
							"android.database.sqlite.SQLiteOpenHelper.onCreate",
							"android.database.sqlite.SQLiteOpenHelper.onBeforeDelete",
							"android.database.sqlite.SQLiteOpenHelper.onConfigure",
							"android.database.sqlite.SQLiteOpenHelper.onOpen"
						]
					}
				]
			}
		],
		"None-Code Labels":[]
	}
}