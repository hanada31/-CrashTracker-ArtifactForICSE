{
	"Crash Info in Dataset":{
		"Apk name":"com.outthinking.textonpic-365",
		"Method":"android.app.Instrumentation.checkStartActivityResult",
		"Crash Message":"No Activity found to handle Intent { act=android.intent.action.VIEW dat=market://search?q=pub:Pavan+Kumar+Reddy.+D }",
		"stack trace":[
			"android.app.Instrumentation.checkStartActivityResult",
			"android.app.Instrumentation.execStartActivity",
			"android.app.Activity.startActivityForResult",
			"android.app.Activity.startActivityForResult",
			"android.app.Activity.startActivity",
			"android.app.Activity.startActivity",
			"com.outthinking.textonpic.TextOnPices.onClick",
			"android.view.View.performClick",
			"android.view.View$PerformClick.run",
			"android.os.Handler.handleCallback",
			"android.os.Handler.dispatchMessage",
			"android.os.Looper.loop",
			"android.app.ActivityThread.main",
			"java.lang.reflect.Method.invoke",
			"com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run",
			"com.android.internal.os.ZygoteInit.main"
		],
		"Labeled Buggy Method":"com.outthinking.textonpic.TextOnPices.onClick"
	},
	"Fault Localization by CrashTracker":{
		"Regression Message":"\\QNo Activity found to handle \\E[\\s\\S]*",
		"Related Variable Type":"Parameter",
		"Fault Inducing Paras":[
			0
		],
		"Related Condition Type":"BasicCondition",
		"Conditions":"\"$z1 == 0\", \"i0\", \"$z0 != 0\", \"$r9 == null\"",
		"ETS-related Type":"OnlyKeyVar",
		"Buggy Method Candidates":[
			{
				"Candidate Name":"com.outthinking.textonpic.TextOnPices.onClick",
				"Candidate Score":100,
				"Reasons":[
					{
						"Reason Type":"Key Variable Related 1",
						"Explanation":"Influences the value of keyVar by modifying the value of the passed parameters",
						"Influenced parameter id":[
							0
						],
						"Influenced method":"android.app.Instrumentation.checkStartActivityResult",
						"Trace":[
							"<com.outthinking.textonpic.TextOnPices: void onClick(android.view.View)>"
						]
					},
					{
						"Reason Type":"Key Variable Related 1",
						"Explanation":"Influences the value of keyVar by modifying the value of the passed parameters",
						"Influenced parameter id":"1, 0",
						"Influenced method":"android.app.Instrumentation.checkStartActivityResult",
						"Trace":[
							"com.outthinking.textonpic.TextOnPices.onClick"
						]
					}
				]
			},
			{
				"Candidate Name":"com.outthinking.textonpic.TextOnPices$1.<init>",
				"Candidate Score":97,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"<android.app.Activity: void startActivity(android.content.Intent)>",
							"<com.outthinking.textonpic.TextOnPices: void onClick(android.view.View)>",
							"android.app.Activity.startActivity",
							"android.app.Activity.startActivityForResult",
							"android.app.Activity.transferSpringboardActivityOptions",
							"android.app.ActivityOptions.getAnimationType",
							"android.app.Activity.getActivityOptions",
							"android.app.ActivityManager.getService",
							"android.app.ActivityManager.<clinit>",
							"android.app.ActivityManager.<clinit>",
							"<com.outthinking.textonpic.TextOnPices$1: void <init>(com.outthinking.textonpic.TextOnPices)>",
							"<java.lang.Object: void <init>()>",
							"android.app.ActivityManager$1.<init>",
							"android.app.ActivityOptions.fromBundle",
							"<com.outthinking.textonpic.TextOnPices: void <init>()>",
							"<android.app.Activity: void <init>()>",
							"<com.outthinking.badgeads.Xmlvalues: void <init>()>",
							"<android.app.Activity: void <init>()>",
							"<android.os.Handler: void <init>()>",
							"android.app.ActivityOptions.<init>",
							"<com.outthinking.textonpic.TextOnPices: void <init>()>",
							"android.app.ActivityOptions.<init>",
							"android.app.ActivityManager.<clinit>",
							"android.app.ActivityOptions.toBundle",
							"android.app.Activity.cancelInputsAndStartExitTransition",
							"android.app.ActivityTransitionState.startExitOutTransition",
							"android.app.Activity.isTopOfTask",
							"android.app.ActivityManager.getService",
							"android.app.ActivityManager.<clinit>",
							"android.app.Activity.getActivityToken",
							"android.app.Activity.getActivityToken",
							"android.app.Activity.startActivityForResult",
							"android.app.ActivityThread.sendActivityResult",
							"android.app.ActivityThread$ApplicationThread.scheduleSendResult",
							"android.app.ActivityThread.getApplicationThread",
							"android.app.Activity.onProvideReferrer",
							"android.app.Activity.startActivityFromChild",
							"android.app.Activity.transferSpringboardActivityOptions",
							"android.app.Activity.cancelInputsAndStartExitTransition",
							"android.app.ActivityThread.sendActivityResult",
							"android.app.ActivityThread.getApplicationThread",
							"android.app.Activity.startActivityFromChild"
						]
					}
				]
			},
			{
				"Candidate Name":"com.outthinking.textonpic.TextOnPices.<init>",
				"Candidate Score":97,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"<android.app.Activity: void startActivity(android.content.Intent)>",
							"<com.outthinking.textonpic.TextOnPices: void onClick(android.view.View)>",
							"android.app.Activity.startActivity",
							"android.app.Activity.startActivityForResult",
							"android.app.Activity.transferSpringboardActivityOptions",
							"android.app.ActivityOptions.getAnimationType",
							"android.app.Activity.getActivityOptions",
							"android.app.ActivityManager.getService",
							"android.app.ActivityManager.<clinit>",
							"android.app.ActivityManager.<clinit>",
							"<com.outthinking.textonpic.TextOnPices$1: void <init>(com.outthinking.textonpic.TextOnPices)>",
							"<java.lang.Object: void <init>()>",
							"android.app.ActivityManager$1.<init>",
							"android.app.ActivityOptions.fromBundle",
							"<com.outthinking.textonpic.TextOnPices: void <init>()>",
							"<android.app.Activity: void <init>()>",
							"<com.outthinking.badgeads.Xmlvalues: void <init>()>",
							"<android.app.Activity: void <init>()>",
							"<android.os.Handler: void <init>()>",
							"android.app.ActivityOptions.<init>",
							"<com.outthinking.textonpic.TextOnPices: void <init>()>",
							"android.app.ActivityOptions.<init>",
							"android.app.ActivityManager.<clinit>",
							"android.app.ActivityOptions.toBundle",
							"android.app.Activity.cancelInputsAndStartExitTransition",
							"android.app.ActivityTransitionState.startExitOutTransition",
							"android.app.Activity.isTopOfTask",
							"android.app.ActivityManager.getService",
							"android.app.ActivityManager.<clinit>",
							"android.app.Activity.getActivityToken",
							"android.app.Activity.getActivityToken",
							"android.app.Activity.startActivityForResult",
							"android.app.ActivityThread.sendActivityResult",
							"android.app.ActivityThread$ApplicationThread.scheduleSendResult",
							"android.app.ActivityThread.getApplicationThread",
							"android.app.Activity.onProvideReferrer",
							"android.app.Activity.startActivityFromChild",
							"android.app.Activity.transferSpringboardActivityOptions",
							"android.app.Activity.cancelInputsAndStartExitTransition",
							"android.app.ActivityThread.sendActivityResult",
							"android.app.ActivityThread.getApplicationThread",
							"android.app.Activity.startActivityFromChild"
						]
					},
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"<android.app.Activity: void startActivity(android.content.Intent)>",
							"<com.outthinking.textonpic.TextOnPices: void onClick(android.view.View)>",
							"android.app.Activity.startActivity",
							"android.app.Activity.startActivityForResult",
							"android.app.Activity.transferSpringboardActivityOptions",
							"android.app.ActivityOptions.getAnimationType",
							"android.app.Activity.getActivityOptions",
							"android.app.ActivityManager.getService",
							"android.app.ActivityManager.<clinit>",
							"android.app.ActivityManager.<clinit>",
							"<com.outthinking.textonpic.TextOnPices$1: void <init>(com.outthinking.textonpic.TextOnPices)>",
							"<java.lang.Object: void <init>()>",
							"android.app.ActivityManager$1.<init>",
							"android.app.ActivityOptions.fromBundle",
							"<com.outthinking.textonpic.TextOnPices: void <init>()>",
							"<android.app.Activity: void <init>()>",
							"<com.outthinking.badgeads.Xmlvalues: void <init>()>",
							"<android.app.Activity: void <init>()>",
							"<android.os.Handler: void <init>()>",
							"android.app.ActivityOptions.<init>",
							"<com.outthinking.textonpic.TextOnPices: void <init>()>",
							"android.app.ActivityOptions.<init>",
							"android.app.ActivityManager.<clinit>",
							"android.app.ActivityOptions.toBundle",
							"android.app.Activity.cancelInputsAndStartExitTransition",
							"android.app.ActivityTransitionState.startExitOutTransition",
							"android.app.Activity.isTopOfTask",
							"android.app.ActivityManager.getService",
							"android.app.ActivityManager.<clinit>",
							"android.app.Activity.getActivityToken",
							"android.app.Activity.getActivityToken",
							"android.app.Activity.startActivityForResult",
							"android.app.ActivityThread.sendActivityResult",
							"android.app.ActivityThread$ApplicationThread.scheduleSendResult",
							"android.app.ActivityThread.getApplicationThread",
							"android.app.Activity.onProvideReferrer",
							"android.app.Activity.startActivityFromChild",
							"android.app.Activity.transferSpringboardActivityOptions",
							"android.app.Activity.cancelInputsAndStartExitTransition",
							"android.app.ActivityThread.sendActivityResult",
							"android.app.ActivityThread.getApplicationThread",
							"android.app.Activity.startActivityFromChild"
						]
					}
				]
			}
		],
		"None-Code Labels":[]
	}
}