{
	"Crash Info in Dataset":{
		"Apk name":"cgeo.geocaching-4275",
		"Method":"android.app.FragmentManagerImpl.enqueueAction",
		"Crash Message":"Activity has been destroyed",
		"stack trace":[
			"android.app.FragmentManagerImpl.enqueueAction",
			"android.app.BackStackRecord.commitInternal",
			"android.app.BackStackRecord.commit",
			"android.nfc.NfcFragment.attach",
			"android.nfc.NfcActivityManager.getOrCreateState",
			"android.nfc.NfcActivityManager.setNdefPushMessageCallback",
			"android.nfc.NfcAdapter.setNdefPushMessageCallback",
			"cgeo.geocaching.activity.AbstractActivity.initializeICSAndroidBeam",
			"cgeo.geocaching.activity.AbstractActivity.initializeAndroidBeam",
			"cgeo.geocaching.TrackableActivity.access$700",
			"cgeo.geocaching.TrackableActivity$1.handleMessage",
			"android.os.Handler.dispatchMessage",
			"android.os.Looper.loop",
			"android.app.ActivityThread.main",
			"java.lang.reflect.Method.invokeNative",
			"java.lang.reflect.Method.invoke",
			"com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run",
			"com.android.internal.os.ZygoteInit.main",
			"dalvik.system.NativeStart.main"
		],
		"Labeled Buggy Method":"cgeo.geocaching.activity.AbstractActivity.initializeICSAndroidBeam"
	},
	"Fault Localization by CrashTracker":{
		"Regression Message":"\\QActivity has been destroyed\\E",
		"Related Variable Type":"ParaAndField",
		"Related Condition Type":"BasicCondition",
		"Conditions":"\"z0 == 0\", \"$z1 != 0\", \"z0 != 0\", \"$r4 != null\"",
		"ETS-related Type":"KeyVarAndKeyAPI",
		"Buggy Method Candidates":[
			{
				"Candidate Name":"cgeo.geocaching.activity.AbstractActivity.initializeICSAndroidBeam",
				"Candidate Score":99,
				"Reasons":[
					{
						"Reason Type":"Executed Method 1",
						"Explanation":"Not influence the keyVar but in crash trace",
						"Trace":[
							"cgeo.geocaching.activity.AbstractActivity.initializeICSAndroidBeam"
						]
					},
					{
						"Reason Type":"Key Variable Related 1",
						"Explanation":"Influences the value of keyVar by modifying the value of the passed parameters",
						"Influenced parameter id":[
							"1"
						],
						"Influenced method":"android.app.FragmentManagerImpl.enqueueAction",
						"Trace":[
							"<cgeo.geocaching.activity.AbstractActivity: void initializeICSAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>"
						]
					},
					{
						"Reason Type":"Key Variable Related 1",
						"Explanation":"Influences the value of keyVar by modifying the value of the passed parameters",
						"Influenced parameter id":"1",
						"Influenced method":"android.app.FragmentManagerImpl.enqueueAction",
						"Trace":[
							"cgeo.geocaching.activity.AbstractActivity.initializeICSAndroidBeam"
						]
					},
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.Handler.dispatchMessage",
							"android.os.Handler$Callback.handleMessage",
							"android.os.Handler.<clinit>",
							"android.os.Handler.<clinit>",
							"<cgeo.geocaching.TrackableActivity$1: void handleMessage(android.os.Message)>",
							"<cgeo.geocaching.TrackableActivity: cgeo.geocaching.Trackable access$000(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.utils.Log: void e(java.lang.String,java.lang.Throwable)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<cgeo.geocaching.TrackableActivity: void access$700(cgeo.geocaching.TrackableActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeICSAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>",
							"<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>",
							"<cgeo.geocaching.activity.AbstractActivity$1: void <init>(cgeo.geocaching.activity.AbstractActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity$1$1: void <init>(cgeo.geocaching.TrackableActivity$1)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity: void access$600(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: void reinitializeViewPager()>",
							"<java.util.Map: java.util.Collection values()>",
							"<com.viewpagerindicator.TitlePageIndicator: void notifyDataSetChanged()>",
							"<android.view.View: void invalidate()>",
							"<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$ViewPagerAdapter: int getCount()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: java.util.List access$000(cgeo.geocaching.activity.AbstractViewPagerActivity)>",
							"<java.util.List: int size()>",
							"<java.lang.Integer: int intValue()>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getRight()>",
							"<android.support.v4.view.PagerAdapter: void notifyDataSetChanged()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: int getCurrentItem()>",
							"<android.support.v4.view.ViewPager: int getCurrentItem()>",
							"<java.util.List: boolean addAll(java.util.Collection)>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getLeft()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: org.apache.commons.lang3.tuple.Pair getOrderedPages()>",
							"<java.util.List: void clear()>",
							"<android.os.Bundle: void clear()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$PageViewCreator: void notifyDataSetChanged()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.Collection: java.util.Iterator iterator()>",
							"<cgeo.geocaching.activity.AbstractActivity: void invalidateOptionsMenuCompatible()>",
							"<cgeo.geocaching.activity.ActivityMixin: void invalidateOptionsMenu(android.app.Activity)>",
							"<android.support.v7.app.ActionBarActivity: void supportInvalidateOptionsMenu()>",
							"<android.support.v4.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)>",
							"<cgeo.geocaching.activity.AbstractActionBarActivity: void setTitle(java.lang.CharSequence)>",
							"<android.app.Activity: void setTitle(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin: void setTitle(android.app.Activity,java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<java.lang.CharSequence: int length()>",
							"<java.lang.Character: boolean isWhitespace(char)>",
							"<java.lang.CharSequence: char charAt(int)>",
							"<android.support.v7.app.ActionBar: void setTitle(java.lang.CharSequence)>",
							"<android.support.v7.app.ActionBarActivity: android.support.v7.app.ActionBar getSupportActionBar()>",
							"<java.lang.Object: java.lang.String toString()>",
							"<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getName()>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$202(cgeo.geocaching.TrackableActivity,java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getGeocode()>",
							"<cgeo.geocaching.TrackableActivity: android.view.LayoutInflater access$502(cgeo.geocaching.TrackableActivity,android.view.LayoutInflater)>",
							"<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$400(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Activity: void finish()>",
							"<cgeo.geocaching.activity.AbstractActivity: void showToast(java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void showToast(android.app.Activity,java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void postShowToast(android.app.Activity,java.lang.String,int)>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void run()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.app.Activity: void runOnUiThread(java.lang.Runnable)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void <init>(android.app.Activity,java.lang.String,int)>",
							"<java.lang.Object: void <init>()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<android.content.res.Resources: java.lang.String getString(int)>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$300(cgeo.geocaching.TrackableActivity)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$200(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Dialog: void dismiss()>",
							"<cgeo.geocaching.TrackableActivity: android.app.ProgressDialog access$100(cgeo.geocaching.TrackableActivity)>",
							"android.os.Handler.handleMessage",
							"android.os.Handler.handleCallback",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.HandlerThread.run",
							"android.os.HandlerThread.onLooperPrepared"
						]
					}
				]
			},
			{
				"Candidate Name":"cgeo.geocaching.activity.AbstractActivity$1.<init>",
				"Candidate Score":90,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.Handler.dispatchMessage",
							"android.os.Handler$Callback.handleMessage",
							"android.os.Handler.<clinit>",
							"android.os.Handler.<clinit>",
							"<cgeo.geocaching.TrackableActivity$1: void handleMessage(android.os.Message)>",
							"<cgeo.geocaching.TrackableActivity: cgeo.geocaching.Trackable access$000(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.utils.Log: void e(java.lang.String,java.lang.Throwable)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<cgeo.geocaching.TrackableActivity: void access$700(cgeo.geocaching.TrackableActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeICSAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>",
							"<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>",
							"<cgeo.geocaching.activity.AbstractActivity$1: void <init>(cgeo.geocaching.activity.AbstractActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity$1$1: void <init>(cgeo.geocaching.TrackableActivity$1)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity: void access$600(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: void reinitializeViewPager()>",
							"<java.util.Map: java.util.Collection values()>",
							"<com.viewpagerindicator.TitlePageIndicator: void notifyDataSetChanged()>",
							"<android.view.View: void invalidate()>",
							"<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$ViewPagerAdapter: int getCount()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: java.util.List access$000(cgeo.geocaching.activity.AbstractViewPagerActivity)>",
							"<java.util.List: int size()>",
							"<java.lang.Integer: int intValue()>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getRight()>",
							"<android.support.v4.view.PagerAdapter: void notifyDataSetChanged()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: int getCurrentItem()>",
							"<android.support.v4.view.ViewPager: int getCurrentItem()>",
							"<java.util.List: boolean addAll(java.util.Collection)>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getLeft()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: org.apache.commons.lang3.tuple.Pair getOrderedPages()>",
							"<java.util.List: void clear()>",
							"<android.os.Bundle: void clear()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$PageViewCreator: void notifyDataSetChanged()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.Collection: java.util.Iterator iterator()>",
							"<cgeo.geocaching.activity.AbstractActivity: void invalidateOptionsMenuCompatible()>",
							"<cgeo.geocaching.activity.ActivityMixin: void invalidateOptionsMenu(android.app.Activity)>",
							"<android.support.v7.app.ActionBarActivity: void supportInvalidateOptionsMenu()>",
							"<android.support.v4.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)>",
							"<cgeo.geocaching.activity.AbstractActionBarActivity: void setTitle(java.lang.CharSequence)>",
							"<android.app.Activity: void setTitle(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin: void setTitle(android.app.Activity,java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<java.lang.CharSequence: int length()>",
							"<java.lang.Character: boolean isWhitespace(char)>",
							"<java.lang.CharSequence: char charAt(int)>",
							"<android.support.v7.app.ActionBar: void setTitle(java.lang.CharSequence)>",
							"<android.support.v7.app.ActionBarActivity: android.support.v7.app.ActionBar getSupportActionBar()>",
							"<java.lang.Object: java.lang.String toString()>",
							"<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getName()>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$202(cgeo.geocaching.TrackableActivity,java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getGeocode()>",
							"<cgeo.geocaching.TrackableActivity: android.view.LayoutInflater access$502(cgeo.geocaching.TrackableActivity,android.view.LayoutInflater)>",
							"<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$400(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Activity: void finish()>",
							"<cgeo.geocaching.activity.AbstractActivity: void showToast(java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void showToast(android.app.Activity,java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void postShowToast(android.app.Activity,java.lang.String,int)>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void run()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.app.Activity: void runOnUiThread(java.lang.Runnable)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void <init>(android.app.Activity,java.lang.String,int)>",
							"<java.lang.Object: void <init>()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<android.content.res.Resources: java.lang.String getString(int)>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$300(cgeo.geocaching.TrackableActivity)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$200(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Dialog: void dismiss()>",
							"<cgeo.geocaching.TrackableActivity: android.app.ProgressDialog access$100(cgeo.geocaching.TrackableActivity)>",
							"android.os.Handler.handleMessage",
							"android.os.Handler.handleCallback",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.HandlerThread.run",
							"android.os.HandlerThread.onLooperPrepared"
						]
					},
					{
						"Reason Type":"Key Variable Related 1",
						"Explanation":"Influences the value of keyVar by modifying the value of the passed parameters",
						"Influenced parameter id":0,
						"Influenced method":"android.app.FragmentManagerImpl.enqueueAction",
						"Trace":[
							"android.nfc.NfcAdapter.setNdefPushMessageCallback",
							"cgeo.geocaching.activity.AbstractActivity$1.<init>"
						]
					},
					{
						"Reason Type":"Key Variable Related 1",
						"Explanation":"Influences the value of keyVar by modifying the value of the passed parameters",
						"Influenced parameter id":1,
						"Influenced method":"android.app.FragmentManagerImpl.enqueueAction",
						"Trace":[
							"android.nfc.NfcAdapter.setNdefPushMessageCallback",
							"cgeo.geocaching.activity.AbstractActivity$1.<init>"
						]
					}
				]
			},
			{
				"Candidate Name":"cgeo.geocaching.activity.AbstractActivity.initializeAndroidBeam",
				"Candidate Score":98,
				"Reasons":[
					{
						"Reason Type":"Executed Method 1",
						"Explanation":"Not influence the keyVar but in crash trace",
						"Trace":[
							"cgeo.geocaching.activity.AbstractActivity.initializeAndroidBeam"
						]
					},
					{
						"Reason Type":"Key Variable Related 1",
						"Explanation":"Influences the value of keyVar by modifying the value of the passed parameters",
						"Influenced parameter id":"1",
						"Influenced method":"android.app.FragmentManagerImpl.enqueueAction",
						"Trace":[
							"cgeo.geocaching.activity.AbstractActivity.initializeAndroidBeam"
						]
					},
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.Handler.dispatchMessage",
							"android.os.Handler$Callback.handleMessage",
							"android.os.Handler.<clinit>",
							"android.os.Handler.<clinit>",
							"<cgeo.geocaching.TrackableActivity$1: void handleMessage(android.os.Message)>",
							"<cgeo.geocaching.TrackableActivity: cgeo.geocaching.Trackable access$000(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.utils.Log: void e(java.lang.String,java.lang.Throwable)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<cgeo.geocaching.TrackableActivity: void access$700(cgeo.geocaching.TrackableActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeICSAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>",
							"<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>",
							"<cgeo.geocaching.activity.AbstractActivity$1: void <init>(cgeo.geocaching.activity.AbstractActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity$1$1: void <init>(cgeo.geocaching.TrackableActivity$1)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity: void access$600(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: void reinitializeViewPager()>",
							"<java.util.Map: java.util.Collection values()>",
							"<com.viewpagerindicator.TitlePageIndicator: void notifyDataSetChanged()>",
							"<android.view.View: void invalidate()>",
							"<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$ViewPagerAdapter: int getCount()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: java.util.List access$000(cgeo.geocaching.activity.AbstractViewPagerActivity)>",
							"<java.util.List: int size()>",
							"<java.lang.Integer: int intValue()>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getRight()>",
							"<android.support.v4.view.PagerAdapter: void notifyDataSetChanged()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: int getCurrentItem()>",
							"<android.support.v4.view.ViewPager: int getCurrentItem()>",
							"<java.util.List: boolean addAll(java.util.Collection)>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getLeft()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: org.apache.commons.lang3.tuple.Pair getOrderedPages()>",
							"<java.util.List: void clear()>",
							"<android.os.Bundle: void clear()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$PageViewCreator: void notifyDataSetChanged()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.Collection: java.util.Iterator iterator()>",
							"<cgeo.geocaching.activity.AbstractActivity: void invalidateOptionsMenuCompatible()>",
							"<cgeo.geocaching.activity.ActivityMixin: void invalidateOptionsMenu(android.app.Activity)>",
							"<android.support.v7.app.ActionBarActivity: void supportInvalidateOptionsMenu()>",
							"<android.support.v4.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)>",
							"<cgeo.geocaching.activity.AbstractActionBarActivity: void setTitle(java.lang.CharSequence)>",
							"<android.app.Activity: void setTitle(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin: void setTitle(android.app.Activity,java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<java.lang.CharSequence: int length()>",
							"<java.lang.Character: boolean isWhitespace(char)>",
							"<java.lang.CharSequence: char charAt(int)>",
							"<android.support.v7.app.ActionBar: void setTitle(java.lang.CharSequence)>",
							"<android.support.v7.app.ActionBarActivity: android.support.v7.app.ActionBar getSupportActionBar()>",
							"<java.lang.Object: java.lang.String toString()>",
							"<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getName()>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$202(cgeo.geocaching.TrackableActivity,java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getGeocode()>",
							"<cgeo.geocaching.TrackableActivity: android.view.LayoutInflater access$502(cgeo.geocaching.TrackableActivity,android.view.LayoutInflater)>",
							"<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$400(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Activity: void finish()>",
							"<cgeo.geocaching.activity.AbstractActivity: void showToast(java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void showToast(android.app.Activity,java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void postShowToast(android.app.Activity,java.lang.String,int)>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void run()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.app.Activity: void runOnUiThread(java.lang.Runnable)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void <init>(android.app.Activity,java.lang.String,int)>",
							"<java.lang.Object: void <init>()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<android.content.res.Resources: java.lang.String getString(int)>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$300(cgeo.geocaching.TrackableActivity)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$200(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Dialog: void dismiss()>",
							"<cgeo.geocaching.TrackableActivity: android.app.ProgressDialog access$100(cgeo.geocaching.TrackableActivity)>",
							"android.os.Handler.handleMessage",
							"android.os.Handler.handleCallback",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.HandlerThread.run",
							"android.os.HandlerThread.onLooperPrepared"
						]
					}
				]
			},
			{
				"Candidate Name":"cgeo.geocaching.TrackableActivity.access$700",
				"Candidate Score":97,
				"Reasons":[
					{
						"Reason Type":"Executed Method 1",
						"Explanation":"Not influence the keyVar but in crash trace",
						"Trace":[
							"cgeo.geocaching.TrackableActivity.access$700"
						]
					},
					{
						"Reason Type":"Key Variable Related 1",
						"Explanation":"Influences the value of keyVar by modifying the value of the passed parameters",
						"Influenced parameter id":"1",
						"Influenced method":"android.app.FragmentManagerImpl.enqueueAction",
						"Trace":[
							"cgeo.geocaching.TrackableActivity.access$700"
						]
					},
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.Handler.dispatchMessage",
							"android.os.Handler$Callback.handleMessage",
							"android.os.Handler.<clinit>",
							"android.os.Handler.<clinit>",
							"<cgeo.geocaching.TrackableActivity$1: void handleMessage(android.os.Message)>",
							"<cgeo.geocaching.TrackableActivity: cgeo.geocaching.Trackable access$000(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.utils.Log: void e(java.lang.String,java.lang.Throwable)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<cgeo.geocaching.TrackableActivity: void access$700(cgeo.geocaching.TrackableActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeICSAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>",
							"<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>",
							"<cgeo.geocaching.activity.AbstractActivity$1: void <init>(cgeo.geocaching.activity.AbstractActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity$1$1: void <init>(cgeo.geocaching.TrackableActivity$1)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity: void access$600(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: void reinitializeViewPager()>",
							"<java.util.Map: java.util.Collection values()>",
							"<com.viewpagerindicator.TitlePageIndicator: void notifyDataSetChanged()>",
							"<android.view.View: void invalidate()>",
							"<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$ViewPagerAdapter: int getCount()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: java.util.List access$000(cgeo.geocaching.activity.AbstractViewPagerActivity)>",
							"<java.util.List: int size()>",
							"<java.lang.Integer: int intValue()>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getRight()>",
							"<android.support.v4.view.PagerAdapter: void notifyDataSetChanged()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: int getCurrentItem()>",
							"<android.support.v4.view.ViewPager: int getCurrentItem()>",
							"<java.util.List: boolean addAll(java.util.Collection)>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getLeft()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: org.apache.commons.lang3.tuple.Pair getOrderedPages()>",
							"<java.util.List: void clear()>",
							"<android.os.Bundle: void clear()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$PageViewCreator: void notifyDataSetChanged()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.Collection: java.util.Iterator iterator()>",
							"<cgeo.geocaching.activity.AbstractActivity: void invalidateOptionsMenuCompatible()>",
							"<cgeo.geocaching.activity.ActivityMixin: void invalidateOptionsMenu(android.app.Activity)>",
							"<android.support.v7.app.ActionBarActivity: void supportInvalidateOptionsMenu()>",
							"<android.support.v4.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)>",
							"<cgeo.geocaching.activity.AbstractActionBarActivity: void setTitle(java.lang.CharSequence)>",
							"<android.app.Activity: void setTitle(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin: void setTitle(android.app.Activity,java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<java.lang.CharSequence: int length()>",
							"<java.lang.Character: boolean isWhitespace(char)>",
							"<java.lang.CharSequence: char charAt(int)>",
							"<android.support.v7.app.ActionBar: void setTitle(java.lang.CharSequence)>",
							"<android.support.v7.app.ActionBarActivity: android.support.v7.app.ActionBar getSupportActionBar()>",
							"<java.lang.Object: java.lang.String toString()>",
							"<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getName()>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$202(cgeo.geocaching.TrackableActivity,java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getGeocode()>",
							"<cgeo.geocaching.TrackableActivity: android.view.LayoutInflater access$502(cgeo.geocaching.TrackableActivity,android.view.LayoutInflater)>",
							"<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$400(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Activity: void finish()>",
							"<cgeo.geocaching.activity.AbstractActivity: void showToast(java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void showToast(android.app.Activity,java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void postShowToast(android.app.Activity,java.lang.String,int)>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void run()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.app.Activity: void runOnUiThread(java.lang.Runnable)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void <init>(android.app.Activity,java.lang.String,int)>",
							"<java.lang.Object: void <init>()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<android.content.res.Resources: java.lang.String getString(int)>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$300(cgeo.geocaching.TrackableActivity)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$200(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Dialog: void dismiss()>",
							"<cgeo.geocaching.TrackableActivity: android.app.ProgressDialog access$100(cgeo.geocaching.TrackableActivity)>",
							"android.os.Handler.handleMessage",
							"android.os.Handler.handleCallback",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.HandlerThread.run",
							"android.os.HandlerThread.onLooperPrepared"
						]
					}
				]
			},
			{
				"Candidate Name":"cgeo.geocaching.TrackableActivity$1.handleMessage",
				"Candidate Score":96,
				"Reasons":[
					{
						"Reason Type":"Executed Method 1",
						"Explanation":"Not influence the keyVar but in crash trace",
						"Trace":[
							"cgeo.geocaching.TrackableActivity$1.handleMessage"
						]
					},
					{
						"Reason Type":"Key Variable Related 1",
						"Explanation":"Influences the value of keyVar by modifying the value of the passed parameters",
						"Influenced parameter id":"1",
						"Influenced method":"android.app.FragmentManagerImpl.enqueueAction",
						"Trace":[
							"cgeo.geocaching.TrackableActivity$1.handleMessage"
						]
					},
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.Handler.dispatchMessage",
							"android.os.Handler$Callback.handleMessage",
							"android.os.Handler.<clinit>",
							"android.os.Handler.<clinit>",
							"<cgeo.geocaching.TrackableActivity$1: void handleMessage(android.os.Message)>",
							"<cgeo.geocaching.TrackableActivity: cgeo.geocaching.Trackable access$000(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.utils.Log: void e(java.lang.String,java.lang.Throwable)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<cgeo.geocaching.TrackableActivity: void access$700(cgeo.geocaching.TrackableActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeICSAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>",
							"<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>",
							"<cgeo.geocaching.activity.AbstractActivity$1: void <init>(cgeo.geocaching.activity.AbstractActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity$1$1: void <init>(cgeo.geocaching.TrackableActivity$1)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity: void access$600(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: void reinitializeViewPager()>",
							"<java.util.Map: java.util.Collection values()>",
							"<com.viewpagerindicator.TitlePageIndicator: void notifyDataSetChanged()>",
							"<android.view.View: void invalidate()>",
							"<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$ViewPagerAdapter: int getCount()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: java.util.List access$000(cgeo.geocaching.activity.AbstractViewPagerActivity)>",
							"<java.util.List: int size()>",
							"<java.lang.Integer: int intValue()>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getRight()>",
							"<android.support.v4.view.PagerAdapter: void notifyDataSetChanged()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: int getCurrentItem()>",
							"<android.support.v4.view.ViewPager: int getCurrentItem()>",
							"<java.util.List: boolean addAll(java.util.Collection)>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getLeft()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: org.apache.commons.lang3.tuple.Pair getOrderedPages()>",
							"<java.util.List: void clear()>",
							"<android.os.Bundle: void clear()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$PageViewCreator: void notifyDataSetChanged()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.Collection: java.util.Iterator iterator()>",
							"<cgeo.geocaching.activity.AbstractActivity: void invalidateOptionsMenuCompatible()>",
							"<cgeo.geocaching.activity.ActivityMixin: void invalidateOptionsMenu(android.app.Activity)>",
							"<android.support.v7.app.ActionBarActivity: void supportInvalidateOptionsMenu()>",
							"<android.support.v4.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)>",
							"<cgeo.geocaching.activity.AbstractActionBarActivity: void setTitle(java.lang.CharSequence)>",
							"<android.app.Activity: void setTitle(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin: void setTitle(android.app.Activity,java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<java.lang.CharSequence: int length()>",
							"<java.lang.Character: boolean isWhitespace(char)>",
							"<java.lang.CharSequence: char charAt(int)>",
							"<android.support.v7.app.ActionBar: void setTitle(java.lang.CharSequence)>",
							"<android.support.v7.app.ActionBarActivity: android.support.v7.app.ActionBar getSupportActionBar()>",
							"<java.lang.Object: java.lang.String toString()>",
							"<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getName()>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$202(cgeo.geocaching.TrackableActivity,java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getGeocode()>",
							"<cgeo.geocaching.TrackableActivity: android.view.LayoutInflater access$502(cgeo.geocaching.TrackableActivity,android.view.LayoutInflater)>",
							"<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$400(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Activity: void finish()>",
							"<cgeo.geocaching.activity.AbstractActivity: void showToast(java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void showToast(android.app.Activity,java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void postShowToast(android.app.Activity,java.lang.String,int)>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void run()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.app.Activity: void runOnUiThread(java.lang.Runnable)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void <init>(android.app.Activity,java.lang.String,int)>",
							"<java.lang.Object: void <init>()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<android.content.res.Resources: java.lang.String getString(int)>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$300(cgeo.geocaching.TrackableActivity)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$200(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Dialog: void dismiss()>",
							"<cgeo.geocaching.TrackableActivity: android.app.ProgressDialog access$100(cgeo.geocaching.TrackableActivity)>",
							"android.os.Handler.handleMessage",
							"android.os.Handler.handleCallback",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.HandlerThread.run",
							"android.os.HandlerThread.onLooperPrepared"
						]
					}
				]
			},
			{
				"Candidate Name":"cgeo.geocaching.activity.AbstractActivity.invalidateOptionsMenuCompatible",
				"Candidate Score":93,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.Handler.dispatchMessage",
							"android.os.Handler$Callback.handleMessage",
							"android.os.Handler.<clinit>",
							"android.os.Handler.<clinit>",
							"<cgeo.geocaching.TrackableActivity$1: void handleMessage(android.os.Message)>",
							"<cgeo.geocaching.TrackableActivity: cgeo.geocaching.Trackable access$000(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.utils.Log: void e(java.lang.String,java.lang.Throwable)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<cgeo.geocaching.TrackableActivity: void access$700(cgeo.geocaching.TrackableActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeICSAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>",
							"<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>",
							"<cgeo.geocaching.activity.AbstractActivity$1: void <init>(cgeo.geocaching.activity.AbstractActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity$1$1: void <init>(cgeo.geocaching.TrackableActivity$1)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity: void access$600(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: void reinitializeViewPager()>",
							"<java.util.Map: java.util.Collection values()>",
							"<com.viewpagerindicator.TitlePageIndicator: void notifyDataSetChanged()>",
							"<android.view.View: void invalidate()>",
							"<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$ViewPagerAdapter: int getCount()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: java.util.List access$000(cgeo.geocaching.activity.AbstractViewPagerActivity)>",
							"<java.util.List: int size()>",
							"<java.lang.Integer: int intValue()>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getRight()>",
							"<android.support.v4.view.PagerAdapter: void notifyDataSetChanged()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: int getCurrentItem()>",
							"<android.support.v4.view.ViewPager: int getCurrentItem()>",
							"<java.util.List: boolean addAll(java.util.Collection)>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getLeft()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: org.apache.commons.lang3.tuple.Pair getOrderedPages()>",
							"<java.util.List: void clear()>",
							"<android.os.Bundle: void clear()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$PageViewCreator: void notifyDataSetChanged()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.Collection: java.util.Iterator iterator()>",
							"<cgeo.geocaching.activity.AbstractActivity: void invalidateOptionsMenuCompatible()>",
							"<cgeo.geocaching.activity.ActivityMixin: void invalidateOptionsMenu(android.app.Activity)>",
							"<android.support.v7.app.ActionBarActivity: void supportInvalidateOptionsMenu()>",
							"<android.support.v4.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)>",
							"<cgeo.geocaching.activity.AbstractActionBarActivity: void setTitle(java.lang.CharSequence)>",
							"<android.app.Activity: void setTitle(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin: void setTitle(android.app.Activity,java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<java.lang.CharSequence: int length()>",
							"<java.lang.Character: boolean isWhitespace(char)>",
							"<java.lang.CharSequence: char charAt(int)>",
							"<android.support.v7.app.ActionBar: void setTitle(java.lang.CharSequence)>",
							"<android.support.v7.app.ActionBarActivity: android.support.v7.app.ActionBar getSupportActionBar()>",
							"<java.lang.Object: java.lang.String toString()>",
							"<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getName()>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$202(cgeo.geocaching.TrackableActivity,java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getGeocode()>",
							"<cgeo.geocaching.TrackableActivity: android.view.LayoutInflater access$502(cgeo.geocaching.TrackableActivity,android.view.LayoutInflater)>",
							"<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$400(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Activity: void finish()>",
							"<cgeo.geocaching.activity.AbstractActivity: void showToast(java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void showToast(android.app.Activity,java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void postShowToast(android.app.Activity,java.lang.String,int)>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void run()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.app.Activity: void runOnUiThread(java.lang.Runnable)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void <init>(android.app.Activity,java.lang.String,int)>",
							"<java.lang.Object: void <init>()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<android.content.res.Resources: java.lang.String getString(int)>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$300(cgeo.geocaching.TrackableActivity)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$200(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Dialog: void dismiss()>",
							"<cgeo.geocaching.TrackableActivity: android.app.ProgressDialog access$100(cgeo.geocaching.TrackableActivity)>",
							"android.os.Handler.handleMessage",
							"android.os.Handler.handleCallback",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.HandlerThread.run",
							"android.os.HandlerThread.onLooperPrepared"
						]
					}
				]
			},
			{
				"Candidate Name":"cgeo.geocaching.activity.AbstractActivity.showToast",
				"Candidate Score":93,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.Handler.dispatchMessage",
							"android.os.Handler$Callback.handleMessage",
							"android.os.Handler.<clinit>",
							"android.os.Handler.<clinit>",
							"<cgeo.geocaching.TrackableActivity$1: void handleMessage(android.os.Message)>",
							"<cgeo.geocaching.TrackableActivity: cgeo.geocaching.Trackable access$000(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.utils.Log: void e(java.lang.String,java.lang.Throwable)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<cgeo.geocaching.TrackableActivity: void access$700(cgeo.geocaching.TrackableActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeICSAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>",
							"<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>",
							"<cgeo.geocaching.activity.AbstractActivity$1: void <init>(cgeo.geocaching.activity.AbstractActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity$1$1: void <init>(cgeo.geocaching.TrackableActivity$1)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity: void access$600(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: void reinitializeViewPager()>",
							"<java.util.Map: java.util.Collection values()>",
							"<com.viewpagerindicator.TitlePageIndicator: void notifyDataSetChanged()>",
							"<android.view.View: void invalidate()>",
							"<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$ViewPagerAdapter: int getCount()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: java.util.List access$000(cgeo.geocaching.activity.AbstractViewPagerActivity)>",
							"<java.util.List: int size()>",
							"<java.lang.Integer: int intValue()>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getRight()>",
							"<android.support.v4.view.PagerAdapter: void notifyDataSetChanged()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: int getCurrentItem()>",
							"<android.support.v4.view.ViewPager: int getCurrentItem()>",
							"<java.util.List: boolean addAll(java.util.Collection)>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getLeft()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: org.apache.commons.lang3.tuple.Pair getOrderedPages()>",
							"<java.util.List: void clear()>",
							"<android.os.Bundle: void clear()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$PageViewCreator: void notifyDataSetChanged()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.Collection: java.util.Iterator iterator()>",
							"<cgeo.geocaching.activity.AbstractActivity: void invalidateOptionsMenuCompatible()>",
							"<cgeo.geocaching.activity.ActivityMixin: void invalidateOptionsMenu(android.app.Activity)>",
							"<android.support.v7.app.ActionBarActivity: void supportInvalidateOptionsMenu()>",
							"<android.support.v4.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)>",
							"<cgeo.geocaching.activity.AbstractActionBarActivity: void setTitle(java.lang.CharSequence)>",
							"<android.app.Activity: void setTitle(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin: void setTitle(android.app.Activity,java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<java.lang.CharSequence: int length()>",
							"<java.lang.Character: boolean isWhitespace(char)>",
							"<java.lang.CharSequence: char charAt(int)>",
							"<android.support.v7.app.ActionBar: void setTitle(java.lang.CharSequence)>",
							"<android.support.v7.app.ActionBarActivity: android.support.v7.app.ActionBar getSupportActionBar()>",
							"<java.lang.Object: java.lang.String toString()>",
							"<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getName()>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$202(cgeo.geocaching.TrackableActivity,java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getGeocode()>",
							"<cgeo.geocaching.TrackableActivity: android.view.LayoutInflater access$502(cgeo.geocaching.TrackableActivity,android.view.LayoutInflater)>",
							"<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$400(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Activity: void finish()>",
							"<cgeo.geocaching.activity.AbstractActivity: void showToast(java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void showToast(android.app.Activity,java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void postShowToast(android.app.Activity,java.lang.String,int)>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void run()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.app.Activity: void runOnUiThread(java.lang.Runnable)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void <init>(android.app.Activity,java.lang.String,int)>",
							"<java.lang.Object: void <init>()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<android.content.res.Resources: java.lang.String getString(int)>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$300(cgeo.geocaching.TrackableActivity)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$200(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Dialog: void dismiss()>",
							"<cgeo.geocaching.TrackableActivity: android.app.ProgressDialog access$100(cgeo.geocaching.TrackableActivity)>",
							"android.os.Handler.handleMessage",
							"android.os.Handler.handleCallback",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.HandlerThread.run",
							"android.os.HandlerThread.onLooperPrepared"
						]
					}
				]
			},
			{
				"Candidate Name":"cgeo.geocaching.TrackableActivity$1$1.<init>",
				"Candidate Score":91,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.Handler.dispatchMessage",
							"android.os.Handler$Callback.handleMessage",
							"android.os.Handler.<clinit>",
							"android.os.Handler.<clinit>",
							"<cgeo.geocaching.TrackableActivity$1: void handleMessage(android.os.Message)>",
							"<cgeo.geocaching.TrackableActivity: cgeo.geocaching.Trackable access$000(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.utils.Log: void e(java.lang.String,java.lang.Throwable)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<cgeo.geocaching.TrackableActivity: void access$700(cgeo.geocaching.TrackableActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeICSAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>",
							"<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>",
							"<cgeo.geocaching.activity.AbstractActivity$1: void <init>(cgeo.geocaching.activity.AbstractActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity$1$1: void <init>(cgeo.geocaching.TrackableActivity$1)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity: void access$600(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: void reinitializeViewPager()>",
							"<java.util.Map: java.util.Collection values()>",
							"<com.viewpagerindicator.TitlePageIndicator: void notifyDataSetChanged()>",
							"<android.view.View: void invalidate()>",
							"<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$ViewPagerAdapter: int getCount()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: java.util.List access$000(cgeo.geocaching.activity.AbstractViewPagerActivity)>",
							"<java.util.List: int size()>",
							"<java.lang.Integer: int intValue()>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getRight()>",
							"<android.support.v4.view.PagerAdapter: void notifyDataSetChanged()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: int getCurrentItem()>",
							"<android.support.v4.view.ViewPager: int getCurrentItem()>",
							"<java.util.List: boolean addAll(java.util.Collection)>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getLeft()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: org.apache.commons.lang3.tuple.Pair getOrderedPages()>",
							"<java.util.List: void clear()>",
							"<android.os.Bundle: void clear()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$PageViewCreator: void notifyDataSetChanged()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.Collection: java.util.Iterator iterator()>",
							"<cgeo.geocaching.activity.AbstractActivity: void invalidateOptionsMenuCompatible()>",
							"<cgeo.geocaching.activity.ActivityMixin: void invalidateOptionsMenu(android.app.Activity)>",
							"<android.support.v7.app.ActionBarActivity: void supportInvalidateOptionsMenu()>",
							"<android.support.v4.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)>",
							"<cgeo.geocaching.activity.AbstractActionBarActivity: void setTitle(java.lang.CharSequence)>",
							"<android.app.Activity: void setTitle(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin: void setTitle(android.app.Activity,java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<java.lang.CharSequence: int length()>",
							"<java.lang.Character: boolean isWhitespace(char)>",
							"<java.lang.CharSequence: char charAt(int)>",
							"<android.support.v7.app.ActionBar: void setTitle(java.lang.CharSequence)>",
							"<android.support.v7.app.ActionBarActivity: android.support.v7.app.ActionBar getSupportActionBar()>",
							"<java.lang.Object: java.lang.String toString()>",
							"<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getName()>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$202(cgeo.geocaching.TrackableActivity,java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getGeocode()>",
							"<cgeo.geocaching.TrackableActivity: android.view.LayoutInflater access$502(cgeo.geocaching.TrackableActivity,android.view.LayoutInflater)>",
							"<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$400(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Activity: void finish()>",
							"<cgeo.geocaching.activity.AbstractActivity: void showToast(java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void showToast(android.app.Activity,java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void postShowToast(android.app.Activity,java.lang.String,int)>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void run()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.app.Activity: void runOnUiThread(java.lang.Runnable)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void <init>(android.app.Activity,java.lang.String,int)>",
							"<java.lang.Object: void <init>()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<android.content.res.Resources: java.lang.String getString(int)>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$300(cgeo.geocaching.TrackableActivity)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$200(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Dialog: void dismiss()>",
							"<cgeo.geocaching.TrackableActivity: android.app.ProgressDialog access$100(cgeo.geocaching.TrackableActivity)>",
							"android.os.Handler.handleMessage",
							"android.os.Handler.handleCallback",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.HandlerThread.run",
							"android.os.HandlerThread.onLooperPrepared"
						]
					}
				]
			},
			{
				"Candidate Name":"cgeo.geocaching.TrackableActivity.access$000",
				"Candidate Score":91,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.Handler.dispatchMessage",
							"android.os.Handler$Callback.handleMessage",
							"android.os.Handler.<clinit>",
							"android.os.Handler.<clinit>",
							"<cgeo.geocaching.TrackableActivity$1: void handleMessage(android.os.Message)>",
							"<cgeo.geocaching.TrackableActivity: cgeo.geocaching.Trackable access$000(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.utils.Log: void e(java.lang.String,java.lang.Throwable)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<cgeo.geocaching.TrackableActivity: void access$700(cgeo.geocaching.TrackableActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeICSAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>",
							"<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>",
							"<cgeo.geocaching.activity.AbstractActivity$1: void <init>(cgeo.geocaching.activity.AbstractActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity$1$1: void <init>(cgeo.geocaching.TrackableActivity$1)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity: void access$600(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: void reinitializeViewPager()>",
							"<java.util.Map: java.util.Collection values()>",
							"<com.viewpagerindicator.TitlePageIndicator: void notifyDataSetChanged()>",
							"<android.view.View: void invalidate()>",
							"<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$ViewPagerAdapter: int getCount()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: java.util.List access$000(cgeo.geocaching.activity.AbstractViewPagerActivity)>",
							"<java.util.List: int size()>",
							"<java.lang.Integer: int intValue()>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getRight()>",
							"<android.support.v4.view.PagerAdapter: void notifyDataSetChanged()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: int getCurrentItem()>",
							"<android.support.v4.view.ViewPager: int getCurrentItem()>",
							"<java.util.List: boolean addAll(java.util.Collection)>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getLeft()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: org.apache.commons.lang3.tuple.Pair getOrderedPages()>",
							"<java.util.List: void clear()>",
							"<android.os.Bundle: void clear()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$PageViewCreator: void notifyDataSetChanged()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.Collection: java.util.Iterator iterator()>",
							"<cgeo.geocaching.activity.AbstractActivity: void invalidateOptionsMenuCompatible()>",
							"<cgeo.geocaching.activity.ActivityMixin: void invalidateOptionsMenu(android.app.Activity)>",
							"<android.support.v7.app.ActionBarActivity: void supportInvalidateOptionsMenu()>",
							"<android.support.v4.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)>",
							"<cgeo.geocaching.activity.AbstractActionBarActivity: void setTitle(java.lang.CharSequence)>",
							"<android.app.Activity: void setTitle(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin: void setTitle(android.app.Activity,java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<java.lang.CharSequence: int length()>",
							"<java.lang.Character: boolean isWhitespace(char)>",
							"<java.lang.CharSequence: char charAt(int)>",
							"<android.support.v7.app.ActionBar: void setTitle(java.lang.CharSequence)>",
							"<android.support.v7.app.ActionBarActivity: android.support.v7.app.ActionBar getSupportActionBar()>",
							"<java.lang.Object: java.lang.String toString()>",
							"<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getName()>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$202(cgeo.geocaching.TrackableActivity,java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getGeocode()>",
							"<cgeo.geocaching.TrackableActivity: android.view.LayoutInflater access$502(cgeo.geocaching.TrackableActivity,android.view.LayoutInflater)>",
							"<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$400(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Activity: void finish()>",
							"<cgeo.geocaching.activity.AbstractActivity: void showToast(java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void showToast(android.app.Activity,java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void postShowToast(android.app.Activity,java.lang.String,int)>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void run()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.app.Activity: void runOnUiThread(java.lang.Runnable)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void <init>(android.app.Activity,java.lang.String,int)>",
							"<java.lang.Object: void <init>()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<android.content.res.Resources: java.lang.String getString(int)>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$300(cgeo.geocaching.TrackableActivity)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$200(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Dialog: void dismiss()>",
							"<cgeo.geocaching.TrackableActivity: android.app.ProgressDialog access$100(cgeo.geocaching.TrackableActivity)>",
							"android.os.Handler.handleMessage",
							"android.os.Handler.handleCallback",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.HandlerThread.run",
							"android.os.HandlerThread.onLooperPrepared"
						]
					}
				]
			},
			{
				"Candidate Name":"cgeo.geocaching.TrackableActivity.access$100",
				"Candidate Score":91,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.Handler.dispatchMessage",
							"android.os.Handler$Callback.handleMessage",
							"android.os.Handler.<clinit>",
							"android.os.Handler.<clinit>",
							"<cgeo.geocaching.TrackableActivity$1: void handleMessage(android.os.Message)>",
							"<cgeo.geocaching.TrackableActivity: cgeo.geocaching.Trackable access$000(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.utils.Log: void e(java.lang.String,java.lang.Throwable)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<cgeo.geocaching.TrackableActivity: void access$700(cgeo.geocaching.TrackableActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeICSAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>",
							"<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>",
							"<cgeo.geocaching.activity.AbstractActivity$1: void <init>(cgeo.geocaching.activity.AbstractActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity$1$1: void <init>(cgeo.geocaching.TrackableActivity$1)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity: void access$600(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: void reinitializeViewPager()>",
							"<java.util.Map: java.util.Collection values()>",
							"<com.viewpagerindicator.TitlePageIndicator: void notifyDataSetChanged()>",
							"<android.view.View: void invalidate()>",
							"<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$ViewPagerAdapter: int getCount()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: java.util.List access$000(cgeo.geocaching.activity.AbstractViewPagerActivity)>",
							"<java.util.List: int size()>",
							"<java.lang.Integer: int intValue()>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getRight()>",
							"<android.support.v4.view.PagerAdapter: void notifyDataSetChanged()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: int getCurrentItem()>",
							"<android.support.v4.view.ViewPager: int getCurrentItem()>",
							"<java.util.List: boolean addAll(java.util.Collection)>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getLeft()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: org.apache.commons.lang3.tuple.Pair getOrderedPages()>",
							"<java.util.List: void clear()>",
							"<android.os.Bundle: void clear()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$PageViewCreator: void notifyDataSetChanged()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.Collection: java.util.Iterator iterator()>",
							"<cgeo.geocaching.activity.AbstractActivity: void invalidateOptionsMenuCompatible()>",
							"<cgeo.geocaching.activity.ActivityMixin: void invalidateOptionsMenu(android.app.Activity)>",
							"<android.support.v7.app.ActionBarActivity: void supportInvalidateOptionsMenu()>",
							"<android.support.v4.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)>",
							"<cgeo.geocaching.activity.AbstractActionBarActivity: void setTitle(java.lang.CharSequence)>",
							"<android.app.Activity: void setTitle(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin: void setTitle(android.app.Activity,java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<java.lang.CharSequence: int length()>",
							"<java.lang.Character: boolean isWhitespace(char)>",
							"<java.lang.CharSequence: char charAt(int)>",
							"<android.support.v7.app.ActionBar: void setTitle(java.lang.CharSequence)>",
							"<android.support.v7.app.ActionBarActivity: android.support.v7.app.ActionBar getSupportActionBar()>",
							"<java.lang.Object: java.lang.String toString()>",
							"<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getName()>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$202(cgeo.geocaching.TrackableActivity,java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getGeocode()>",
							"<cgeo.geocaching.TrackableActivity: android.view.LayoutInflater access$502(cgeo.geocaching.TrackableActivity,android.view.LayoutInflater)>",
							"<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$400(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Activity: void finish()>",
							"<cgeo.geocaching.activity.AbstractActivity: void showToast(java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void showToast(android.app.Activity,java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void postShowToast(android.app.Activity,java.lang.String,int)>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void run()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.app.Activity: void runOnUiThread(java.lang.Runnable)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void <init>(android.app.Activity,java.lang.String,int)>",
							"<java.lang.Object: void <init>()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<android.content.res.Resources: java.lang.String getString(int)>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$300(cgeo.geocaching.TrackableActivity)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$200(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Dialog: void dismiss()>",
							"<cgeo.geocaching.TrackableActivity: android.app.ProgressDialog access$100(cgeo.geocaching.TrackableActivity)>",
							"android.os.Handler.handleMessage",
							"android.os.Handler.handleCallback",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.HandlerThread.run",
							"android.os.HandlerThread.onLooperPrepared"
						]
					}
				]
			},
			{
				"Candidate Name":"cgeo.geocaching.TrackableActivity.access$200",
				"Candidate Score":91,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.Handler.dispatchMessage",
							"android.os.Handler$Callback.handleMessage",
							"android.os.Handler.<clinit>",
							"android.os.Handler.<clinit>",
							"<cgeo.geocaching.TrackableActivity$1: void handleMessage(android.os.Message)>",
							"<cgeo.geocaching.TrackableActivity: cgeo.geocaching.Trackable access$000(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.utils.Log: void e(java.lang.String,java.lang.Throwable)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<cgeo.geocaching.TrackableActivity: void access$700(cgeo.geocaching.TrackableActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeICSAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>",
							"<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>",
							"<cgeo.geocaching.activity.AbstractActivity$1: void <init>(cgeo.geocaching.activity.AbstractActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity$1$1: void <init>(cgeo.geocaching.TrackableActivity$1)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity: void access$600(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: void reinitializeViewPager()>",
							"<java.util.Map: java.util.Collection values()>",
							"<com.viewpagerindicator.TitlePageIndicator: void notifyDataSetChanged()>",
							"<android.view.View: void invalidate()>",
							"<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$ViewPagerAdapter: int getCount()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: java.util.List access$000(cgeo.geocaching.activity.AbstractViewPagerActivity)>",
							"<java.util.List: int size()>",
							"<java.lang.Integer: int intValue()>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getRight()>",
							"<android.support.v4.view.PagerAdapter: void notifyDataSetChanged()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: int getCurrentItem()>",
							"<android.support.v4.view.ViewPager: int getCurrentItem()>",
							"<java.util.List: boolean addAll(java.util.Collection)>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getLeft()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: org.apache.commons.lang3.tuple.Pair getOrderedPages()>",
							"<java.util.List: void clear()>",
							"<android.os.Bundle: void clear()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$PageViewCreator: void notifyDataSetChanged()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.Collection: java.util.Iterator iterator()>",
							"<cgeo.geocaching.activity.AbstractActivity: void invalidateOptionsMenuCompatible()>",
							"<cgeo.geocaching.activity.ActivityMixin: void invalidateOptionsMenu(android.app.Activity)>",
							"<android.support.v7.app.ActionBarActivity: void supportInvalidateOptionsMenu()>",
							"<android.support.v4.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)>",
							"<cgeo.geocaching.activity.AbstractActionBarActivity: void setTitle(java.lang.CharSequence)>",
							"<android.app.Activity: void setTitle(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin: void setTitle(android.app.Activity,java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<java.lang.CharSequence: int length()>",
							"<java.lang.Character: boolean isWhitespace(char)>",
							"<java.lang.CharSequence: char charAt(int)>",
							"<android.support.v7.app.ActionBar: void setTitle(java.lang.CharSequence)>",
							"<android.support.v7.app.ActionBarActivity: android.support.v7.app.ActionBar getSupportActionBar()>",
							"<java.lang.Object: java.lang.String toString()>",
							"<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getName()>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$202(cgeo.geocaching.TrackableActivity,java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getGeocode()>",
							"<cgeo.geocaching.TrackableActivity: android.view.LayoutInflater access$502(cgeo.geocaching.TrackableActivity,android.view.LayoutInflater)>",
							"<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$400(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Activity: void finish()>",
							"<cgeo.geocaching.activity.AbstractActivity: void showToast(java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void showToast(android.app.Activity,java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void postShowToast(android.app.Activity,java.lang.String,int)>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void run()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.app.Activity: void runOnUiThread(java.lang.Runnable)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void <init>(android.app.Activity,java.lang.String,int)>",
							"<java.lang.Object: void <init>()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<android.content.res.Resources: java.lang.String getString(int)>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$300(cgeo.geocaching.TrackableActivity)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$200(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Dialog: void dismiss()>",
							"<cgeo.geocaching.TrackableActivity: android.app.ProgressDialog access$100(cgeo.geocaching.TrackableActivity)>",
							"android.os.Handler.handleMessage",
							"android.os.Handler.handleCallback",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.HandlerThread.run",
							"android.os.HandlerThread.onLooperPrepared"
						]
					}
				]
			},
			{
				"Candidate Name":"cgeo.geocaching.TrackableActivity.access$202",
				"Candidate Score":91,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.Handler.dispatchMessage",
							"android.os.Handler$Callback.handleMessage",
							"android.os.Handler.<clinit>",
							"android.os.Handler.<clinit>",
							"<cgeo.geocaching.TrackableActivity$1: void handleMessage(android.os.Message)>",
							"<cgeo.geocaching.TrackableActivity: cgeo.geocaching.Trackable access$000(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.utils.Log: void e(java.lang.String,java.lang.Throwable)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<cgeo.geocaching.TrackableActivity: void access$700(cgeo.geocaching.TrackableActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeICSAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>",
							"<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>",
							"<cgeo.geocaching.activity.AbstractActivity$1: void <init>(cgeo.geocaching.activity.AbstractActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity$1$1: void <init>(cgeo.geocaching.TrackableActivity$1)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity: void access$600(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: void reinitializeViewPager()>",
							"<java.util.Map: java.util.Collection values()>",
							"<com.viewpagerindicator.TitlePageIndicator: void notifyDataSetChanged()>",
							"<android.view.View: void invalidate()>",
							"<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$ViewPagerAdapter: int getCount()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: java.util.List access$000(cgeo.geocaching.activity.AbstractViewPagerActivity)>",
							"<java.util.List: int size()>",
							"<java.lang.Integer: int intValue()>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getRight()>",
							"<android.support.v4.view.PagerAdapter: void notifyDataSetChanged()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: int getCurrentItem()>",
							"<android.support.v4.view.ViewPager: int getCurrentItem()>",
							"<java.util.List: boolean addAll(java.util.Collection)>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getLeft()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: org.apache.commons.lang3.tuple.Pair getOrderedPages()>",
							"<java.util.List: void clear()>",
							"<android.os.Bundle: void clear()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$PageViewCreator: void notifyDataSetChanged()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.Collection: java.util.Iterator iterator()>",
							"<cgeo.geocaching.activity.AbstractActivity: void invalidateOptionsMenuCompatible()>",
							"<cgeo.geocaching.activity.ActivityMixin: void invalidateOptionsMenu(android.app.Activity)>",
							"<android.support.v7.app.ActionBarActivity: void supportInvalidateOptionsMenu()>",
							"<android.support.v4.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)>",
							"<cgeo.geocaching.activity.AbstractActionBarActivity: void setTitle(java.lang.CharSequence)>",
							"<android.app.Activity: void setTitle(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin: void setTitle(android.app.Activity,java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<java.lang.CharSequence: int length()>",
							"<java.lang.Character: boolean isWhitespace(char)>",
							"<java.lang.CharSequence: char charAt(int)>",
							"<android.support.v7.app.ActionBar: void setTitle(java.lang.CharSequence)>",
							"<android.support.v7.app.ActionBarActivity: android.support.v7.app.ActionBar getSupportActionBar()>",
							"<java.lang.Object: java.lang.String toString()>",
							"<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getName()>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$202(cgeo.geocaching.TrackableActivity,java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getGeocode()>",
							"<cgeo.geocaching.TrackableActivity: android.view.LayoutInflater access$502(cgeo.geocaching.TrackableActivity,android.view.LayoutInflater)>",
							"<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$400(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Activity: void finish()>",
							"<cgeo.geocaching.activity.AbstractActivity: void showToast(java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void showToast(android.app.Activity,java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void postShowToast(android.app.Activity,java.lang.String,int)>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void run()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.app.Activity: void runOnUiThread(java.lang.Runnable)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void <init>(android.app.Activity,java.lang.String,int)>",
							"<java.lang.Object: void <init>()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<android.content.res.Resources: java.lang.String getString(int)>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$300(cgeo.geocaching.TrackableActivity)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$200(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Dialog: void dismiss()>",
							"<cgeo.geocaching.TrackableActivity: android.app.ProgressDialog access$100(cgeo.geocaching.TrackableActivity)>",
							"android.os.Handler.handleMessage",
							"android.os.Handler.handleCallback",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.HandlerThread.run",
							"android.os.HandlerThread.onLooperPrepared"
						]
					}
				]
			},
			{
				"Candidate Name":"cgeo.geocaching.TrackableActivity.access$300",
				"Candidate Score":91,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.Handler.dispatchMessage",
							"android.os.Handler$Callback.handleMessage",
							"android.os.Handler.<clinit>",
							"android.os.Handler.<clinit>",
							"<cgeo.geocaching.TrackableActivity$1: void handleMessage(android.os.Message)>",
							"<cgeo.geocaching.TrackableActivity: cgeo.geocaching.Trackable access$000(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.utils.Log: void e(java.lang.String,java.lang.Throwable)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<cgeo.geocaching.TrackableActivity: void access$700(cgeo.geocaching.TrackableActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeICSAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>",
							"<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>",
							"<cgeo.geocaching.activity.AbstractActivity$1: void <init>(cgeo.geocaching.activity.AbstractActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity$1$1: void <init>(cgeo.geocaching.TrackableActivity$1)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity: void access$600(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: void reinitializeViewPager()>",
							"<java.util.Map: java.util.Collection values()>",
							"<com.viewpagerindicator.TitlePageIndicator: void notifyDataSetChanged()>",
							"<android.view.View: void invalidate()>",
							"<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$ViewPagerAdapter: int getCount()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: java.util.List access$000(cgeo.geocaching.activity.AbstractViewPagerActivity)>",
							"<java.util.List: int size()>",
							"<java.lang.Integer: int intValue()>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getRight()>",
							"<android.support.v4.view.PagerAdapter: void notifyDataSetChanged()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: int getCurrentItem()>",
							"<android.support.v4.view.ViewPager: int getCurrentItem()>",
							"<java.util.List: boolean addAll(java.util.Collection)>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getLeft()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: org.apache.commons.lang3.tuple.Pair getOrderedPages()>",
							"<java.util.List: void clear()>",
							"<android.os.Bundle: void clear()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$PageViewCreator: void notifyDataSetChanged()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.Collection: java.util.Iterator iterator()>",
							"<cgeo.geocaching.activity.AbstractActivity: void invalidateOptionsMenuCompatible()>",
							"<cgeo.geocaching.activity.ActivityMixin: void invalidateOptionsMenu(android.app.Activity)>",
							"<android.support.v7.app.ActionBarActivity: void supportInvalidateOptionsMenu()>",
							"<android.support.v4.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)>",
							"<cgeo.geocaching.activity.AbstractActionBarActivity: void setTitle(java.lang.CharSequence)>",
							"<android.app.Activity: void setTitle(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin: void setTitle(android.app.Activity,java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<java.lang.CharSequence: int length()>",
							"<java.lang.Character: boolean isWhitespace(char)>",
							"<java.lang.CharSequence: char charAt(int)>",
							"<android.support.v7.app.ActionBar: void setTitle(java.lang.CharSequence)>",
							"<android.support.v7.app.ActionBarActivity: android.support.v7.app.ActionBar getSupportActionBar()>",
							"<java.lang.Object: java.lang.String toString()>",
							"<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getName()>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$202(cgeo.geocaching.TrackableActivity,java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getGeocode()>",
							"<cgeo.geocaching.TrackableActivity: android.view.LayoutInflater access$502(cgeo.geocaching.TrackableActivity,android.view.LayoutInflater)>",
							"<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$400(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Activity: void finish()>",
							"<cgeo.geocaching.activity.AbstractActivity: void showToast(java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void showToast(android.app.Activity,java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void postShowToast(android.app.Activity,java.lang.String,int)>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void run()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.app.Activity: void runOnUiThread(java.lang.Runnable)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void <init>(android.app.Activity,java.lang.String,int)>",
							"<java.lang.Object: void <init>()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<android.content.res.Resources: java.lang.String getString(int)>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$300(cgeo.geocaching.TrackableActivity)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$200(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Dialog: void dismiss()>",
							"<cgeo.geocaching.TrackableActivity: android.app.ProgressDialog access$100(cgeo.geocaching.TrackableActivity)>",
							"android.os.Handler.handleMessage",
							"android.os.Handler.handleCallback",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.HandlerThread.run",
							"android.os.HandlerThread.onLooperPrepared"
						]
					}
				]
			},
			{
				"Candidate Name":"cgeo.geocaching.TrackableActivity.access$400",
				"Candidate Score":91,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.Handler.dispatchMessage",
							"android.os.Handler$Callback.handleMessage",
							"android.os.Handler.<clinit>",
							"android.os.Handler.<clinit>",
							"<cgeo.geocaching.TrackableActivity$1: void handleMessage(android.os.Message)>",
							"<cgeo.geocaching.TrackableActivity: cgeo.geocaching.Trackable access$000(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.utils.Log: void e(java.lang.String,java.lang.Throwable)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<cgeo.geocaching.TrackableActivity: void access$700(cgeo.geocaching.TrackableActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeICSAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>",
							"<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>",
							"<cgeo.geocaching.activity.AbstractActivity$1: void <init>(cgeo.geocaching.activity.AbstractActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity$1$1: void <init>(cgeo.geocaching.TrackableActivity$1)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity: void access$600(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: void reinitializeViewPager()>",
							"<java.util.Map: java.util.Collection values()>",
							"<com.viewpagerindicator.TitlePageIndicator: void notifyDataSetChanged()>",
							"<android.view.View: void invalidate()>",
							"<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$ViewPagerAdapter: int getCount()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: java.util.List access$000(cgeo.geocaching.activity.AbstractViewPagerActivity)>",
							"<java.util.List: int size()>",
							"<java.lang.Integer: int intValue()>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getRight()>",
							"<android.support.v4.view.PagerAdapter: void notifyDataSetChanged()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: int getCurrentItem()>",
							"<android.support.v4.view.ViewPager: int getCurrentItem()>",
							"<java.util.List: boolean addAll(java.util.Collection)>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getLeft()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: org.apache.commons.lang3.tuple.Pair getOrderedPages()>",
							"<java.util.List: void clear()>",
							"<android.os.Bundle: void clear()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$PageViewCreator: void notifyDataSetChanged()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.Collection: java.util.Iterator iterator()>",
							"<cgeo.geocaching.activity.AbstractActivity: void invalidateOptionsMenuCompatible()>",
							"<cgeo.geocaching.activity.ActivityMixin: void invalidateOptionsMenu(android.app.Activity)>",
							"<android.support.v7.app.ActionBarActivity: void supportInvalidateOptionsMenu()>",
							"<android.support.v4.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)>",
							"<cgeo.geocaching.activity.AbstractActionBarActivity: void setTitle(java.lang.CharSequence)>",
							"<android.app.Activity: void setTitle(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin: void setTitle(android.app.Activity,java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<java.lang.CharSequence: int length()>",
							"<java.lang.Character: boolean isWhitespace(char)>",
							"<java.lang.CharSequence: char charAt(int)>",
							"<android.support.v7.app.ActionBar: void setTitle(java.lang.CharSequence)>",
							"<android.support.v7.app.ActionBarActivity: android.support.v7.app.ActionBar getSupportActionBar()>",
							"<java.lang.Object: java.lang.String toString()>",
							"<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getName()>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$202(cgeo.geocaching.TrackableActivity,java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getGeocode()>",
							"<cgeo.geocaching.TrackableActivity: android.view.LayoutInflater access$502(cgeo.geocaching.TrackableActivity,android.view.LayoutInflater)>",
							"<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$400(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Activity: void finish()>",
							"<cgeo.geocaching.activity.AbstractActivity: void showToast(java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void showToast(android.app.Activity,java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void postShowToast(android.app.Activity,java.lang.String,int)>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void run()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.app.Activity: void runOnUiThread(java.lang.Runnable)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void <init>(android.app.Activity,java.lang.String,int)>",
							"<java.lang.Object: void <init>()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<android.content.res.Resources: java.lang.String getString(int)>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$300(cgeo.geocaching.TrackableActivity)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$200(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Dialog: void dismiss()>",
							"<cgeo.geocaching.TrackableActivity: android.app.ProgressDialog access$100(cgeo.geocaching.TrackableActivity)>",
							"android.os.Handler.handleMessage",
							"android.os.Handler.handleCallback",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.HandlerThread.run",
							"android.os.HandlerThread.onLooperPrepared"
						]
					}
				]
			},
			{
				"Candidate Name":"cgeo.geocaching.TrackableActivity.access$502",
				"Candidate Score":91,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.Handler.dispatchMessage",
							"android.os.Handler$Callback.handleMessage",
							"android.os.Handler.<clinit>",
							"android.os.Handler.<clinit>",
							"<cgeo.geocaching.TrackableActivity$1: void handleMessage(android.os.Message)>",
							"<cgeo.geocaching.TrackableActivity: cgeo.geocaching.Trackable access$000(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.utils.Log: void e(java.lang.String,java.lang.Throwable)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<cgeo.geocaching.TrackableActivity: void access$700(cgeo.geocaching.TrackableActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeICSAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>",
							"<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>",
							"<cgeo.geocaching.activity.AbstractActivity$1: void <init>(cgeo.geocaching.activity.AbstractActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity$1$1: void <init>(cgeo.geocaching.TrackableActivity$1)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity: void access$600(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: void reinitializeViewPager()>",
							"<java.util.Map: java.util.Collection values()>",
							"<com.viewpagerindicator.TitlePageIndicator: void notifyDataSetChanged()>",
							"<android.view.View: void invalidate()>",
							"<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$ViewPagerAdapter: int getCount()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: java.util.List access$000(cgeo.geocaching.activity.AbstractViewPagerActivity)>",
							"<java.util.List: int size()>",
							"<java.lang.Integer: int intValue()>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getRight()>",
							"<android.support.v4.view.PagerAdapter: void notifyDataSetChanged()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: int getCurrentItem()>",
							"<android.support.v4.view.ViewPager: int getCurrentItem()>",
							"<java.util.List: boolean addAll(java.util.Collection)>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getLeft()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: org.apache.commons.lang3.tuple.Pair getOrderedPages()>",
							"<java.util.List: void clear()>",
							"<android.os.Bundle: void clear()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$PageViewCreator: void notifyDataSetChanged()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.Collection: java.util.Iterator iterator()>",
							"<cgeo.geocaching.activity.AbstractActivity: void invalidateOptionsMenuCompatible()>",
							"<cgeo.geocaching.activity.ActivityMixin: void invalidateOptionsMenu(android.app.Activity)>",
							"<android.support.v7.app.ActionBarActivity: void supportInvalidateOptionsMenu()>",
							"<android.support.v4.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)>",
							"<cgeo.geocaching.activity.AbstractActionBarActivity: void setTitle(java.lang.CharSequence)>",
							"<android.app.Activity: void setTitle(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin: void setTitle(android.app.Activity,java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<java.lang.CharSequence: int length()>",
							"<java.lang.Character: boolean isWhitespace(char)>",
							"<java.lang.CharSequence: char charAt(int)>",
							"<android.support.v7.app.ActionBar: void setTitle(java.lang.CharSequence)>",
							"<android.support.v7.app.ActionBarActivity: android.support.v7.app.ActionBar getSupportActionBar()>",
							"<java.lang.Object: java.lang.String toString()>",
							"<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getName()>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$202(cgeo.geocaching.TrackableActivity,java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getGeocode()>",
							"<cgeo.geocaching.TrackableActivity: android.view.LayoutInflater access$502(cgeo.geocaching.TrackableActivity,android.view.LayoutInflater)>",
							"<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$400(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Activity: void finish()>",
							"<cgeo.geocaching.activity.AbstractActivity: void showToast(java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void showToast(android.app.Activity,java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void postShowToast(android.app.Activity,java.lang.String,int)>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void run()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.app.Activity: void runOnUiThread(java.lang.Runnable)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void <init>(android.app.Activity,java.lang.String,int)>",
							"<java.lang.Object: void <init>()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<android.content.res.Resources: java.lang.String getString(int)>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$300(cgeo.geocaching.TrackableActivity)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$200(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Dialog: void dismiss()>",
							"<cgeo.geocaching.TrackableActivity: android.app.ProgressDialog access$100(cgeo.geocaching.TrackableActivity)>",
							"android.os.Handler.handleMessage",
							"android.os.Handler.handleCallback",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.HandlerThread.run",
							"android.os.HandlerThread.onLooperPrepared"
						]
					}
				]
			},
			{
				"Candidate Name":"cgeo.geocaching.TrackableActivity.access$600",
				"Candidate Score":91,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.Handler.dispatchMessage",
							"android.os.Handler$Callback.handleMessage",
							"android.os.Handler.<clinit>",
							"android.os.Handler.<clinit>",
							"<cgeo.geocaching.TrackableActivity$1: void handleMessage(android.os.Message)>",
							"<cgeo.geocaching.TrackableActivity: cgeo.geocaching.Trackable access$000(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.utils.Log: void e(java.lang.String,java.lang.Throwable)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<cgeo.geocaching.TrackableActivity: void access$700(cgeo.geocaching.TrackableActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeICSAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>",
							"<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>",
							"<cgeo.geocaching.activity.AbstractActivity$1: void <init>(cgeo.geocaching.activity.AbstractActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity$1$1: void <init>(cgeo.geocaching.TrackableActivity$1)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity: void access$600(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: void reinitializeViewPager()>",
							"<java.util.Map: java.util.Collection values()>",
							"<com.viewpagerindicator.TitlePageIndicator: void notifyDataSetChanged()>",
							"<android.view.View: void invalidate()>",
							"<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$ViewPagerAdapter: int getCount()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: java.util.List access$000(cgeo.geocaching.activity.AbstractViewPagerActivity)>",
							"<java.util.List: int size()>",
							"<java.lang.Integer: int intValue()>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getRight()>",
							"<android.support.v4.view.PagerAdapter: void notifyDataSetChanged()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: int getCurrentItem()>",
							"<android.support.v4.view.ViewPager: int getCurrentItem()>",
							"<java.util.List: boolean addAll(java.util.Collection)>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getLeft()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: org.apache.commons.lang3.tuple.Pair getOrderedPages()>",
							"<java.util.List: void clear()>",
							"<android.os.Bundle: void clear()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$PageViewCreator: void notifyDataSetChanged()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.Collection: java.util.Iterator iterator()>",
							"<cgeo.geocaching.activity.AbstractActivity: void invalidateOptionsMenuCompatible()>",
							"<cgeo.geocaching.activity.ActivityMixin: void invalidateOptionsMenu(android.app.Activity)>",
							"<android.support.v7.app.ActionBarActivity: void supportInvalidateOptionsMenu()>",
							"<android.support.v4.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)>",
							"<cgeo.geocaching.activity.AbstractActionBarActivity: void setTitle(java.lang.CharSequence)>",
							"<android.app.Activity: void setTitle(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin: void setTitle(android.app.Activity,java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<java.lang.CharSequence: int length()>",
							"<java.lang.Character: boolean isWhitespace(char)>",
							"<java.lang.CharSequence: char charAt(int)>",
							"<android.support.v7.app.ActionBar: void setTitle(java.lang.CharSequence)>",
							"<android.support.v7.app.ActionBarActivity: android.support.v7.app.ActionBar getSupportActionBar()>",
							"<java.lang.Object: java.lang.String toString()>",
							"<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getName()>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$202(cgeo.geocaching.TrackableActivity,java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getGeocode()>",
							"<cgeo.geocaching.TrackableActivity: android.view.LayoutInflater access$502(cgeo.geocaching.TrackableActivity,android.view.LayoutInflater)>",
							"<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$400(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Activity: void finish()>",
							"<cgeo.geocaching.activity.AbstractActivity: void showToast(java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void showToast(android.app.Activity,java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void postShowToast(android.app.Activity,java.lang.String,int)>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void run()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.app.Activity: void runOnUiThread(java.lang.Runnable)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void <init>(android.app.Activity,java.lang.String,int)>",
							"<java.lang.Object: void <init>()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<android.content.res.Resources: java.lang.String getString(int)>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$300(cgeo.geocaching.TrackableActivity)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$200(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Dialog: void dismiss()>",
							"<cgeo.geocaching.TrackableActivity: android.app.ProgressDialog access$100(cgeo.geocaching.TrackableActivity)>",
							"android.os.Handler.handleMessage",
							"android.os.Handler.handleCallback",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.HandlerThread.run",
							"android.os.HandlerThread.onLooperPrepared"
						]
					}
				]
			},
			{
				"Candidate Name":"cgeo.geocaching.Trackable.getGeocode",
				"Candidate Score":87,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.Handler.dispatchMessage",
							"android.os.Handler$Callback.handleMessage",
							"android.os.Handler.<clinit>",
							"android.os.Handler.<clinit>",
							"<cgeo.geocaching.TrackableActivity$1: void handleMessage(android.os.Message)>",
							"<cgeo.geocaching.TrackableActivity: cgeo.geocaching.Trackable access$000(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.utils.Log: void e(java.lang.String,java.lang.Throwable)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<cgeo.geocaching.TrackableActivity: void access$700(cgeo.geocaching.TrackableActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeICSAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>",
							"<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>",
							"<cgeo.geocaching.activity.AbstractActivity$1: void <init>(cgeo.geocaching.activity.AbstractActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity$1$1: void <init>(cgeo.geocaching.TrackableActivity$1)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity: void access$600(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: void reinitializeViewPager()>",
							"<java.util.Map: java.util.Collection values()>",
							"<com.viewpagerindicator.TitlePageIndicator: void notifyDataSetChanged()>",
							"<android.view.View: void invalidate()>",
							"<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$ViewPagerAdapter: int getCount()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: java.util.List access$000(cgeo.geocaching.activity.AbstractViewPagerActivity)>",
							"<java.util.List: int size()>",
							"<java.lang.Integer: int intValue()>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getRight()>",
							"<android.support.v4.view.PagerAdapter: void notifyDataSetChanged()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: int getCurrentItem()>",
							"<android.support.v4.view.ViewPager: int getCurrentItem()>",
							"<java.util.List: boolean addAll(java.util.Collection)>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getLeft()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: org.apache.commons.lang3.tuple.Pair getOrderedPages()>",
							"<java.util.List: void clear()>",
							"<android.os.Bundle: void clear()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$PageViewCreator: void notifyDataSetChanged()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.Collection: java.util.Iterator iterator()>",
							"<cgeo.geocaching.activity.AbstractActivity: void invalidateOptionsMenuCompatible()>",
							"<cgeo.geocaching.activity.ActivityMixin: void invalidateOptionsMenu(android.app.Activity)>",
							"<android.support.v7.app.ActionBarActivity: void supportInvalidateOptionsMenu()>",
							"<android.support.v4.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)>",
							"<cgeo.geocaching.activity.AbstractActionBarActivity: void setTitle(java.lang.CharSequence)>",
							"<android.app.Activity: void setTitle(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin: void setTitle(android.app.Activity,java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<java.lang.CharSequence: int length()>",
							"<java.lang.Character: boolean isWhitespace(char)>",
							"<java.lang.CharSequence: char charAt(int)>",
							"<android.support.v7.app.ActionBar: void setTitle(java.lang.CharSequence)>",
							"<android.support.v7.app.ActionBarActivity: android.support.v7.app.ActionBar getSupportActionBar()>",
							"<java.lang.Object: java.lang.String toString()>",
							"<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getName()>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$202(cgeo.geocaching.TrackableActivity,java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getGeocode()>",
							"<cgeo.geocaching.TrackableActivity: android.view.LayoutInflater access$502(cgeo.geocaching.TrackableActivity,android.view.LayoutInflater)>",
							"<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$400(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Activity: void finish()>",
							"<cgeo.geocaching.activity.AbstractActivity: void showToast(java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void showToast(android.app.Activity,java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void postShowToast(android.app.Activity,java.lang.String,int)>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void run()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.app.Activity: void runOnUiThread(java.lang.Runnable)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void <init>(android.app.Activity,java.lang.String,int)>",
							"<java.lang.Object: void <init>()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<android.content.res.Resources: java.lang.String getString(int)>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$300(cgeo.geocaching.TrackableActivity)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$200(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Dialog: void dismiss()>",
							"<cgeo.geocaching.TrackableActivity: android.app.ProgressDialog access$100(cgeo.geocaching.TrackableActivity)>",
							"android.os.Handler.handleMessage",
							"android.os.Handler.handleCallback",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.HandlerThread.run",
							"android.os.HandlerThread.onLooperPrepared"
						]
					}
				]
			},
			{
				"Candidate Name":"cgeo.geocaching.Trackable.getName",
				"Candidate Score":87,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.Handler.dispatchMessage",
							"android.os.Handler$Callback.handleMessage",
							"android.os.Handler.<clinit>",
							"android.os.Handler.<clinit>",
							"<cgeo.geocaching.TrackableActivity$1: void handleMessage(android.os.Message)>",
							"<cgeo.geocaching.TrackableActivity: cgeo.geocaching.Trackable access$000(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.utils.Log: void e(java.lang.String,java.lang.Throwable)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<cgeo.geocaching.TrackableActivity: void access$700(cgeo.geocaching.TrackableActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeICSAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>",
							"<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>",
							"<cgeo.geocaching.activity.AbstractActivity$1: void <init>(cgeo.geocaching.activity.AbstractActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity$1$1: void <init>(cgeo.geocaching.TrackableActivity$1)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity: void access$600(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: void reinitializeViewPager()>",
							"<java.util.Map: java.util.Collection values()>",
							"<com.viewpagerindicator.TitlePageIndicator: void notifyDataSetChanged()>",
							"<android.view.View: void invalidate()>",
							"<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$ViewPagerAdapter: int getCount()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: java.util.List access$000(cgeo.geocaching.activity.AbstractViewPagerActivity)>",
							"<java.util.List: int size()>",
							"<java.lang.Integer: int intValue()>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getRight()>",
							"<android.support.v4.view.PagerAdapter: void notifyDataSetChanged()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: int getCurrentItem()>",
							"<android.support.v4.view.ViewPager: int getCurrentItem()>",
							"<java.util.List: boolean addAll(java.util.Collection)>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getLeft()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: org.apache.commons.lang3.tuple.Pair getOrderedPages()>",
							"<java.util.List: void clear()>",
							"<android.os.Bundle: void clear()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$PageViewCreator: void notifyDataSetChanged()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.Collection: java.util.Iterator iterator()>",
							"<cgeo.geocaching.activity.AbstractActivity: void invalidateOptionsMenuCompatible()>",
							"<cgeo.geocaching.activity.ActivityMixin: void invalidateOptionsMenu(android.app.Activity)>",
							"<android.support.v7.app.ActionBarActivity: void supportInvalidateOptionsMenu()>",
							"<android.support.v4.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)>",
							"<cgeo.geocaching.activity.AbstractActionBarActivity: void setTitle(java.lang.CharSequence)>",
							"<android.app.Activity: void setTitle(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin: void setTitle(android.app.Activity,java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<java.lang.CharSequence: int length()>",
							"<java.lang.Character: boolean isWhitespace(char)>",
							"<java.lang.CharSequence: char charAt(int)>",
							"<android.support.v7.app.ActionBar: void setTitle(java.lang.CharSequence)>",
							"<android.support.v7.app.ActionBarActivity: android.support.v7.app.ActionBar getSupportActionBar()>",
							"<java.lang.Object: java.lang.String toString()>",
							"<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getName()>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$202(cgeo.geocaching.TrackableActivity,java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getGeocode()>",
							"<cgeo.geocaching.TrackableActivity: android.view.LayoutInflater access$502(cgeo.geocaching.TrackableActivity,android.view.LayoutInflater)>",
							"<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$400(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Activity: void finish()>",
							"<cgeo.geocaching.activity.AbstractActivity: void showToast(java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void showToast(android.app.Activity,java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void postShowToast(android.app.Activity,java.lang.String,int)>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void run()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.app.Activity: void runOnUiThread(java.lang.Runnable)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void <init>(android.app.Activity,java.lang.String,int)>",
							"<java.lang.Object: void <init>()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<android.content.res.Resources: java.lang.String getString(int)>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$300(cgeo.geocaching.TrackableActivity)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$200(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Dialog: void dismiss()>",
							"<cgeo.geocaching.TrackableActivity: android.app.ProgressDialog access$100(cgeo.geocaching.TrackableActivity)>",
							"android.os.Handler.handleMessage",
							"android.os.Handler.handleCallback",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.HandlerThread.run",
							"android.os.HandlerThread.onLooperPrepared"
						]
					}
				]
			},
			{
				"Candidate Name":"cgeo.geocaching.activity.AbstractActionBarActivity.setTitle",
				"Candidate Score":87,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.Handler.dispatchMessage",
							"android.os.Handler$Callback.handleMessage",
							"android.os.Handler.<clinit>",
							"android.os.Handler.<clinit>",
							"<cgeo.geocaching.TrackableActivity$1: void handleMessage(android.os.Message)>",
							"<cgeo.geocaching.TrackableActivity: cgeo.geocaching.Trackable access$000(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.utils.Log: void e(java.lang.String,java.lang.Throwable)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<cgeo.geocaching.TrackableActivity: void access$700(cgeo.geocaching.TrackableActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeICSAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>",
							"<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>",
							"<cgeo.geocaching.activity.AbstractActivity$1: void <init>(cgeo.geocaching.activity.AbstractActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity$1$1: void <init>(cgeo.geocaching.TrackableActivity$1)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity: void access$600(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: void reinitializeViewPager()>",
							"<java.util.Map: java.util.Collection values()>",
							"<com.viewpagerindicator.TitlePageIndicator: void notifyDataSetChanged()>",
							"<android.view.View: void invalidate()>",
							"<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$ViewPagerAdapter: int getCount()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: java.util.List access$000(cgeo.geocaching.activity.AbstractViewPagerActivity)>",
							"<java.util.List: int size()>",
							"<java.lang.Integer: int intValue()>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getRight()>",
							"<android.support.v4.view.PagerAdapter: void notifyDataSetChanged()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: int getCurrentItem()>",
							"<android.support.v4.view.ViewPager: int getCurrentItem()>",
							"<java.util.List: boolean addAll(java.util.Collection)>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getLeft()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: org.apache.commons.lang3.tuple.Pair getOrderedPages()>",
							"<java.util.List: void clear()>",
							"<android.os.Bundle: void clear()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$PageViewCreator: void notifyDataSetChanged()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.Collection: java.util.Iterator iterator()>",
							"<cgeo.geocaching.activity.AbstractActivity: void invalidateOptionsMenuCompatible()>",
							"<cgeo.geocaching.activity.ActivityMixin: void invalidateOptionsMenu(android.app.Activity)>",
							"<android.support.v7.app.ActionBarActivity: void supportInvalidateOptionsMenu()>",
							"<android.support.v4.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)>",
							"<cgeo.geocaching.activity.AbstractActionBarActivity: void setTitle(java.lang.CharSequence)>",
							"<android.app.Activity: void setTitle(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin: void setTitle(android.app.Activity,java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<java.lang.CharSequence: int length()>",
							"<java.lang.Character: boolean isWhitespace(char)>",
							"<java.lang.CharSequence: char charAt(int)>",
							"<android.support.v7.app.ActionBar: void setTitle(java.lang.CharSequence)>",
							"<android.support.v7.app.ActionBarActivity: android.support.v7.app.ActionBar getSupportActionBar()>",
							"<java.lang.Object: java.lang.String toString()>",
							"<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getName()>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$202(cgeo.geocaching.TrackableActivity,java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getGeocode()>",
							"<cgeo.geocaching.TrackableActivity: android.view.LayoutInflater access$502(cgeo.geocaching.TrackableActivity,android.view.LayoutInflater)>",
							"<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$400(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Activity: void finish()>",
							"<cgeo.geocaching.activity.AbstractActivity: void showToast(java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void showToast(android.app.Activity,java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void postShowToast(android.app.Activity,java.lang.String,int)>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void run()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.app.Activity: void runOnUiThread(java.lang.Runnable)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void <init>(android.app.Activity,java.lang.String,int)>",
							"<java.lang.Object: void <init>()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<android.content.res.Resources: java.lang.String getString(int)>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$300(cgeo.geocaching.TrackableActivity)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$200(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Dialog: void dismiss()>",
							"<cgeo.geocaching.TrackableActivity: android.app.ProgressDialog access$100(cgeo.geocaching.TrackableActivity)>",
							"android.os.Handler.handleMessage",
							"android.os.Handler.handleCallback",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.HandlerThread.run",
							"android.os.HandlerThread.onLooperPrepared"
						]
					}
				]
			},
			{
				"Candidate Name":"cgeo.geocaching.utils.Log.e",
				"Candidate Score":87,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.Handler.dispatchMessage",
							"android.os.Handler$Callback.handleMessage",
							"android.os.Handler.<clinit>",
							"android.os.Handler.<clinit>",
							"<cgeo.geocaching.TrackableActivity$1: void handleMessage(android.os.Message)>",
							"<cgeo.geocaching.TrackableActivity: cgeo.geocaching.Trackable access$000(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.utils.Log: void e(java.lang.String,java.lang.Throwable)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<cgeo.geocaching.TrackableActivity: void access$700(cgeo.geocaching.TrackableActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeICSAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>",
							"<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>",
							"<cgeo.geocaching.activity.AbstractActivity$1: void <init>(cgeo.geocaching.activity.AbstractActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity$1$1: void <init>(cgeo.geocaching.TrackableActivity$1)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity: void access$600(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: void reinitializeViewPager()>",
							"<java.util.Map: java.util.Collection values()>",
							"<com.viewpagerindicator.TitlePageIndicator: void notifyDataSetChanged()>",
							"<android.view.View: void invalidate()>",
							"<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$ViewPagerAdapter: int getCount()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: java.util.List access$000(cgeo.geocaching.activity.AbstractViewPagerActivity)>",
							"<java.util.List: int size()>",
							"<java.lang.Integer: int intValue()>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getRight()>",
							"<android.support.v4.view.PagerAdapter: void notifyDataSetChanged()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: int getCurrentItem()>",
							"<android.support.v4.view.ViewPager: int getCurrentItem()>",
							"<java.util.List: boolean addAll(java.util.Collection)>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getLeft()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: org.apache.commons.lang3.tuple.Pair getOrderedPages()>",
							"<java.util.List: void clear()>",
							"<android.os.Bundle: void clear()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$PageViewCreator: void notifyDataSetChanged()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.Collection: java.util.Iterator iterator()>",
							"<cgeo.geocaching.activity.AbstractActivity: void invalidateOptionsMenuCompatible()>",
							"<cgeo.geocaching.activity.ActivityMixin: void invalidateOptionsMenu(android.app.Activity)>",
							"<android.support.v7.app.ActionBarActivity: void supportInvalidateOptionsMenu()>",
							"<android.support.v4.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)>",
							"<cgeo.geocaching.activity.AbstractActionBarActivity: void setTitle(java.lang.CharSequence)>",
							"<android.app.Activity: void setTitle(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin: void setTitle(android.app.Activity,java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<java.lang.CharSequence: int length()>",
							"<java.lang.Character: boolean isWhitespace(char)>",
							"<java.lang.CharSequence: char charAt(int)>",
							"<android.support.v7.app.ActionBar: void setTitle(java.lang.CharSequence)>",
							"<android.support.v7.app.ActionBarActivity: android.support.v7.app.ActionBar getSupportActionBar()>",
							"<java.lang.Object: java.lang.String toString()>",
							"<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getName()>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$202(cgeo.geocaching.TrackableActivity,java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getGeocode()>",
							"<cgeo.geocaching.TrackableActivity: android.view.LayoutInflater access$502(cgeo.geocaching.TrackableActivity,android.view.LayoutInflater)>",
							"<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$400(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Activity: void finish()>",
							"<cgeo.geocaching.activity.AbstractActivity: void showToast(java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void showToast(android.app.Activity,java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void postShowToast(android.app.Activity,java.lang.String,int)>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void run()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.app.Activity: void runOnUiThread(java.lang.Runnable)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void <init>(android.app.Activity,java.lang.String,int)>",
							"<java.lang.Object: void <init>()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<android.content.res.Resources: java.lang.String getString(int)>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$300(cgeo.geocaching.TrackableActivity)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$200(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Dialog: void dismiss()>",
							"<cgeo.geocaching.TrackableActivity: android.app.ProgressDialog access$100(cgeo.geocaching.TrackableActivity)>",
							"android.os.Handler.handleMessage",
							"android.os.Handler.handleCallback",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.HandlerThread.run",
							"android.os.HandlerThread.onLooperPrepared"
						]
					}
				]
			},
			{
				"Candidate Name":"cgeo.geocaching.activity.AbstractViewPagerActivity.reinitializeViewPager",
				"Candidate Score":86,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.Handler.dispatchMessage",
							"android.os.Handler$Callback.handleMessage",
							"android.os.Handler.<clinit>",
							"android.os.Handler.<clinit>",
							"<cgeo.geocaching.TrackableActivity$1: void handleMessage(android.os.Message)>",
							"<cgeo.geocaching.TrackableActivity: cgeo.geocaching.Trackable access$000(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.utils.Log: void e(java.lang.String,java.lang.Throwable)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<cgeo.geocaching.TrackableActivity: void access$700(cgeo.geocaching.TrackableActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeICSAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>",
							"<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>",
							"<cgeo.geocaching.activity.AbstractActivity$1: void <init>(cgeo.geocaching.activity.AbstractActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity$1$1: void <init>(cgeo.geocaching.TrackableActivity$1)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity: void access$600(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: void reinitializeViewPager()>",
							"<java.util.Map: java.util.Collection values()>",
							"<com.viewpagerindicator.TitlePageIndicator: void notifyDataSetChanged()>",
							"<android.view.View: void invalidate()>",
							"<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$ViewPagerAdapter: int getCount()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: java.util.List access$000(cgeo.geocaching.activity.AbstractViewPagerActivity)>",
							"<java.util.List: int size()>",
							"<java.lang.Integer: int intValue()>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getRight()>",
							"<android.support.v4.view.PagerAdapter: void notifyDataSetChanged()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: int getCurrentItem()>",
							"<android.support.v4.view.ViewPager: int getCurrentItem()>",
							"<java.util.List: boolean addAll(java.util.Collection)>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getLeft()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: org.apache.commons.lang3.tuple.Pair getOrderedPages()>",
							"<java.util.List: void clear()>",
							"<android.os.Bundle: void clear()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$PageViewCreator: void notifyDataSetChanged()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.Collection: java.util.Iterator iterator()>",
							"<cgeo.geocaching.activity.AbstractActivity: void invalidateOptionsMenuCompatible()>",
							"<cgeo.geocaching.activity.ActivityMixin: void invalidateOptionsMenu(android.app.Activity)>",
							"<android.support.v7.app.ActionBarActivity: void supportInvalidateOptionsMenu()>",
							"<android.support.v4.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)>",
							"<cgeo.geocaching.activity.AbstractActionBarActivity: void setTitle(java.lang.CharSequence)>",
							"<android.app.Activity: void setTitle(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin: void setTitle(android.app.Activity,java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<java.lang.CharSequence: int length()>",
							"<java.lang.Character: boolean isWhitespace(char)>",
							"<java.lang.CharSequence: char charAt(int)>",
							"<android.support.v7.app.ActionBar: void setTitle(java.lang.CharSequence)>",
							"<android.support.v7.app.ActionBarActivity: android.support.v7.app.ActionBar getSupportActionBar()>",
							"<java.lang.Object: java.lang.String toString()>",
							"<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getName()>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$202(cgeo.geocaching.TrackableActivity,java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getGeocode()>",
							"<cgeo.geocaching.TrackableActivity: android.view.LayoutInflater access$502(cgeo.geocaching.TrackableActivity,android.view.LayoutInflater)>",
							"<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$400(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Activity: void finish()>",
							"<cgeo.geocaching.activity.AbstractActivity: void showToast(java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void showToast(android.app.Activity,java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void postShowToast(android.app.Activity,java.lang.String,int)>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void run()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.app.Activity: void runOnUiThread(java.lang.Runnable)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void <init>(android.app.Activity,java.lang.String,int)>",
							"<java.lang.Object: void <init>()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<android.content.res.Resources: java.lang.String getString(int)>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$300(cgeo.geocaching.TrackableActivity)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$200(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Dialog: void dismiss()>",
							"<cgeo.geocaching.TrackableActivity: android.app.ProgressDialog access$100(cgeo.geocaching.TrackableActivity)>",
							"android.os.Handler.handleMessage",
							"android.os.Handler.handleCallback",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.HandlerThread.run",
							"android.os.HandlerThread.onLooperPrepared"
						]
					}
				]
			},
			{
				"Candidate Name":"cgeo.geocaching.activity.ActivityMixin.invalidateOptionsMenu",
				"Candidate Score":86,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.Handler.dispatchMessage",
							"android.os.Handler$Callback.handleMessage",
							"android.os.Handler.<clinit>",
							"android.os.Handler.<clinit>",
							"<cgeo.geocaching.TrackableActivity$1: void handleMessage(android.os.Message)>",
							"<cgeo.geocaching.TrackableActivity: cgeo.geocaching.Trackable access$000(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.utils.Log: void e(java.lang.String,java.lang.Throwable)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<cgeo.geocaching.TrackableActivity: void access$700(cgeo.geocaching.TrackableActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeICSAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>",
							"<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>",
							"<cgeo.geocaching.activity.AbstractActivity$1: void <init>(cgeo.geocaching.activity.AbstractActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity$1$1: void <init>(cgeo.geocaching.TrackableActivity$1)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity: void access$600(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: void reinitializeViewPager()>",
							"<java.util.Map: java.util.Collection values()>",
							"<com.viewpagerindicator.TitlePageIndicator: void notifyDataSetChanged()>",
							"<android.view.View: void invalidate()>",
							"<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$ViewPagerAdapter: int getCount()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: java.util.List access$000(cgeo.geocaching.activity.AbstractViewPagerActivity)>",
							"<java.util.List: int size()>",
							"<java.lang.Integer: int intValue()>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getRight()>",
							"<android.support.v4.view.PagerAdapter: void notifyDataSetChanged()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: int getCurrentItem()>",
							"<android.support.v4.view.ViewPager: int getCurrentItem()>",
							"<java.util.List: boolean addAll(java.util.Collection)>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getLeft()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: org.apache.commons.lang3.tuple.Pair getOrderedPages()>",
							"<java.util.List: void clear()>",
							"<android.os.Bundle: void clear()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$PageViewCreator: void notifyDataSetChanged()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.Collection: java.util.Iterator iterator()>",
							"<cgeo.geocaching.activity.AbstractActivity: void invalidateOptionsMenuCompatible()>",
							"<cgeo.geocaching.activity.ActivityMixin: void invalidateOptionsMenu(android.app.Activity)>",
							"<android.support.v7.app.ActionBarActivity: void supportInvalidateOptionsMenu()>",
							"<android.support.v4.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)>",
							"<cgeo.geocaching.activity.AbstractActionBarActivity: void setTitle(java.lang.CharSequence)>",
							"<android.app.Activity: void setTitle(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin: void setTitle(android.app.Activity,java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<java.lang.CharSequence: int length()>",
							"<java.lang.Character: boolean isWhitespace(char)>",
							"<java.lang.CharSequence: char charAt(int)>",
							"<android.support.v7.app.ActionBar: void setTitle(java.lang.CharSequence)>",
							"<android.support.v7.app.ActionBarActivity: android.support.v7.app.ActionBar getSupportActionBar()>",
							"<java.lang.Object: java.lang.String toString()>",
							"<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getName()>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$202(cgeo.geocaching.TrackableActivity,java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getGeocode()>",
							"<cgeo.geocaching.TrackableActivity: android.view.LayoutInflater access$502(cgeo.geocaching.TrackableActivity,android.view.LayoutInflater)>",
							"<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$400(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Activity: void finish()>",
							"<cgeo.geocaching.activity.AbstractActivity: void showToast(java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void showToast(android.app.Activity,java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void postShowToast(android.app.Activity,java.lang.String,int)>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void run()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.app.Activity: void runOnUiThread(java.lang.Runnable)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void <init>(android.app.Activity,java.lang.String,int)>",
							"<java.lang.Object: void <init>()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<android.content.res.Resources: java.lang.String getString(int)>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$300(cgeo.geocaching.TrackableActivity)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$200(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Dialog: void dismiss()>",
							"<cgeo.geocaching.TrackableActivity: android.app.ProgressDialog access$100(cgeo.geocaching.TrackableActivity)>",
							"android.os.Handler.handleMessage",
							"android.os.Handler.handleCallback",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.HandlerThread.run",
							"android.os.HandlerThread.onLooperPrepared"
						]
					}
				]
			},
			{
				"Candidate Name":"cgeo.geocaching.activity.ActivityMixin.setTitle",
				"Candidate Score":86,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.Handler.dispatchMessage",
							"android.os.Handler$Callback.handleMessage",
							"android.os.Handler.<clinit>",
							"android.os.Handler.<clinit>",
							"<cgeo.geocaching.TrackableActivity$1: void handleMessage(android.os.Message)>",
							"<cgeo.geocaching.TrackableActivity: cgeo.geocaching.Trackable access$000(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.utils.Log: void e(java.lang.String,java.lang.Throwable)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<cgeo.geocaching.TrackableActivity: void access$700(cgeo.geocaching.TrackableActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeICSAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>",
							"<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>",
							"<cgeo.geocaching.activity.AbstractActivity$1: void <init>(cgeo.geocaching.activity.AbstractActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity$1$1: void <init>(cgeo.geocaching.TrackableActivity$1)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity: void access$600(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: void reinitializeViewPager()>",
							"<java.util.Map: java.util.Collection values()>",
							"<com.viewpagerindicator.TitlePageIndicator: void notifyDataSetChanged()>",
							"<android.view.View: void invalidate()>",
							"<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$ViewPagerAdapter: int getCount()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: java.util.List access$000(cgeo.geocaching.activity.AbstractViewPagerActivity)>",
							"<java.util.List: int size()>",
							"<java.lang.Integer: int intValue()>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getRight()>",
							"<android.support.v4.view.PagerAdapter: void notifyDataSetChanged()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: int getCurrentItem()>",
							"<android.support.v4.view.ViewPager: int getCurrentItem()>",
							"<java.util.List: boolean addAll(java.util.Collection)>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getLeft()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: org.apache.commons.lang3.tuple.Pair getOrderedPages()>",
							"<java.util.List: void clear()>",
							"<android.os.Bundle: void clear()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$PageViewCreator: void notifyDataSetChanged()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.Collection: java.util.Iterator iterator()>",
							"<cgeo.geocaching.activity.AbstractActivity: void invalidateOptionsMenuCompatible()>",
							"<cgeo.geocaching.activity.ActivityMixin: void invalidateOptionsMenu(android.app.Activity)>",
							"<android.support.v7.app.ActionBarActivity: void supportInvalidateOptionsMenu()>",
							"<android.support.v4.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)>",
							"<cgeo.geocaching.activity.AbstractActionBarActivity: void setTitle(java.lang.CharSequence)>",
							"<android.app.Activity: void setTitle(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin: void setTitle(android.app.Activity,java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<java.lang.CharSequence: int length()>",
							"<java.lang.Character: boolean isWhitespace(char)>",
							"<java.lang.CharSequence: char charAt(int)>",
							"<android.support.v7.app.ActionBar: void setTitle(java.lang.CharSequence)>",
							"<android.support.v7.app.ActionBarActivity: android.support.v7.app.ActionBar getSupportActionBar()>",
							"<java.lang.Object: java.lang.String toString()>",
							"<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getName()>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$202(cgeo.geocaching.TrackableActivity,java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getGeocode()>",
							"<cgeo.geocaching.TrackableActivity: android.view.LayoutInflater access$502(cgeo.geocaching.TrackableActivity,android.view.LayoutInflater)>",
							"<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$400(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Activity: void finish()>",
							"<cgeo.geocaching.activity.AbstractActivity: void showToast(java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void showToast(android.app.Activity,java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void postShowToast(android.app.Activity,java.lang.String,int)>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void run()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.app.Activity: void runOnUiThread(java.lang.Runnable)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void <init>(android.app.Activity,java.lang.String,int)>",
							"<java.lang.Object: void <init>()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<android.content.res.Resources: java.lang.String getString(int)>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$300(cgeo.geocaching.TrackableActivity)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$200(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Dialog: void dismiss()>",
							"<cgeo.geocaching.TrackableActivity: android.app.ProgressDialog access$100(cgeo.geocaching.TrackableActivity)>",
							"android.os.Handler.handleMessage",
							"android.os.Handler.handleCallback",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.HandlerThread.run",
							"android.os.HandlerThread.onLooperPrepared"
						]
					}
				]
			},
			{
				"Candidate Name":"cgeo.geocaching.activity.ActivityMixin.showToast",
				"Candidate Score":86,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.Handler.dispatchMessage",
							"android.os.Handler$Callback.handleMessage",
							"android.os.Handler.<clinit>",
							"android.os.Handler.<clinit>",
							"<cgeo.geocaching.TrackableActivity$1: void handleMessage(android.os.Message)>",
							"<cgeo.geocaching.TrackableActivity: cgeo.geocaching.Trackable access$000(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.utils.Log: void e(java.lang.String,java.lang.Throwable)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<cgeo.geocaching.TrackableActivity: void access$700(cgeo.geocaching.TrackableActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeICSAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>",
							"<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>",
							"<cgeo.geocaching.activity.AbstractActivity$1: void <init>(cgeo.geocaching.activity.AbstractActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity$1$1: void <init>(cgeo.geocaching.TrackableActivity$1)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity: void access$600(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: void reinitializeViewPager()>",
							"<java.util.Map: java.util.Collection values()>",
							"<com.viewpagerindicator.TitlePageIndicator: void notifyDataSetChanged()>",
							"<android.view.View: void invalidate()>",
							"<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$ViewPagerAdapter: int getCount()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: java.util.List access$000(cgeo.geocaching.activity.AbstractViewPagerActivity)>",
							"<java.util.List: int size()>",
							"<java.lang.Integer: int intValue()>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getRight()>",
							"<android.support.v4.view.PagerAdapter: void notifyDataSetChanged()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: int getCurrentItem()>",
							"<android.support.v4.view.ViewPager: int getCurrentItem()>",
							"<java.util.List: boolean addAll(java.util.Collection)>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getLeft()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: org.apache.commons.lang3.tuple.Pair getOrderedPages()>",
							"<java.util.List: void clear()>",
							"<android.os.Bundle: void clear()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$PageViewCreator: void notifyDataSetChanged()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.Collection: java.util.Iterator iterator()>",
							"<cgeo.geocaching.activity.AbstractActivity: void invalidateOptionsMenuCompatible()>",
							"<cgeo.geocaching.activity.ActivityMixin: void invalidateOptionsMenu(android.app.Activity)>",
							"<android.support.v7.app.ActionBarActivity: void supportInvalidateOptionsMenu()>",
							"<android.support.v4.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)>",
							"<cgeo.geocaching.activity.AbstractActionBarActivity: void setTitle(java.lang.CharSequence)>",
							"<android.app.Activity: void setTitle(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin: void setTitle(android.app.Activity,java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<java.lang.CharSequence: int length()>",
							"<java.lang.Character: boolean isWhitespace(char)>",
							"<java.lang.CharSequence: char charAt(int)>",
							"<android.support.v7.app.ActionBar: void setTitle(java.lang.CharSequence)>",
							"<android.support.v7.app.ActionBarActivity: android.support.v7.app.ActionBar getSupportActionBar()>",
							"<java.lang.Object: java.lang.String toString()>",
							"<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getName()>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$202(cgeo.geocaching.TrackableActivity,java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getGeocode()>",
							"<cgeo.geocaching.TrackableActivity: android.view.LayoutInflater access$502(cgeo.geocaching.TrackableActivity,android.view.LayoutInflater)>",
							"<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$400(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Activity: void finish()>",
							"<cgeo.geocaching.activity.AbstractActivity: void showToast(java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void showToast(android.app.Activity,java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void postShowToast(android.app.Activity,java.lang.String,int)>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void run()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.app.Activity: void runOnUiThread(java.lang.Runnable)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void <init>(android.app.Activity,java.lang.String,int)>",
							"<java.lang.Object: void <init>()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<android.content.res.Resources: java.lang.String getString(int)>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$300(cgeo.geocaching.TrackableActivity)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$200(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Dialog: void dismiss()>",
							"<cgeo.geocaching.TrackableActivity: android.app.ProgressDialog access$100(cgeo.geocaching.TrackableActivity)>",
							"android.os.Handler.handleMessage",
							"android.os.Handler.handleCallback",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.HandlerThread.run",
							"android.os.HandlerThread.onLooperPrepared"
						]
					}
				]
			},
			{
				"Candidate Name":"cgeo.geocaching.activity.AbstractViewPagerActivity$PageViewCreator.notifyDataSetChanged",
				"Candidate Score":85,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.Handler.dispatchMessage",
							"android.os.Handler$Callback.handleMessage",
							"android.os.Handler.<clinit>",
							"android.os.Handler.<clinit>",
							"<cgeo.geocaching.TrackableActivity$1: void handleMessage(android.os.Message)>",
							"<cgeo.geocaching.TrackableActivity: cgeo.geocaching.Trackable access$000(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.utils.Log: void e(java.lang.String,java.lang.Throwable)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<cgeo.geocaching.TrackableActivity: void access$700(cgeo.geocaching.TrackableActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeICSAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>",
							"<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>",
							"<cgeo.geocaching.activity.AbstractActivity$1: void <init>(cgeo.geocaching.activity.AbstractActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity$1$1: void <init>(cgeo.geocaching.TrackableActivity$1)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity: void access$600(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: void reinitializeViewPager()>",
							"<java.util.Map: java.util.Collection values()>",
							"<com.viewpagerindicator.TitlePageIndicator: void notifyDataSetChanged()>",
							"<android.view.View: void invalidate()>",
							"<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$ViewPagerAdapter: int getCount()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: java.util.List access$000(cgeo.geocaching.activity.AbstractViewPagerActivity)>",
							"<java.util.List: int size()>",
							"<java.lang.Integer: int intValue()>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getRight()>",
							"<android.support.v4.view.PagerAdapter: void notifyDataSetChanged()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: int getCurrentItem()>",
							"<android.support.v4.view.ViewPager: int getCurrentItem()>",
							"<java.util.List: boolean addAll(java.util.Collection)>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getLeft()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: org.apache.commons.lang3.tuple.Pair getOrderedPages()>",
							"<java.util.List: void clear()>",
							"<android.os.Bundle: void clear()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$PageViewCreator: void notifyDataSetChanged()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.Collection: java.util.Iterator iterator()>",
							"<cgeo.geocaching.activity.AbstractActivity: void invalidateOptionsMenuCompatible()>",
							"<cgeo.geocaching.activity.ActivityMixin: void invalidateOptionsMenu(android.app.Activity)>",
							"<android.support.v7.app.ActionBarActivity: void supportInvalidateOptionsMenu()>",
							"<android.support.v4.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)>",
							"<cgeo.geocaching.activity.AbstractActionBarActivity: void setTitle(java.lang.CharSequence)>",
							"<android.app.Activity: void setTitle(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin: void setTitle(android.app.Activity,java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<java.lang.CharSequence: int length()>",
							"<java.lang.Character: boolean isWhitespace(char)>",
							"<java.lang.CharSequence: char charAt(int)>",
							"<android.support.v7.app.ActionBar: void setTitle(java.lang.CharSequence)>",
							"<android.support.v7.app.ActionBarActivity: android.support.v7.app.ActionBar getSupportActionBar()>",
							"<java.lang.Object: java.lang.String toString()>",
							"<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getName()>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$202(cgeo.geocaching.TrackableActivity,java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getGeocode()>",
							"<cgeo.geocaching.TrackableActivity: android.view.LayoutInflater access$502(cgeo.geocaching.TrackableActivity,android.view.LayoutInflater)>",
							"<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$400(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Activity: void finish()>",
							"<cgeo.geocaching.activity.AbstractActivity: void showToast(java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void showToast(android.app.Activity,java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void postShowToast(android.app.Activity,java.lang.String,int)>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void run()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.app.Activity: void runOnUiThread(java.lang.Runnable)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void <init>(android.app.Activity,java.lang.String,int)>",
							"<java.lang.Object: void <init>()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<android.content.res.Resources: java.lang.String getString(int)>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$300(cgeo.geocaching.TrackableActivity)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$200(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Dialog: void dismiss()>",
							"<cgeo.geocaching.TrackableActivity: android.app.ProgressDialog access$100(cgeo.geocaching.TrackableActivity)>",
							"android.os.Handler.handleMessage",
							"android.os.Handler.handleCallback",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.HandlerThread.run",
							"android.os.HandlerThread.onLooperPrepared"
						]
					}
				]
			},
			{
				"Candidate Name":"cgeo.geocaching.activity.AbstractViewPagerActivity$ViewPagerAdapter.getCount",
				"Candidate Score":85,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.Handler.dispatchMessage",
							"android.os.Handler$Callback.handleMessage",
							"android.os.Handler.<clinit>",
							"android.os.Handler.<clinit>",
							"<cgeo.geocaching.TrackableActivity$1: void handleMessage(android.os.Message)>",
							"<cgeo.geocaching.TrackableActivity: cgeo.geocaching.Trackable access$000(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.utils.Log: void e(java.lang.String,java.lang.Throwable)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<cgeo.geocaching.TrackableActivity: void access$700(cgeo.geocaching.TrackableActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeICSAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>",
							"<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>",
							"<cgeo.geocaching.activity.AbstractActivity$1: void <init>(cgeo.geocaching.activity.AbstractActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity$1$1: void <init>(cgeo.geocaching.TrackableActivity$1)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity: void access$600(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: void reinitializeViewPager()>",
							"<java.util.Map: java.util.Collection values()>",
							"<com.viewpagerindicator.TitlePageIndicator: void notifyDataSetChanged()>",
							"<android.view.View: void invalidate()>",
							"<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$ViewPagerAdapter: int getCount()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: java.util.List access$000(cgeo.geocaching.activity.AbstractViewPagerActivity)>",
							"<java.util.List: int size()>",
							"<java.lang.Integer: int intValue()>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getRight()>",
							"<android.support.v4.view.PagerAdapter: void notifyDataSetChanged()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: int getCurrentItem()>",
							"<android.support.v4.view.ViewPager: int getCurrentItem()>",
							"<java.util.List: boolean addAll(java.util.Collection)>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getLeft()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: org.apache.commons.lang3.tuple.Pair getOrderedPages()>",
							"<java.util.List: void clear()>",
							"<android.os.Bundle: void clear()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$PageViewCreator: void notifyDataSetChanged()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.Collection: java.util.Iterator iterator()>",
							"<cgeo.geocaching.activity.AbstractActivity: void invalidateOptionsMenuCompatible()>",
							"<cgeo.geocaching.activity.ActivityMixin: void invalidateOptionsMenu(android.app.Activity)>",
							"<android.support.v7.app.ActionBarActivity: void supportInvalidateOptionsMenu()>",
							"<android.support.v4.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)>",
							"<cgeo.geocaching.activity.AbstractActionBarActivity: void setTitle(java.lang.CharSequence)>",
							"<android.app.Activity: void setTitle(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin: void setTitle(android.app.Activity,java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<java.lang.CharSequence: int length()>",
							"<java.lang.Character: boolean isWhitespace(char)>",
							"<java.lang.CharSequence: char charAt(int)>",
							"<android.support.v7.app.ActionBar: void setTitle(java.lang.CharSequence)>",
							"<android.support.v7.app.ActionBarActivity: android.support.v7.app.ActionBar getSupportActionBar()>",
							"<java.lang.Object: java.lang.String toString()>",
							"<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getName()>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$202(cgeo.geocaching.TrackableActivity,java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getGeocode()>",
							"<cgeo.geocaching.TrackableActivity: android.view.LayoutInflater access$502(cgeo.geocaching.TrackableActivity,android.view.LayoutInflater)>",
							"<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$400(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Activity: void finish()>",
							"<cgeo.geocaching.activity.AbstractActivity: void showToast(java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void showToast(android.app.Activity,java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void postShowToast(android.app.Activity,java.lang.String,int)>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void run()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.app.Activity: void runOnUiThread(java.lang.Runnable)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void <init>(android.app.Activity,java.lang.String,int)>",
							"<java.lang.Object: void <init>()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<android.content.res.Resources: java.lang.String getString(int)>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$300(cgeo.geocaching.TrackableActivity)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$200(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Dialog: void dismiss()>",
							"<cgeo.geocaching.TrackableActivity: android.app.ProgressDialog access$100(cgeo.geocaching.TrackableActivity)>",
							"android.os.Handler.handleMessage",
							"android.os.Handler.handleCallback",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.HandlerThread.run",
							"android.os.HandlerThread.onLooperPrepared"
						]
					}
				]
			},
			{
				"Candidate Name":"cgeo.geocaching.activity.AbstractViewPagerActivity.getCurrentItem",
				"Candidate Score":85,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.Handler.dispatchMessage",
							"android.os.Handler$Callback.handleMessage",
							"android.os.Handler.<clinit>",
							"android.os.Handler.<clinit>",
							"<cgeo.geocaching.TrackableActivity$1: void handleMessage(android.os.Message)>",
							"<cgeo.geocaching.TrackableActivity: cgeo.geocaching.Trackable access$000(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.utils.Log: void e(java.lang.String,java.lang.Throwable)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<cgeo.geocaching.TrackableActivity: void access$700(cgeo.geocaching.TrackableActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeICSAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>",
							"<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>",
							"<cgeo.geocaching.activity.AbstractActivity$1: void <init>(cgeo.geocaching.activity.AbstractActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity$1$1: void <init>(cgeo.geocaching.TrackableActivity$1)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity: void access$600(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: void reinitializeViewPager()>",
							"<java.util.Map: java.util.Collection values()>",
							"<com.viewpagerindicator.TitlePageIndicator: void notifyDataSetChanged()>",
							"<android.view.View: void invalidate()>",
							"<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$ViewPagerAdapter: int getCount()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: java.util.List access$000(cgeo.geocaching.activity.AbstractViewPagerActivity)>",
							"<java.util.List: int size()>",
							"<java.lang.Integer: int intValue()>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getRight()>",
							"<android.support.v4.view.PagerAdapter: void notifyDataSetChanged()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: int getCurrentItem()>",
							"<android.support.v4.view.ViewPager: int getCurrentItem()>",
							"<java.util.List: boolean addAll(java.util.Collection)>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getLeft()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: org.apache.commons.lang3.tuple.Pair getOrderedPages()>",
							"<java.util.List: void clear()>",
							"<android.os.Bundle: void clear()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$PageViewCreator: void notifyDataSetChanged()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.Collection: java.util.Iterator iterator()>",
							"<cgeo.geocaching.activity.AbstractActivity: void invalidateOptionsMenuCompatible()>",
							"<cgeo.geocaching.activity.ActivityMixin: void invalidateOptionsMenu(android.app.Activity)>",
							"<android.support.v7.app.ActionBarActivity: void supportInvalidateOptionsMenu()>",
							"<android.support.v4.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)>",
							"<cgeo.geocaching.activity.AbstractActionBarActivity: void setTitle(java.lang.CharSequence)>",
							"<android.app.Activity: void setTitle(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin: void setTitle(android.app.Activity,java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<java.lang.CharSequence: int length()>",
							"<java.lang.Character: boolean isWhitespace(char)>",
							"<java.lang.CharSequence: char charAt(int)>",
							"<android.support.v7.app.ActionBar: void setTitle(java.lang.CharSequence)>",
							"<android.support.v7.app.ActionBarActivity: android.support.v7.app.ActionBar getSupportActionBar()>",
							"<java.lang.Object: java.lang.String toString()>",
							"<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getName()>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$202(cgeo.geocaching.TrackableActivity,java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getGeocode()>",
							"<cgeo.geocaching.TrackableActivity: android.view.LayoutInflater access$502(cgeo.geocaching.TrackableActivity,android.view.LayoutInflater)>",
							"<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$400(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Activity: void finish()>",
							"<cgeo.geocaching.activity.AbstractActivity: void showToast(java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void showToast(android.app.Activity,java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void postShowToast(android.app.Activity,java.lang.String,int)>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void run()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.app.Activity: void runOnUiThread(java.lang.Runnable)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void <init>(android.app.Activity,java.lang.String,int)>",
							"<java.lang.Object: void <init>()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<android.content.res.Resources: java.lang.String getString(int)>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$300(cgeo.geocaching.TrackableActivity)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$200(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Dialog: void dismiss()>",
							"<cgeo.geocaching.TrackableActivity: android.app.ProgressDialog access$100(cgeo.geocaching.TrackableActivity)>",
							"android.os.Handler.handleMessage",
							"android.os.Handler.handleCallback",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.HandlerThread.run",
							"android.os.HandlerThread.onLooperPrepared"
						]
					}
				]
			},
			{
				"Candidate Name":"cgeo.geocaching.activity.AbstractViewPagerActivity.getOrderedPages",
				"Candidate Score":85,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.Handler.dispatchMessage",
							"android.os.Handler$Callback.handleMessage",
							"android.os.Handler.<clinit>",
							"android.os.Handler.<clinit>",
							"<cgeo.geocaching.TrackableActivity$1: void handleMessage(android.os.Message)>",
							"<cgeo.geocaching.TrackableActivity: cgeo.geocaching.Trackable access$000(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.utils.Log: void e(java.lang.String,java.lang.Throwable)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<cgeo.geocaching.TrackableActivity: void access$700(cgeo.geocaching.TrackableActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeICSAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>",
							"<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>",
							"<cgeo.geocaching.activity.AbstractActivity$1: void <init>(cgeo.geocaching.activity.AbstractActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity$1$1: void <init>(cgeo.geocaching.TrackableActivity$1)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity: void access$600(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: void reinitializeViewPager()>",
							"<java.util.Map: java.util.Collection values()>",
							"<com.viewpagerindicator.TitlePageIndicator: void notifyDataSetChanged()>",
							"<android.view.View: void invalidate()>",
							"<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$ViewPagerAdapter: int getCount()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: java.util.List access$000(cgeo.geocaching.activity.AbstractViewPagerActivity)>",
							"<java.util.List: int size()>",
							"<java.lang.Integer: int intValue()>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getRight()>",
							"<android.support.v4.view.PagerAdapter: void notifyDataSetChanged()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: int getCurrentItem()>",
							"<android.support.v4.view.ViewPager: int getCurrentItem()>",
							"<java.util.List: boolean addAll(java.util.Collection)>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getLeft()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: org.apache.commons.lang3.tuple.Pair getOrderedPages()>",
							"<java.util.List: void clear()>",
							"<android.os.Bundle: void clear()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$PageViewCreator: void notifyDataSetChanged()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.Collection: java.util.Iterator iterator()>",
							"<cgeo.geocaching.activity.AbstractActivity: void invalidateOptionsMenuCompatible()>",
							"<cgeo.geocaching.activity.ActivityMixin: void invalidateOptionsMenu(android.app.Activity)>",
							"<android.support.v7.app.ActionBarActivity: void supportInvalidateOptionsMenu()>",
							"<android.support.v4.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)>",
							"<cgeo.geocaching.activity.AbstractActionBarActivity: void setTitle(java.lang.CharSequence)>",
							"<android.app.Activity: void setTitle(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin: void setTitle(android.app.Activity,java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<java.lang.CharSequence: int length()>",
							"<java.lang.Character: boolean isWhitespace(char)>",
							"<java.lang.CharSequence: char charAt(int)>",
							"<android.support.v7.app.ActionBar: void setTitle(java.lang.CharSequence)>",
							"<android.support.v7.app.ActionBarActivity: android.support.v7.app.ActionBar getSupportActionBar()>",
							"<java.lang.Object: java.lang.String toString()>",
							"<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getName()>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$202(cgeo.geocaching.TrackableActivity,java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getGeocode()>",
							"<cgeo.geocaching.TrackableActivity: android.view.LayoutInflater access$502(cgeo.geocaching.TrackableActivity,android.view.LayoutInflater)>",
							"<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$400(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Activity: void finish()>",
							"<cgeo.geocaching.activity.AbstractActivity: void showToast(java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void showToast(android.app.Activity,java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void postShowToast(android.app.Activity,java.lang.String,int)>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void run()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.app.Activity: void runOnUiThread(java.lang.Runnable)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void <init>(android.app.Activity,java.lang.String,int)>",
							"<java.lang.Object: void <init>()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<android.content.res.Resources: java.lang.String getString(int)>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$300(cgeo.geocaching.TrackableActivity)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$200(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Dialog: void dismiss()>",
							"<cgeo.geocaching.TrackableActivity: android.app.ProgressDialog access$100(cgeo.geocaching.TrackableActivity)>",
							"android.os.Handler.handleMessage",
							"android.os.Handler.handleCallback",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.HandlerThread.run",
							"android.os.HandlerThread.onLooperPrepared"
						]
					}
				]
			},
			{
				"Candidate Name":"cgeo.geocaching.activity.ActivityMixin.postShowToast",
				"Candidate Score":85,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.Handler.dispatchMessage",
							"android.os.Handler$Callback.handleMessage",
							"android.os.Handler.<clinit>",
							"android.os.Handler.<clinit>",
							"<cgeo.geocaching.TrackableActivity$1: void handleMessage(android.os.Message)>",
							"<cgeo.geocaching.TrackableActivity: cgeo.geocaching.Trackable access$000(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.utils.Log: void e(java.lang.String,java.lang.Throwable)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<cgeo.geocaching.TrackableActivity: void access$700(cgeo.geocaching.TrackableActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeICSAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>",
							"<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>",
							"<cgeo.geocaching.activity.AbstractActivity$1: void <init>(cgeo.geocaching.activity.AbstractActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity$1$1: void <init>(cgeo.geocaching.TrackableActivity$1)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity: void access$600(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: void reinitializeViewPager()>",
							"<java.util.Map: java.util.Collection values()>",
							"<com.viewpagerindicator.TitlePageIndicator: void notifyDataSetChanged()>",
							"<android.view.View: void invalidate()>",
							"<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$ViewPagerAdapter: int getCount()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: java.util.List access$000(cgeo.geocaching.activity.AbstractViewPagerActivity)>",
							"<java.util.List: int size()>",
							"<java.lang.Integer: int intValue()>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getRight()>",
							"<android.support.v4.view.PagerAdapter: void notifyDataSetChanged()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: int getCurrentItem()>",
							"<android.support.v4.view.ViewPager: int getCurrentItem()>",
							"<java.util.List: boolean addAll(java.util.Collection)>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getLeft()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: org.apache.commons.lang3.tuple.Pair getOrderedPages()>",
							"<java.util.List: void clear()>",
							"<android.os.Bundle: void clear()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$PageViewCreator: void notifyDataSetChanged()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.Collection: java.util.Iterator iterator()>",
							"<cgeo.geocaching.activity.AbstractActivity: void invalidateOptionsMenuCompatible()>",
							"<cgeo.geocaching.activity.ActivityMixin: void invalidateOptionsMenu(android.app.Activity)>",
							"<android.support.v7.app.ActionBarActivity: void supportInvalidateOptionsMenu()>",
							"<android.support.v4.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)>",
							"<cgeo.geocaching.activity.AbstractActionBarActivity: void setTitle(java.lang.CharSequence)>",
							"<android.app.Activity: void setTitle(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin: void setTitle(android.app.Activity,java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<java.lang.CharSequence: int length()>",
							"<java.lang.Character: boolean isWhitespace(char)>",
							"<java.lang.CharSequence: char charAt(int)>",
							"<android.support.v7.app.ActionBar: void setTitle(java.lang.CharSequence)>",
							"<android.support.v7.app.ActionBarActivity: android.support.v7.app.ActionBar getSupportActionBar()>",
							"<java.lang.Object: java.lang.String toString()>",
							"<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getName()>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$202(cgeo.geocaching.TrackableActivity,java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getGeocode()>",
							"<cgeo.geocaching.TrackableActivity: android.view.LayoutInflater access$502(cgeo.geocaching.TrackableActivity,android.view.LayoutInflater)>",
							"<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$400(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Activity: void finish()>",
							"<cgeo.geocaching.activity.AbstractActivity: void showToast(java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void showToast(android.app.Activity,java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void postShowToast(android.app.Activity,java.lang.String,int)>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void run()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.app.Activity: void runOnUiThread(java.lang.Runnable)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void <init>(android.app.Activity,java.lang.String,int)>",
							"<java.lang.Object: void <init>()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<android.content.res.Resources: java.lang.String getString(int)>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$300(cgeo.geocaching.TrackableActivity)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$200(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Dialog: void dismiss()>",
							"<cgeo.geocaching.TrackableActivity: android.app.ProgressDialog access$100(cgeo.geocaching.TrackableActivity)>",
							"android.os.Handler.handleMessage",
							"android.os.Handler.handleCallback",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.HandlerThread.run",
							"android.os.HandlerThread.onLooperPrepared"
						]
					}
				]
			},
			{
				"Candidate Name":"cgeo.geocaching.activity.AbstractViewPagerActivity.access$000",
				"Candidate Score":84,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.Handler.dispatchMessage",
							"android.os.Handler$Callback.handleMessage",
							"android.os.Handler.<clinit>",
							"android.os.Handler.<clinit>",
							"<cgeo.geocaching.TrackableActivity$1: void handleMessage(android.os.Message)>",
							"<cgeo.geocaching.TrackableActivity: cgeo.geocaching.Trackable access$000(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.utils.Log: void e(java.lang.String,java.lang.Throwable)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<cgeo.geocaching.TrackableActivity: void access$700(cgeo.geocaching.TrackableActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeICSAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>",
							"<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>",
							"<cgeo.geocaching.activity.AbstractActivity$1: void <init>(cgeo.geocaching.activity.AbstractActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity$1$1: void <init>(cgeo.geocaching.TrackableActivity$1)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity: void access$600(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: void reinitializeViewPager()>",
							"<java.util.Map: java.util.Collection values()>",
							"<com.viewpagerindicator.TitlePageIndicator: void notifyDataSetChanged()>",
							"<android.view.View: void invalidate()>",
							"<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$ViewPagerAdapter: int getCount()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: java.util.List access$000(cgeo.geocaching.activity.AbstractViewPagerActivity)>",
							"<java.util.List: int size()>",
							"<java.lang.Integer: int intValue()>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getRight()>",
							"<android.support.v4.view.PagerAdapter: void notifyDataSetChanged()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: int getCurrentItem()>",
							"<android.support.v4.view.ViewPager: int getCurrentItem()>",
							"<java.util.List: boolean addAll(java.util.Collection)>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getLeft()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: org.apache.commons.lang3.tuple.Pair getOrderedPages()>",
							"<java.util.List: void clear()>",
							"<android.os.Bundle: void clear()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$PageViewCreator: void notifyDataSetChanged()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.Collection: java.util.Iterator iterator()>",
							"<cgeo.geocaching.activity.AbstractActivity: void invalidateOptionsMenuCompatible()>",
							"<cgeo.geocaching.activity.ActivityMixin: void invalidateOptionsMenu(android.app.Activity)>",
							"<android.support.v7.app.ActionBarActivity: void supportInvalidateOptionsMenu()>",
							"<android.support.v4.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)>",
							"<cgeo.geocaching.activity.AbstractActionBarActivity: void setTitle(java.lang.CharSequence)>",
							"<android.app.Activity: void setTitle(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin: void setTitle(android.app.Activity,java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<java.lang.CharSequence: int length()>",
							"<java.lang.Character: boolean isWhitespace(char)>",
							"<java.lang.CharSequence: char charAt(int)>",
							"<android.support.v7.app.ActionBar: void setTitle(java.lang.CharSequence)>",
							"<android.support.v7.app.ActionBarActivity: android.support.v7.app.ActionBar getSupportActionBar()>",
							"<java.lang.Object: java.lang.String toString()>",
							"<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getName()>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$202(cgeo.geocaching.TrackableActivity,java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getGeocode()>",
							"<cgeo.geocaching.TrackableActivity: android.view.LayoutInflater access$502(cgeo.geocaching.TrackableActivity,android.view.LayoutInflater)>",
							"<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$400(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Activity: void finish()>",
							"<cgeo.geocaching.activity.AbstractActivity: void showToast(java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void showToast(android.app.Activity,java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void postShowToast(android.app.Activity,java.lang.String,int)>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void run()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.app.Activity: void runOnUiThread(java.lang.Runnable)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void <init>(android.app.Activity,java.lang.String,int)>",
							"<java.lang.Object: void <init>()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<android.content.res.Resources: java.lang.String getString(int)>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$300(cgeo.geocaching.TrackableActivity)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$200(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Dialog: void dismiss()>",
							"<cgeo.geocaching.TrackableActivity: android.app.ProgressDialog access$100(cgeo.geocaching.TrackableActivity)>",
							"android.os.Handler.handleMessage",
							"android.os.Handler.handleCallback",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.HandlerThread.run",
							"android.os.HandlerThread.onLooperPrepared"
						]
					}
				]
			},
			{
				"Candidate Name":"cgeo.geocaching.activity.ActivityMixin$1.<init>",
				"Candidate Score":84,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.Handler.dispatchMessage",
							"android.os.Handler$Callback.handleMessage",
							"android.os.Handler.<clinit>",
							"android.os.Handler.<clinit>",
							"<cgeo.geocaching.TrackableActivity$1: void handleMessage(android.os.Message)>",
							"<cgeo.geocaching.TrackableActivity: cgeo.geocaching.Trackable access$000(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.utils.Log: void e(java.lang.String,java.lang.Throwable)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<cgeo.geocaching.TrackableActivity: void access$700(cgeo.geocaching.TrackableActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeICSAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>",
							"<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>",
							"<cgeo.geocaching.activity.AbstractActivity$1: void <init>(cgeo.geocaching.activity.AbstractActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity$1$1: void <init>(cgeo.geocaching.TrackableActivity$1)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity: void access$600(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: void reinitializeViewPager()>",
							"<java.util.Map: java.util.Collection values()>",
							"<com.viewpagerindicator.TitlePageIndicator: void notifyDataSetChanged()>",
							"<android.view.View: void invalidate()>",
							"<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$ViewPagerAdapter: int getCount()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: java.util.List access$000(cgeo.geocaching.activity.AbstractViewPagerActivity)>",
							"<java.util.List: int size()>",
							"<java.lang.Integer: int intValue()>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getRight()>",
							"<android.support.v4.view.PagerAdapter: void notifyDataSetChanged()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: int getCurrentItem()>",
							"<android.support.v4.view.ViewPager: int getCurrentItem()>",
							"<java.util.List: boolean addAll(java.util.Collection)>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getLeft()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: org.apache.commons.lang3.tuple.Pair getOrderedPages()>",
							"<java.util.List: void clear()>",
							"<android.os.Bundle: void clear()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$PageViewCreator: void notifyDataSetChanged()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.Collection: java.util.Iterator iterator()>",
							"<cgeo.geocaching.activity.AbstractActivity: void invalidateOptionsMenuCompatible()>",
							"<cgeo.geocaching.activity.ActivityMixin: void invalidateOptionsMenu(android.app.Activity)>",
							"<android.support.v7.app.ActionBarActivity: void supportInvalidateOptionsMenu()>",
							"<android.support.v4.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)>",
							"<cgeo.geocaching.activity.AbstractActionBarActivity: void setTitle(java.lang.CharSequence)>",
							"<android.app.Activity: void setTitle(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin: void setTitle(android.app.Activity,java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<java.lang.CharSequence: int length()>",
							"<java.lang.Character: boolean isWhitespace(char)>",
							"<java.lang.CharSequence: char charAt(int)>",
							"<android.support.v7.app.ActionBar: void setTitle(java.lang.CharSequence)>",
							"<android.support.v7.app.ActionBarActivity: android.support.v7.app.ActionBar getSupportActionBar()>",
							"<java.lang.Object: java.lang.String toString()>",
							"<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getName()>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$202(cgeo.geocaching.TrackableActivity,java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getGeocode()>",
							"<cgeo.geocaching.TrackableActivity: android.view.LayoutInflater access$502(cgeo.geocaching.TrackableActivity,android.view.LayoutInflater)>",
							"<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$400(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Activity: void finish()>",
							"<cgeo.geocaching.activity.AbstractActivity: void showToast(java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void showToast(android.app.Activity,java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void postShowToast(android.app.Activity,java.lang.String,int)>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void run()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.app.Activity: void runOnUiThread(java.lang.Runnable)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void <init>(android.app.Activity,java.lang.String,int)>",
							"<java.lang.Object: void <init>()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<android.content.res.Resources: java.lang.String getString(int)>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$300(cgeo.geocaching.TrackableActivity)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$200(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Dialog: void dismiss()>",
							"<cgeo.geocaching.TrackableActivity: android.app.ProgressDialog access$100(cgeo.geocaching.TrackableActivity)>",
							"android.os.Handler.handleMessage",
							"android.os.Handler.handleCallback",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.HandlerThread.run",
							"android.os.HandlerThread.onLooperPrepared"
						]
					}
				]
			},
			{
				"Candidate Name":"cgeo.geocaching.activity.ActivityMixin$1.run",
				"Candidate Score":84,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.Handler.dispatchMessage",
							"android.os.Handler$Callback.handleMessage",
							"android.os.Handler.<clinit>",
							"android.os.Handler.<clinit>",
							"<cgeo.geocaching.TrackableActivity$1: void handleMessage(android.os.Message)>",
							"<cgeo.geocaching.TrackableActivity: cgeo.geocaching.Trackable access$000(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.utils.Log: void e(java.lang.String,java.lang.Throwable)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<cgeo.geocaching.TrackableActivity: void access$700(cgeo.geocaching.TrackableActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<cgeo.geocaching.activity.AbstractActivity: void initializeICSAndroidBeam(cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>",
							"<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>",
							"<cgeo.geocaching.activity.AbstractActivity$1: void <init>(cgeo.geocaching.activity.AbstractActivity,cgeo.geocaching.activity.AbstractActivity$ActivitySharingInterface)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity$1$1: void <init>(cgeo.geocaching.TrackableActivity$1)>",
							"<java.lang.Object: void <init>()>",
							"<cgeo.geocaching.TrackableActivity: void access$600(cgeo.geocaching.TrackableActivity)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: void reinitializeViewPager()>",
							"<java.util.Map: java.util.Collection values()>",
							"<com.viewpagerindicator.TitlePageIndicator: void notifyDataSetChanged()>",
							"<android.view.View: void invalidate()>",
							"<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$ViewPagerAdapter: int getCount()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: java.util.List access$000(cgeo.geocaching.activity.AbstractViewPagerActivity)>",
							"<java.util.List: int size()>",
							"<java.lang.Integer: int intValue()>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getRight()>",
							"<android.support.v4.view.PagerAdapter: void notifyDataSetChanged()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: int getCurrentItem()>",
							"<android.support.v4.view.ViewPager: int getCurrentItem()>",
							"<java.util.List: boolean addAll(java.util.Collection)>",
							"<org.apache.commons.lang3.tuple.Pair: java.lang.Object getLeft()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity: org.apache.commons.lang3.tuple.Pair getOrderedPages()>",
							"<java.util.List: void clear()>",
							"<android.os.Bundle: void clear()>",
							"<cgeo.geocaching.activity.AbstractViewPagerActivity$PageViewCreator: void notifyDataSetChanged()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.Collection: java.util.Iterator iterator()>",
							"<cgeo.geocaching.activity.AbstractActivity: void invalidateOptionsMenuCompatible()>",
							"<cgeo.geocaching.activity.ActivityMixin: void invalidateOptionsMenu(android.app.Activity)>",
							"<android.support.v7.app.ActionBarActivity: void supportInvalidateOptionsMenu()>",
							"<android.support.v4.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)>",
							"<cgeo.geocaching.activity.AbstractActionBarActivity: void setTitle(java.lang.CharSequence)>",
							"<android.app.Activity: void setTitle(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin: void setTitle(android.app.Activity,java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<java.lang.CharSequence: int length()>",
							"<java.lang.Character: boolean isWhitespace(char)>",
							"<java.lang.CharSequence: char charAt(int)>",
							"<android.support.v7.app.ActionBar: void setTitle(java.lang.CharSequence)>",
							"<android.support.v7.app.ActionBarActivity: android.support.v7.app.ActionBar getSupportActionBar()>",
							"<java.lang.Object: java.lang.String toString()>",
							"<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getName()>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$202(cgeo.geocaching.TrackableActivity,java.lang.String)>",
							"<cgeo.geocaching.Trackable: java.lang.String getGeocode()>",
							"<cgeo.geocaching.TrackableActivity: android.view.LayoutInflater access$502(cgeo.geocaching.TrackableActivity,android.view.LayoutInflater)>",
							"<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$400(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Activity: void finish()>",
							"<cgeo.geocaching.activity.AbstractActivity: void showToast(java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void showToast(android.app.Activity,java.lang.String)>",
							"<cgeo.geocaching.activity.ActivityMixin: void postShowToast(android.app.Activity,java.lang.String,int)>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void run()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.app.Activity: void runOnUiThread(java.lang.Runnable)>",
							"<cgeo.geocaching.activity.ActivityMixin$1: void <init>(android.app.Activity,java.lang.String,int)>",
							"<java.lang.Object: void <init>()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<android.content.res.Resources: java.lang.String getString(int)>",
							"<cgeo.geocaching.TrackableActivity: android.content.res.Resources access$300(cgeo.geocaching.TrackableActivity)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>",
							"<cgeo.geocaching.TrackableActivity: java.lang.String access$200(cgeo.geocaching.TrackableActivity)>",
							"<android.app.Dialog: void dismiss()>",
							"<cgeo.geocaching.TrackableActivity: android.app.ProgressDialog access$100(cgeo.geocaching.TrackableActivity)>",
							"android.os.Handler.handleMessage",
							"android.os.Handler.handleCallback",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.Handler$BlockingRunnable.run",
							"android.os.HandlerThread.run",
							"android.os.HandlerThread.onLooperPrepared"
						]
					}
				]
			},
			{
				"Candidate Name":"dalvik.system.NativeStart.main",
				"Candidate Score":75,
				"Reasons":[
					{
						"Reason Type":"Executed Method 1",
						"Explanation":"Not influence the keyVar but in crash trace",
						"Trace":[
							"dalvik.system.NativeStart.main"
						]
					},
					{
						"Reason Type":"Key Variable Related 1",
						"Explanation":"Influences the value of keyVar by modifying the value of the passed parameters",
						"Influenced parameter id":"1",
						"Influenced method":"android.app.FragmentManagerImpl.enqueueAction",
						"Trace":[
							"dalvik.system.NativeStart.main"
						]
					}
				]
			}
		],
		"None-Code Labels":[
			"Hardware"
		]
	}
}