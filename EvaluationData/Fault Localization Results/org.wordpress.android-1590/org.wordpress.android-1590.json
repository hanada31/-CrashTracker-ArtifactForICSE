{
	"Crash Info in Dataset":{
		"Apk name":"org.wordpress.android-1590",
		"Method":"android.app.Activity.dismissDialog",
		"Crash Message":"no dialog with id 1 was ever shown via Activity#showDialog",
		"stack trace":[
			"android.app.Activity.missingDialog",
			"android.app.Activity.dismissDialog",
			"org.wordpress.android.ui.posts.PostsActivity$deletePostTask.onPostExecute",
			"org.wordpress.android.ui.posts.PostsActivity$deletePostTask.onPostExecute",
			"android.os.AsyncTask.finish",
			"android.os.AsyncTask.access$600",
			"android.os.AsyncTask$InternalHandler.handleMessage",
			"android.os.Handler.dispatchMessage",
			"android.os.Looper.loop",
			"android.app.ActivityThread.main",
			"java.lang.reflect.Method.invokeNative",
			"java.lang.reflect.Method.invoke",
			"com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run",
			"com.android.internal.os.ZygoteInit.main",
			"dalvik.system.NativeStart.main"
		],
		"Labeled Buggy Method":"org.wordpress.android.ui.posts.PostsActivity$deletePostTask.onPostExecute"
	},
	"Fault Localization by CrashTracker":{
		"Regression Message":"\\Qno dialog with id \\E[\\s\\S]*\\Q was ever shown via Activity#showDialog\\E",
		"Related Variable Type":"ParaAndField",
		"Fault Inducing Paras":[
			0
		],
		"Related Condition Type":"BasicCondition",
		"Conditions":"\"r4 != null\", \"$r1 != null\"",
		"ETS-related Type":"KeyVarAndKeyAPI",
		"Buggy Method Candidates":[
			{
				"Candidate Name":"org.wordpress.android.ui.posts.PostsActivity$deletePostTask.onPostExecute",
				"Candidate Score":102,
				"Reasons":[
					{
						"Reason Type":"Key API Related",
						"Explanation":"Caller of keyAPI <android.app.Activity: void dismissDialog(int)>",
						"Trace":[
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"fw: <android.app.Activity: void dismissDialog(int)>"
						],
						"Influenced Field":[],
						"Signaler":"android.app.Activity.missingDialog"
					},
					{
						"Reason Type":"Executed Method 1",
						"Explanation":"Not influence the keyVar but in crash trace",
						"Trace":[
							"org.wordpress.android.ui.posts.PostsActivity$deletePostTask.onPostExecute"
						]
					},
					{
						"Reason Type":"Key Variable Related 1",
						"Explanation":"Influences the value of keyVar by modifying the value of the passed parameters",
						"Influenced parameter id":[
							0
						],
						"Influenced method":"android.app.Activity.missingDialog",
						"Trace":[
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Object)>"
						]
					},
					{
						"Reason Type":"Key Variable Related 1",
						"Explanation":"Influences the value of keyVar by modifying the value of the passed parameters",
						"Influenced parameter id":"0",
						"Influenced method":"android.app.Activity.missingDialog",
						"Trace":[
							"org.wordpress.android.ui.posts.PostsActivity$deletePostTask.onPostExecute"
						]
					},
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.AsyncTask.finish",
							"android.os.AsyncTask.isCancelled",
							"android.os.AsyncTask.onCancelled",
							"android.os.AsyncTask.onCancelled",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"<android.app.Activity: void dismissDialog(int)>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask$1: void <init>(org.wordpress.android.ui.posts.PostsActivity$deletePostTask)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHelper: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHeaderTransformer: void setShowProgressBarOnly(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void ensureAttacher()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshingInt(android.view.View,boolean,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean isDestroyed()>",
							"<android.util.Log: int i(java.lang.String,java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void reset(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<android.view.View: boolean removeCallbacks(java.lang.Runnable)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void startRefresh(android.view.View,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.OnRefreshListener: void onRefreshStarted(android.view.View)>",
							"<android.view.View: boolean post(java.lang.Runnable)>",
							"<android.view.View: boolean postDelayed(java.lang.Runnable,long)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void updateHeaderViewPosition(android.view.View)>",
							"<android.app.Activity: android.view.Window getWindow()>",
							"<android.view.View: java.lang.Object getTag()>",
							"<android.view.ViewManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>",
							"<android.app.Activity: android.view.WindowManager getWindowManager()>",
							"<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>",
							"<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>",
							"<android.view.Window: android.view.View getDecorView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: void onRefreshStarted()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean canRefresh(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void resetTouch()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: boolean hasActivity()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Object)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Boolean)>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.xmlrpc.android.ApiHelper$GenericErrorCallback: void onFailure(org.xmlrpc.android.ApiHelper$ErrorType,java.lang.String,java.lang.Throwable)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback: void onSuccess(int)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Object doInBackground(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Boolean doInBackground(java.util.List[])>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.wordpress.android.WordPressDB: void savePosts(java.util.List,int,boolean,boolean)>",
							"<java.util.List: int size()>",
							"<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>",
							"<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>",
							"<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.util.SqlUtils: long boolToSql(boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.wordpress.android.util.MapUtils: int getMapInt(java.util.Map,java.lang.String,int)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.lang.Integer: int parseInt(java.lang.String)>",
							"<java.lang.Object: boolean equals(java.lang.Object)>",
							"<org.json.JSONArray: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: int getTimezoneOffset()>",
							"<java.util.Date: void <init>(long)>",
							"<java.lang.Long: long longValue()>",
							"<android.content.ContentValues: java.lang.Object get(java.lang.String)>",
							"<android.database.sqlite.SQLiteDatabase: void endTransaction()>",
							"<java.util.Date: void <init>()>",
							"<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<org.json.JSONArray: void <init>()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>",
							"<java.lang.Long: java.lang.Long valueOf(long)>",
							"<java.util.Date: long getTime()>",
							"<org.wordpress.android.util.MapUtils: java.util.Date getMapDate(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.String)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<android.content.ContentValues: void <init>()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<android.database.sqlite.SQLiteDatabase: void beginTransaction()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<org.wordpress.android.WordPressDB: void deleteUploadedPosts(int,boolean)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.xmlrpc.android.XMLRPCClientInterface: java.lang.Object call(java.lang.String,java.lang.Object[])>",
							"<org.wordpress.android.models.Blog: java.lang.String getPassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUsername()>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.xmlrpc.android.XMLRPCFactory: org.xmlrpc.android.XMLRPCClientInterface instantiate(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.xmlrpc.android.XMLRPCFactoryDefault: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.xmlrpc.android.XMLRPCFactoryAbstract: org.xmlrpc.android.XMLRPCClientInterface make(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void v(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean access$300(org.wordpress.android.util.AppLog$LogEntryList,org.wordpress.android.util.AppLog$LogEntry)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean addEntry(org.wordpress.android.util.AppLog$LogEntry)>",
							"<java.util.ArrayList: int size()>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void removeFirstEntry()>",
							"<java.util.ArrayList: java.util.Iterator iterator()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$EntrySet$1: java.util.Map$Entry next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt(int)>",
							"<org.apache.commons.lang.math.JVMRandom: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<java.util.Random: int nextInt(int)>",
							"<java.util.Random: int nextInt()>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object next()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: void checkTokenized()>",
							"<java.lang.String: void <clinit>()>",
							"<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.List: int size()>",
							"<java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.Vector: int size()>",
							"<java.util.ArrayList: int size()>",
							"<java.util.LinkedList: int size()>",
							"<java.util.concurrent.CopyOnWriteArrayList: int size()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer: java.util.List tokenize(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.Collections: void <clinit>()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<java.lang.String: int length()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: boolean add(java.lang.Object)>",
							"<java.util.AbstractList: boolean add(java.lang.Object)>",
							"<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<java.util.LinkedList: boolean add(java.lang.Object)>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isEmptyTokenAsNull()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isIgnoreEmptyTokens()>",
							"<org.apache.commons.lang.text.StrTokenizer: int readNextToken(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List)>",
							"<java.lang.Math: int max(int,int)>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<java.util.Arrays: int binarySearch(char[],char)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: int readWithQuotes(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder clear()>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isQuote(char[],int,int,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.String substring(int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int validateRange(int,int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char[],int,int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(int)>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder appendNull()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getQuoteMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void <init>()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: java.lang.Object next()>",
							"<java.util.GregorianCalendar: boolean equals(java.lang.Object)>",
							"<java.util.Calendar: void add(int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.GregorianCalendar: void add(int,int)>",
							"<java.util.Calendar: boolean equals(java.lang.Object)>",
							"<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$KeySet$1: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap$Values$1: java.lang.Object next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: java.lang.Object next()>",
							"<java.lang.Character: void <clinit>()>",
							"<java.lang.Character: void <init>(char)>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: void prepareNext()>",
							"<org.apache.commons.lang.CharRange: boolean access$100(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$200(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$300(org.apache.commons.lang.CharRange)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: java.lang.Object next()>",
							"<java.util.Scanner: java.lang.String next()>",
							"<android.support.v4.util.MapCollections$MapIterator: java.util.Map$Entry next()>",
							"<android.support.v4.util.MapCollections$MapIterator: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: boolean hasNext()>",
							"<java.util.Calendar: boolean before(java.lang.Object)>",
							"<com.google.gson.JsonStreamParser: boolean hasNext()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<com.google.gson.JsonIOException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<java.lang.RuntimeException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonSyntaxException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>",
							"<com.google.gson.stream.JsonReader$2: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: com.google.gson.stream.JsonScope[] values()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.support.v4.util.SparseArrayCompat: android.support.v4.util.SparseArrayCompat clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object cloneReset()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: java.lang.Object clone()>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrTokenizer reset()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.MalformedJsonException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.io.Reader: int read(char[],int,int)>",
							"<com.google.gson.internal.bind.JsonTreeReader$1: int read(char[],int,int)>",
							"<java.lang.AssertionError: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderReader: int read(char[],int,int)>",
							"<java.lang.IndexOutOfBoundsException: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void getChars(int,int,char[],int)>",
							"<java.lang.System: void <clinit>()>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<java.io.BufferedReader: int read(char[],int,int)>",
							"<java.io.InputStreamReader: int read(char[],int,int)>",
							"<java.io.FilterReader: int read(char[],int,int)>",
							"<java.io.PushbackReader: int read(char[],int,int)>",
							"<java.io.StringReader: int read(char[],int,int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.io.EOFException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: void skipToEndOfLine()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean skipTo(java.lang.String)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.String: char charAt(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken objectValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<java.lang.String: char charAt(int)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: char readEscapeCharacter()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.NumberFormatException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: void push(com.google.gson.stream.JsonScope)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken readLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeNumber(char[],int,int)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInObject(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInArray(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: void consumeNonExecutePrefix()>",
							"<com.google.gson.stream.JsonReader: void <clinit>()>",
							"<java.lang.String: char[] toCharArray()>",
							"<com.google.gson.stream.JsonReader$1: void <init>()>",
							"<com.google.gson.internal.JsonReaderInternalAccess: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.util.Scanner: boolean hasNext()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: boolean hasNext()>",
							"<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: boolean hasNext()>",
							"<java.util.ArrayList: boolean remove(java.lang.Object)>",
							"<android.util.Log: int v(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttppassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttpuser()>",
							"<org.wordpress.android.models.Blog: java.net.URI getUri()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUrl()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.net.URI: void <init>(java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void <init>(org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback)>",
							"<org.xmlrpc.android.ApiHelper$HelperAsyncTask: void <init>()>",
							"<android.os.AsyncTask: void <init>()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$7: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<android.view.View: void setVisibility(int)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: int getRemotePostCount()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.models.PostsListPost: boolean isLocalDraft()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: org.wordpress.android.ui.posts.adapters.PostsListAdapter getPostListAdapter()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$4: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: void <init>(android.content.Context,boolean,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnLoadMoreListener,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnPostsLoadedListener)>",
							"<android.widget.BaseAdapter: void <init>()>",
							"<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>",
							"<java.util.ArrayList: void <init>()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$5: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.NetworkUtils: boolean checkConnection(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: boolean isNetworkAvailable(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: android.net.NetworkInfo getActiveNetworkInfo(android.content.Context)>",
							"<android.content.Context: java.lang.Object getSystemService(java.lang.String)>",
							"<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>",
							"<android.net.NetworkInfo: boolean isConnected()>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.content.Context: java.lang.String getString(int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,java.lang.String,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.wordpress.android.WordPressDB: void updateLastBlogId(int)>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences$Editor: boolean commit()>",
							"<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>",
							"<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<org.wordpress.android.WordPressDB: org.wordpress.android.models.Blog instantiateBlogByLocalId(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<android.database.Cursor: void close()>",
							"<org.wordpress.android.models.Blog: void setHidden(boolean)>",
							"<org.wordpress.android.models.Blog: void setAdmin(boolean)>",
							"<org.wordpress.android.models.Blog: void setBlogOptions(java.lang.String)>",
							"<org.wordpress.android.models.Blog: org.json.JSONObject getBlogOptionsJSONObject()>",
							"<org.wordpress.android.models.Blog: java.lang.String getBlogOptions()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.wordpress.android.util.CrashlyticsUtils: void logException(java.lang.Throwable,org.wordpress.android.util.CrashlyticsUtils$ExceptionType,org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<java.lang.Enum: java.lang.String name()>",
							"<com.crashlytics.android.Crashlytics: void setString(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: int size()>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.v: void <init>()>",
							"<com.crashlytics.android.internal.m: void <clinit>()>",
							"<com.crashlytics.android.internal.n: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.o: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.B: void <init>(com.crashlytics.android.internal.m)>",
							"<android.os.Looper: android.os.Looper getMainLooper()>",
							"<android.os.Handler: void <init>(android.os.Looper)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String)>",
							"<com.crashlytics.android.internal.i: void <clinit>()>",
							"<com.crashlytics.android.internal.j: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String,com.crashlytics.android.internal.i)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(java.lang.String)>",
							"<java.util.HashMap: void <init>()>",
							"<com.crashlytics.android.internal.d: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<com.crashlytics.android.internal.c: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.v: int g()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>",
							"<com.crashlytics.android.internal.r: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<com.crashlytics.android.internal.ab: void <clinit>()>",
							"<com.crashlytics.android.internal.ac: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.ab: boolean f(android.content.Context)>",
							"<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.Crashlytics: void <init>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.u: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.System: long currentTimeMillis()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.u a(java.lang.Class)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: java.lang.String c(java.lang.String)>",
							"<java.lang.String: java.lang.String trim()>",
							"<java.lang.String: java.lang.String substring(int,int)>",
							"<java.lang.String: int length()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: void logException(java.lang.Throwable)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.v: void a(java.lang.Thread,java.lang.Throwable)>",
							"<java.util.Date: void <init>()>",
							"<com.crashlytics.android.v: java.util.concurrent.Future a(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.AbstractExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.G: void <init>(com.crashlytics.android.v,java.lang.Runnable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.P: void <init>(com.crashlytics.android.v,java.util.Date,java.lang.Thread,java.lang.Throwable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.A: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String,boolean)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int println(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<java.lang.Thread: java.lang.Thread currentThread()>",
							"<org.json.JSONObject: void <init>(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.json.JSONObject: java.lang.String getString(java.lang.String)>",
							"<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.json.JSONObject: boolean has(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHomeURL(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setScaledImageWidth(int)>",
							"<org.wordpress.android.models.Blog: void setScaledImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setPostFormats(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setWpVersion(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_key(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_password(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_username(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcomFlag(boolean)>",
							"<org.wordpress.android.models.Blog: void setLocation(boolean)>",
							"<org.wordpress.android.models.Blog: void setRemoteBlogId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidthId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidth(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setFullSizeImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setFeaturedImageCapable(boolean)>",
							"<android.database.Cursor: int getInt(int)>",
							"<org.wordpress.android.models.Blog: void setImagePlacement(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttppassword(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttpuser(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setPassword(java.lang.String)>",
							"<org.wordpress.android.WordPressDB: java.lang.String decryptPassword(java.lang.String)>",
							"<java.lang.String: byte[] getBytes(java.lang.String)>",
							"<java.lang.String: void <init>(byte[])>",
							"<javax.crypto.Cipher: byte[] doFinal(byte[])>",
							"<javax.crypto.Cipher: void init(int,java.security.Key)>",
							"<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
							"<android.util.Base64: byte[] decode(java.lang.String,int)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>",
							"<javax.crypto.spec.DESKeySpec: void <init>(byte[])>",
							"<org.wordpress.android.models.Blog: void setUsername(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setBlogName(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setUrl(java.lang.String)>",
							"<android.database.Cursor: int getColumnIndex(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setLocalTableBlogId(int)>",
							"<org.wordpress.android.models.Blog: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.util.List: int size()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPressDB: java.util.List getAccountsBy(java.lang.String,java.lang.String[])>",
							"<java.util.Vector: void <init>()>",
							"<java.util.Collections: void sort(java.util.List,java.util.Comparator)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: boolean moveToNext()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.util.HashMap: void <init>()>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: int getInt(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] addAll(java.lang.Object[],java.lang.Object[])>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] clone(java.lang.Object[])>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.Class: java.lang.String getName()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>",
							"<java.lang.Class: java.lang.Class getComponentType()>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlogToLastActive()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.WordPressDB: int getLastBlogId()>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences: int getInt(java.lang.String,int)>",
							"<org.wordpress.android.WordPressDB: boolean isDotComAccountVisible(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<org.wordpress.android.util.SqlUtils: boolean boolForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: boolean sqlToBool(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: org.wordpress.android.ui.posts.PostsListFragment access$100(org.wordpress.android.ui.posts.PostsActivity)>",
							"<org.wordpress.android.WordPressDB: boolean deletePost(org.wordpress.android.models.Post)>",
							"<org.wordpress.android.models.Post: int getLocalTableBlogId()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.models.Post: long getLocalTablePostId()>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void checkForLocalChanges(boolean)>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void popPostDetail()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getHTMLStringStackTrace(java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getStringStackTrace(java.lang.Throwable)>",
							"<java.io.StringWriter: void <init>()>",
							"<org.apache.commons.lang.exception.NestableError: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.NotImplementedException: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: void printStackTrace(java.io.PrintWriter)>",
							"<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableException: void printStackTrace(java.io.PrintWriter)>",
							"<java.io.PrintWriter: void <init>(java.io.Writer)>",
							"<java.io.StringWriter: java.lang.String toString()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<android.support.v4.app.FragmentManager: void popBackStack()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$5: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$4: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.WordPressDB: boolean findLocalChanges(int,boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.wordpress.android.ui.posts.PostsActivity: void attemptToSelectPost()>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setShouldSelectFirstPost(boolean)>",
							"<android.support.v4.app.Fragment: boolean isInLayout()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Object)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"android.os.AsyncTask.onPostExecute",
							"android.os.AsyncTask$Status.<clinit>",
							"android.os.AsyncTask$Status.<clinit>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<android.os.AsyncTask: void <init>()>",
							"android.os.AsyncTask$Status.<init>"
						]
					},
					{"$ref":"$.Fault\\ Localization\\ by\\ CrashTracker.Buggy\\ Method\\ Candidates[0].Reasons[4]"},
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.AsyncTask.finish",
							"android.os.AsyncTask.isCancelled",
							"android.os.AsyncTask.onCancelled",
							"android.os.AsyncTask.onCancelled",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"<android.app.Activity: void dismissDialog(int)>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask$1: void <init>(org.wordpress.android.ui.posts.PostsActivity$deletePostTask)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHelper: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHeaderTransformer: void setShowProgressBarOnly(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void ensureAttacher()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshingInt(android.view.View,boolean,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean isDestroyed()>",
							"<android.util.Log: int i(java.lang.String,java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void reset(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<android.view.View: boolean removeCallbacks(java.lang.Runnable)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void startRefresh(android.view.View,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.OnRefreshListener: void onRefreshStarted(android.view.View)>",
							"<android.view.View: boolean post(java.lang.Runnable)>",
							"<android.view.View: boolean postDelayed(java.lang.Runnable,long)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void updateHeaderViewPosition(android.view.View)>",
							"<android.app.Activity: android.view.Window getWindow()>",
							"<android.view.View: java.lang.Object getTag()>",
							"<android.view.ViewManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>",
							"<android.app.Activity: android.view.WindowManager getWindowManager()>",
							"<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>",
							"<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>",
							"<android.view.Window: android.view.View getDecorView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: void onRefreshStarted()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean canRefresh(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void resetTouch()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: boolean hasActivity()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Object)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Boolean)>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.xmlrpc.android.ApiHelper$GenericErrorCallback: void onFailure(org.xmlrpc.android.ApiHelper$ErrorType,java.lang.String,java.lang.Throwable)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback: void onSuccess(int)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Object doInBackground(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Boolean doInBackground(java.util.List[])>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.wordpress.android.WordPressDB: void savePosts(java.util.List,int,boolean,boolean)>",
							"<java.util.List: int size()>",
							"<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>",
							"<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>",
							"<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.util.SqlUtils: long boolToSql(boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.wordpress.android.util.MapUtils: int getMapInt(java.util.Map,java.lang.String,int)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.lang.Integer: int parseInt(java.lang.String)>",
							"<java.lang.Object: boolean equals(java.lang.Object)>",
							"<org.json.JSONArray: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: int getTimezoneOffset()>",
							"<java.util.Date: void <init>(long)>",
							"<java.lang.Long: long longValue()>",
							"<android.content.ContentValues: java.lang.Object get(java.lang.String)>",
							"<android.database.sqlite.SQLiteDatabase: void endTransaction()>",
							"<java.util.Date: void <init>()>",
							"<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<org.json.JSONArray: void <init>()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>",
							"<java.lang.Long: java.lang.Long valueOf(long)>",
							"<java.util.Date: long getTime()>",
							"<org.wordpress.android.util.MapUtils: java.util.Date getMapDate(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.String)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<android.content.ContentValues: void <init>()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<android.database.sqlite.SQLiteDatabase: void beginTransaction()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<org.wordpress.android.WordPressDB: void deleteUploadedPosts(int,boolean)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.xmlrpc.android.XMLRPCClientInterface: java.lang.Object call(java.lang.String,java.lang.Object[])>",
							"<org.wordpress.android.models.Blog: java.lang.String getPassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUsername()>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.xmlrpc.android.XMLRPCFactory: org.xmlrpc.android.XMLRPCClientInterface instantiate(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.xmlrpc.android.XMLRPCFactoryDefault: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.xmlrpc.android.XMLRPCFactoryAbstract: org.xmlrpc.android.XMLRPCClientInterface make(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void v(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean access$300(org.wordpress.android.util.AppLog$LogEntryList,org.wordpress.android.util.AppLog$LogEntry)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean addEntry(org.wordpress.android.util.AppLog$LogEntry)>",
							"<java.util.ArrayList: int size()>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void removeFirstEntry()>",
							"<java.util.ArrayList: java.util.Iterator iterator()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$EntrySet$1: java.util.Map$Entry next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt(int)>",
							"<org.apache.commons.lang.math.JVMRandom: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<java.util.Random: int nextInt(int)>",
							"<java.util.Random: int nextInt()>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object next()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: void checkTokenized()>",
							"<java.lang.String: void <clinit>()>",
							"<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.List: int size()>",
							"<java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.Vector: int size()>",
							"<java.util.ArrayList: int size()>",
							"<java.util.LinkedList: int size()>",
							"<java.util.concurrent.CopyOnWriteArrayList: int size()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer: java.util.List tokenize(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.Collections: void <clinit>()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<java.lang.String: int length()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: boolean add(java.lang.Object)>",
							"<java.util.AbstractList: boolean add(java.lang.Object)>",
							"<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<java.util.LinkedList: boolean add(java.lang.Object)>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isEmptyTokenAsNull()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isIgnoreEmptyTokens()>",
							"<org.apache.commons.lang.text.StrTokenizer: int readNextToken(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List)>",
							"<java.lang.Math: int max(int,int)>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<java.util.Arrays: int binarySearch(char[],char)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: int readWithQuotes(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder clear()>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isQuote(char[],int,int,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.String substring(int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int validateRange(int,int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char[],int,int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(int)>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder appendNull()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getQuoteMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void <init>()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: java.lang.Object next()>",
							"<java.util.GregorianCalendar: boolean equals(java.lang.Object)>",
							"<java.util.Calendar: void add(int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.GregorianCalendar: void add(int,int)>",
							"<java.util.Calendar: boolean equals(java.lang.Object)>",
							"<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$KeySet$1: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap$Values$1: java.lang.Object next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: java.lang.Object next()>",
							"<java.lang.Character: void <clinit>()>",
							"<java.lang.Character: void <init>(char)>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: void prepareNext()>",
							"<org.apache.commons.lang.CharRange: boolean access$100(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$200(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$300(org.apache.commons.lang.CharRange)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: java.lang.Object next()>",
							"<java.util.Scanner: java.lang.String next()>",
							"<android.support.v4.util.MapCollections$MapIterator: java.util.Map$Entry next()>",
							"<android.support.v4.util.MapCollections$MapIterator: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: boolean hasNext()>",
							"<java.util.Calendar: boolean before(java.lang.Object)>",
							"<com.google.gson.JsonStreamParser: boolean hasNext()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<com.google.gson.JsonIOException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<java.lang.RuntimeException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonSyntaxException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>",
							"<com.google.gson.stream.JsonReader$2: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: com.google.gson.stream.JsonScope[] values()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.support.v4.util.SparseArrayCompat: android.support.v4.util.SparseArrayCompat clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object cloneReset()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: java.lang.Object clone()>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrTokenizer reset()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.MalformedJsonException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.io.Reader: int read(char[],int,int)>",
							"<com.google.gson.internal.bind.JsonTreeReader$1: int read(char[],int,int)>",
							"<java.lang.AssertionError: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderReader: int read(char[],int,int)>",
							"<java.lang.IndexOutOfBoundsException: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void getChars(int,int,char[],int)>",
							"<java.lang.System: void <clinit>()>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<java.io.BufferedReader: int read(char[],int,int)>",
							"<java.io.InputStreamReader: int read(char[],int,int)>",
							"<java.io.FilterReader: int read(char[],int,int)>",
							"<java.io.PushbackReader: int read(char[],int,int)>",
							"<java.io.StringReader: int read(char[],int,int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.io.EOFException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: void skipToEndOfLine()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean skipTo(java.lang.String)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.String: char charAt(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken objectValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<java.lang.String: char charAt(int)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: char readEscapeCharacter()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.NumberFormatException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: void push(com.google.gson.stream.JsonScope)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken readLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeNumber(char[],int,int)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInObject(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInArray(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: void consumeNonExecutePrefix()>",
							"<com.google.gson.stream.JsonReader: void <clinit>()>",
							"<java.lang.String: char[] toCharArray()>",
							"<com.google.gson.stream.JsonReader$1: void <init>()>",
							"<com.google.gson.internal.JsonReaderInternalAccess: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.util.Scanner: boolean hasNext()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: boolean hasNext()>",
							"<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: boolean hasNext()>",
							"<java.util.ArrayList: boolean remove(java.lang.Object)>",
							"<android.util.Log: int v(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttppassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttpuser()>",
							"<org.wordpress.android.models.Blog: java.net.URI getUri()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUrl()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.net.URI: void <init>(java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void <init>(org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback)>",
							"<org.xmlrpc.android.ApiHelper$HelperAsyncTask: void <init>()>",
							"<android.os.AsyncTask: void <init>()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$7: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<android.view.View: void setVisibility(int)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: int getRemotePostCount()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.models.PostsListPost: boolean isLocalDraft()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: org.wordpress.android.ui.posts.adapters.PostsListAdapter getPostListAdapter()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$4: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: void <init>(android.content.Context,boolean,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnLoadMoreListener,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnPostsLoadedListener)>",
							"<android.widget.BaseAdapter: void <init>()>",
							"<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>",
							"<java.util.ArrayList: void <init>()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$5: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.NetworkUtils: boolean checkConnection(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: boolean isNetworkAvailable(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: android.net.NetworkInfo getActiveNetworkInfo(android.content.Context)>",
							"<android.content.Context: java.lang.Object getSystemService(java.lang.String)>",
							"<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>",
							"<android.net.NetworkInfo: boolean isConnected()>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.content.Context: java.lang.String getString(int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,java.lang.String,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.wordpress.android.WordPressDB: void updateLastBlogId(int)>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences$Editor: boolean commit()>",
							"<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>",
							"<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<org.wordpress.android.WordPressDB: org.wordpress.android.models.Blog instantiateBlogByLocalId(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<android.database.Cursor: void close()>",
							"<org.wordpress.android.models.Blog: void setHidden(boolean)>",
							"<org.wordpress.android.models.Blog: void setAdmin(boolean)>",
							"<org.wordpress.android.models.Blog: void setBlogOptions(java.lang.String)>",
							"<org.wordpress.android.models.Blog: org.json.JSONObject getBlogOptionsJSONObject()>",
							"<org.wordpress.android.models.Blog: java.lang.String getBlogOptions()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.wordpress.android.util.CrashlyticsUtils: void logException(java.lang.Throwable,org.wordpress.android.util.CrashlyticsUtils$ExceptionType,org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<java.lang.Enum: java.lang.String name()>",
							"<com.crashlytics.android.Crashlytics: void setString(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: int size()>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.v: void <init>()>",
							"<com.crashlytics.android.internal.m: void <clinit>()>",
							"<com.crashlytics.android.internal.n: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.o: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.B: void <init>(com.crashlytics.android.internal.m)>",
							"<android.os.Looper: android.os.Looper getMainLooper()>",
							"<android.os.Handler: void <init>(android.os.Looper)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String)>",
							"<com.crashlytics.android.internal.i: void <clinit>()>",
							"<com.crashlytics.android.internal.j: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String,com.crashlytics.android.internal.i)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(java.lang.String)>",
							"<java.util.HashMap: void <init>()>",
							"<com.crashlytics.android.internal.d: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<com.crashlytics.android.internal.c: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.v: int g()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>",
							"<com.crashlytics.android.internal.r: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<com.crashlytics.android.internal.ab: void <clinit>()>",
							"<com.crashlytics.android.internal.ac: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.ab: boolean f(android.content.Context)>",
							"<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.Crashlytics: void <init>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.u: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.System: long currentTimeMillis()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.u a(java.lang.Class)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: java.lang.String c(java.lang.String)>",
							"<java.lang.String: java.lang.String trim()>",
							"<java.lang.String: java.lang.String substring(int,int)>",
							"<java.lang.String: int length()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: void logException(java.lang.Throwable)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.v: void a(java.lang.Thread,java.lang.Throwable)>",
							"<java.util.Date: void <init>()>",
							"<com.crashlytics.android.v: java.util.concurrent.Future a(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.AbstractExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.G: void <init>(com.crashlytics.android.v,java.lang.Runnable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.P: void <init>(com.crashlytics.android.v,java.util.Date,java.lang.Thread,java.lang.Throwable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.A: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String,boolean)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int println(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<java.lang.Thread: java.lang.Thread currentThread()>",
							"<org.json.JSONObject: void <init>(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.json.JSONObject: java.lang.String getString(java.lang.String)>",
							"<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.json.JSONObject: boolean has(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHomeURL(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setScaledImageWidth(int)>",
							"<org.wordpress.android.models.Blog: void setScaledImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setPostFormats(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setWpVersion(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_key(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_password(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_username(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcomFlag(boolean)>",
							"<org.wordpress.android.models.Blog: void setLocation(boolean)>",
							"<org.wordpress.android.models.Blog: void setRemoteBlogId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidthId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidth(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setFullSizeImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setFeaturedImageCapable(boolean)>",
							"<android.database.Cursor: int getInt(int)>",
							"<org.wordpress.android.models.Blog: void setImagePlacement(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttppassword(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttpuser(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setPassword(java.lang.String)>",
							"<org.wordpress.android.WordPressDB: java.lang.String decryptPassword(java.lang.String)>",
							"<java.lang.String: byte[] getBytes(java.lang.String)>",
							"<java.lang.String: void <init>(byte[])>",
							"<javax.crypto.Cipher: byte[] doFinal(byte[])>",
							"<javax.crypto.Cipher: void init(int,java.security.Key)>",
							"<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
							"<android.util.Base64: byte[] decode(java.lang.String,int)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>",
							"<javax.crypto.spec.DESKeySpec: void <init>(byte[])>",
							"<org.wordpress.android.models.Blog: void setUsername(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setBlogName(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setUrl(java.lang.String)>",
							"<android.database.Cursor: int getColumnIndex(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setLocalTableBlogId(int)>",
							"<org.wordpress.android.models.Blog: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.util.List: int size()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPressDB: java.util.List getAccountsBy(java.lang.String,java.lang.String[])>",
							"<java.util.Vector: void <init>()>",
							"<java.util.Collections: void sort(java.util.List,java.util.Comparator)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: boolean moveToNext()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.util.HashMap: void <init>()>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: int getInt(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] addAll(java.lang.Object[],java.lang.Object[])>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] clone(java.lang.Object[])>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.Class: java.lang.String getName()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>",
							"<java.lang.Class: java.lang.Class getComponentType()>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlogToLastActive()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.WordPressDB: int getLastBlogId()>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences: int getInt(java.lang.String,int)>",
							"<org.wordpress.android.WordPressDB: boolean isDotComAccountVisible(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<org.wordpress.android.util.SqlUtils: boolean boolForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: boolean sqlToBool(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: org.wordpress.android.ui.posts.PostsListFragment access$100(org.wordpress.android.ui.posts.PostsActivity)>",
							"<org.wordpress.android.WordPressDB: boolean deletePost(org.wordpress.android.models.Post)>",
							"<org.wordpress.android.models.Post: int getLocalTableBlogId()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.models.Post: long getLocalTablePostId()>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void checkForLocalChanges(boolean)>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void popPostDetail()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getHTMLStringStackTrace(java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getStringStackTrace(java.lang.Throwable)>",
							"<java.io.StringWriter: void <init>()>",
							"<org.apache.commons.lang.exception.NestableError: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.NotImplementedException: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: void printStackTrace(java.io.PrintWriter)>",
							"<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableException: void printStackTrace(java.io.PrintWriter)>",
							"<java.io.PrintWriter: void <init>(java.io.Writer)>",
							"<java.io.StringWriter: java.lang.String toString()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<android.support.v4.app.FragmentManager: void popBackStack()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$5: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$4: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.WordPressDB: boolean findLocalChanges(int,boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.wordpress.android.ui.posts.PostsActivity: void attemptToSelectPost()>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setShouldSelectFirstPost(boolean)>",
							"<android.support.v4.app.Fragment: boolean isInLayout()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Object)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"android.os.AsyncTask.onPostExecute",
							"android.os.AsyncTask$Status.<clinit>",
							"android.os.AsyncTask$Status.<clinit>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<android.os.AsyncTask: void <init>()>",
							"android.os.AsyncTask$Status.<init>"
						]
					}
				]
			},
			{
				"Candidate Name":"org.wordpress.android.ui.posts.PostsActivity$deletePostTask.<init>",
				"Candidate Score":96,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.AsyncTask.finish",
							"android.os.AsyncTask.isCancelled",
							"android.os.AsyncTask.onCancelled",
							"android.os.AsyncTask.onCancelled",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"<android.app.Activity: void dismissDialog(int)>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask$1: void <init>(org.wordpress.android.ui.posts.PostsActivity$deletePostTask)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHelper: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHeaderTransformer: void setShowProgressBarOnly(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void ensureAttacher()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshingInt(android.view.View,boolean,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean isDestroyed()>",
							"<android.util.Log: int i(java.lang.String,java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void reset(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<android.view.View: boolean removeCallbacks(java.lang.Runnable)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void startRefresh(android.view.View,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.OnRefreshListener: void onRefreshStarted(android.view.View)>",
							"<android.view.View: boolean post(java.lang.Runnable)>",
							"<android.view.View: boolean postDelayed(java.lang.Runnable,long)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void updateHeaderViewPosition(android.view.View)>",
							"<android.app.Activity: android.view.Window getWindow()>",
							"<android.view.View: java.lang.Object getTag()>",
							"<android.view.ViewManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>",
							"<android.app.Activity: android.view.WindowManager getWindowManager()>",
							"<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>",
							"<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>",
							"<android.view.Window: android.view.View getDecorView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: void onRefreshStarted()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean canRefresh(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void resetTouch()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: boolean hasActivity()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Object)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Boolean)>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.xmlrpc.android.ApiHelper$GenericErrorCallback: void onFailure(org.xmlrpc.android.ApiHelper$ErrorType,java.lang.String,java.lang.Throwable)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback: void onSuccess(int)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Object doInBackground(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Boolean doInBackground(java.util.List[])>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.wordpress.android.WordPressDB: void savePosts(java.util.List,int,boolean,boolean)>",
							"<java.util.List: int size()>",
							"<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>",
							"<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>",
							"<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.util.SqlUtils: long boolToSql(boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.wordpress.android.util.MapUtils: int getMapInt(java.util.Map,java.lang.String,int)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.lang.Integer: int parseInt(java.lang.String)>",
							"<java.lang.Object: boolean equals(java.lang.Object)>",
							"<org.json.JSONArray: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: int getTimezoneOffset()>",
							"<java.util.Date: void <init>(long)>",
							"<java.lang.Long: long longValue()>",
							"<android.content.ContentValues: java.lang.Object get(java.lang.String)>",
							"<android.database.sqlite.SQLiteDatabase: void endTransaction()>",
							"<java.util.Date: void <init>()>",
							"<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<org.json.JSONArray: void <init>()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>",
							"<java.lang.Long: java.lang.Long valueOf(long)>",
							"<java.util.Date: long getTime()>",
							"<org.wordpress.android.util.MapUtils: java.util.Date getMapDate(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.String)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<android.content.ContentValues: void <init>()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<android.database.sqlite.SQLiteDatabase: void beginTransaction()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<org.wordpress.android.WordPressDB: void deleteUploadedPosts(int,boolean)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.xmlrpc.android.XMLRPCClientInterface: java.lang.Object call(java.lang.String,java.lang.Object[])>",
							"<org.wordpress.android.models.Blog: java.lang.String getPassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUsername()>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.xmlrpc.android.XMLRPCFactory: org.xmlrpc.android.XMLRPCClientInterface instantiate(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.xmlrpc.android.XMLRPCFactoryDefault: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.xmlrpc.android.XMLRPCFactoryAbstract: org.xmlrpc.android.XMLRPCClientInterface make(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void v(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean access$300(org.wordpress.android.util.AppLog$LogEntryList,org.wordpress.android.util.AppLog$LogEntry)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean addEntry(org.wordpress.android.util.AppLog$LogEntry)>",
							"<java.util.ArrayList: int size()>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void removeFirstEntry()>",
							"<java.util.ArrayList: java.util.Iterator iterator()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$EntrySet$1: java.util.Map$Entry next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt(int)>",
							"<org.apache.commons.lang.math.JVMRandom: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<java.util.Random: int nextInt(int)>",
							"<java.util.Random: int nextInt()>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object next()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: void checkTokenized()>",
							"<java.lang.String: void <clinit>()>",
							"<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.List: int size()>",
							"<java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.Vector: int size()>",
							"<java.util.ArrayList: int size()>",
							"<java.util.LinkedList: int size()>",
							"<java.util.concurrent.CopyOnWriteArrayList: int size()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer: java.util.List tokenize(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.Collections: void <clinit>()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<java.lang.String: int length()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: boolean add(java.lang.Object)>",
							"<java.util.AbstractList: boolean add(java.lang.Object)>",
							"<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<java.util.LinkedList: boolean add(java.lang.Object)>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isEmptyTokenAsNull()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isIgnoreEmptyTokens()>",
							"<org.apache.commons.lang.text.StrTokenizer: int readNextToken(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List)>",
							"<java.lang.Math: int max(int,int)>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<java.util.Arrays: int binarySearch(char[],char)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: int readWithQuotes(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder clear()>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isQuote(char[],int,int,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.String substring(int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int validateRange(int,int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char[],int,int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(int)>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder appendNull()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getQuoteMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void <init>()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: java.lang.Object next()>",
							"<java.util.GregorianCalendar: boolean equals(java.lang.Object)>",
							"<java.util.Calendar: void add(int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.GregorianCalendar: void add(int,int)>",
							"<java.util.Calendar: boolean equals(java.lang.Object)>",
							"<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$KeySet$1: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap$Values$1: java.lang.Object next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: java.lang.Object next()>",
							"<java.lang.Character: void <clinit>()>",
							"<java.lang.Character: void <init>(char)>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: void prepareNext()>",
							"<org.apache.commons.lang.CharRange: boolean access$100(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$200(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$300(org.apache.commons.lang.CharRange)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: java.lang.Object next()>",
							"<java.util.Scanner: java.lang.String next()>",
							"<android.support.v4.util.MapCollections$MapIterator: java.util.Map$Entry next()>",
							"<android.support.v4.util.MapCollections$MapIterator: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: boolean hasNext()>",
							"<java.util.Calendar: boolean before(java.lang.Object)>",
							"<com.google.gson.JsonStreamParser: boolean hasNext()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<com.google.gson.JsonIOException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<java.lang.RuntimeException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonSyntaxException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>",
							"<com.google.gson.stream.JsonReader$2: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: com.google.gson.stream.JsonScope[] values()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.support.v4.util.SparseArrayCompat: android.support.v4.util.SparseArrayCompat clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object cloneReset()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: java.lang.Object clone()>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrTokenizer reset()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.MalformedJsonException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.io.Reader: int read(char[],int,int)>",
							"<com.google.gson.internal.bind.JsonTreeReader$1: int read(char[],int,int)>",
							"<java.lang.AssertionError: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderReader: int read(char[],int,int)>",
							"<java.lang.IndexOutOfBoundsException: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void getChars(int,int,char[],int)>",
							"<java.lang.System: void <clinit>()>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<java.io.BufferedReader: int read(char[],int,int)>",
							"<java.io.InputStreamReader: int read(char[],int,int)>",
							"<java.io.FilterReader: int read(char[],int,int)>",
							"<java.io.PushbackReader: int read(char[],int,int)>",
							"<java.io.StringReader: int read(char[],int,int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.io.EOFException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: void skipToEndOfLine()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean skipTo(java.lang.String)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.String: char charAt(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken objectValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<java.lang.String: char charAt(int)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: char readEscapeCharacter()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.NumberFormatException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: void push(com.google.gson.stream.JsonScope)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken readLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeNumber(char[],int,int)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInObject(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInArray(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: void consumeNonExecutePrefix()>",
							"<com.google.gson.stream.JsonReader: void <clinit>()>",
							"<java.lang.String: char[] toCharArray()>",
							"<com.google.gson.stream.JsonReader$1: void <init>()>",
							"<com.google.gson.internal.JsonReaderInternalAccess: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.util.Scanner: boolean hasNext()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: boolean hasNext()>",
							"<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: boolean hasNext()>",
							"<java.util.ArrayList: boolean remove(java.lang.Object)>",
							"<android.util.Log: int v(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttppassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttpuser()>",
							"<org.wordpress.android.models.Blog: java.net.URI getUri()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUrl()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.net.URI: void <init>(java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void <init>(org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback)>",
							"<org.xmlrpc.android.ApiHelper$HelperAsyncTask: void <init>()>",
							"<android.os.AsyncTask: void <init>()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$7: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<android.view.View: void setVisibility(int)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: int getRemotePostCount()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.models.PostsListPost: boolean isLocalDraft()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: org.wordpress.android.ui.posts.adapters.PostsListAdapter getPostListAdapter()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$4: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: void <init>(android.content.Context,boolean,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnLoadMoreListener,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnPostsLoadedListener)>",
							"<android.widget.BaseAdapter: void <init>()>",
							"<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>",
							"<java.util.ArrayList: void <init>()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$5: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.NetworkUtils: boolean checkConnection(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: boolean isNetworkAvailable(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: android.net.NetworkInfo getActiveNetworkInfo(android.content.Context)>",
							"<android.content.Context: java.lang.Object getSystemService(java.lang.String)>",
							"<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>",
							"<android.net.NetworkInfo: boolean isConnected()>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.content.Context: java.lang.String getString(int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,java.lang.String,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.wordpress.android.WordPressDB: void updateLastBlogId(int)>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences$Editor: boolean commit()>",
							"<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>",
							"<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<org.wordpress.android.WordPressDB: org.wordpress.android.models.Blog instantiateBlogByLocalId(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<android.database.Cursor: void close()>",
							"<org.wordpress.android.models.Blog: void setHidden(boolean)>",
							"<org.wordpress.android.models.Blog: void setAdmin(boolean)>",
							"<org.wordpress.android.models.Blog: void setBlogOptions(java.lang.String)>",
							"<org.wordpress.android.models.Blog: org.json.JSONObject getBlogOptionsJSONObject()>",
							"<org.wordpress.android.models.Blog: java.lang.String getBlogOptions()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.wordpress.android.util.CrashlyticsUtils: void logException(java.lang.Throwable,org.wordpress.android.util.CrashlyticsUtils$ExceptionType,org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<java.lang.Enum: java.lang.String name()>",
							"<com.crashlytics.android.Crashlytics: void setString(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: int size()>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.v: void <init>()>",
							"<com.crashlytics.android.internal.m: void <clinit>()>",
							"<com.crashlytics.android.internal.n: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.o: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.B: void <init>(com.crashlytics.android.internal.m)>",
							"<android.os.Looper: android.os.Looper getMainLooper()>",
							"<android.os.Handler: void <init>(android.os.Looper)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String)>",
							"<com.crashlytics.android.internal.i: void <clinit>()>",
							"<com.crashlytics.android.internal.j: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String,com.crashlytics.android.internal.i)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(java.lang.String)>",
							"<java.util.HashMap: void <init>()>",
							"<com.crashlytics.android.internal.d: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<com.crashlytics.android.internal.c: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.v: int g()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>",
							"<com.crashlytics.android.internal.r: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<com.crashlytics.android.internal.ab: void <clinit>()>",
							"<com.crashlytics.android.internal.ac: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.ab: boolean f(android.content.Context)>",
							"<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.Crashlytics: void <init>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.u: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.System: long currentTimeMillis()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.u a(java.lang.Class)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: java.lang.String c(java.lang.String)>",
							"<java.lang.String: java.lang.String trim()>",
							"<java.lang.String: java.lang.String substring(int,int)>",
							"<java.lang.String: int length()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: void logException(java.lang.Throwable)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.v: void a(java.lang.Thread,java.lang.Throwable)>",
							"<java.util.Date: void <init>()>",
							"<com.crashlytics.android.v: java.util.concurrent.Future a(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.AbstractExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.G: void <init>(com.crashlytics.android.v,java.lang.Runnable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.P: void <init>(com.crashlytics.android.v,java.util.Date,java.lang.Thread,java.lang.Throwable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.A: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String,boolean)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int println(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<java.lang.Thread: java.lang.Thread currentThread()>",
							"<org.json.JSONObject: void <init>(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.json.JSONObject: java.lang.String getString(java.lang.String)>",
							"<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.json.JSONObject: boolean has(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHomeURL(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setScaledImageWidth(int)>",
							"<org.wordpress.android.models.Blog: void setScaledImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setPostFormats(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setWpVersion(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_key(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_password(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_username(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcomFlag(boolean)>",
							"<org.wordpress.android.models.Blog: void setLocation(boolean)>",
							"<org.wordpress.android.models.Blog: void setRemoteBlogId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidthId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidth(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setFullSizeImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setFeaturedImageCapable(boolean)>",
							"<android.database.Cursor: int getInt(int)>",
							"<org.wordpress.android.models.Blog: void setImagePlacement(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttppassword(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttpuser(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setPassword(java.lang.String)>",
							"<org.wordpress.android.WordPressDB: java.lang.String decryptPassword(java.lang.String)>",
							"<java.lang.String: byte[] getBytes(java.lang.String)>",
							"<java.lang.String: void <init>(byte[])>",
							"<javax.crypto.Cipher: byte[] doFinal(byte[])>",
							"<javax.crypto.Cipher: void init(int,java.security.Key)>",
							"<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
							"<android.util.Base64: byte[] decode(java.lang.String,int)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>",
							"<javax.crypto.spec.DESKeySpec: void <init>(byte[])>",
							"<org.wordpress.android.models.Blog: void setUsername(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setBlogName(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setUrl(java.lang.String)>",
							"<android.database.Cursor: int getColumnIndex(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setLocalTableBlogId(int)>",
							"<org.wordpress.android.models.Blog: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.util.List: int size()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPressDB: java.util.List getAccountsBy(java.lang.String,java.lang.String[])>",
							"<java.util.Vector: void <init>()>",
							"<java.util.Collections: void sort(java.util.List,java.util.Comparator)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: boolean moveToNext()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.util.HashMap: void <init>()>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: int getInt(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] addAll(java.lang.Object[],java.lang.Object[])>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] clone(java.lang.Object[])>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.Class: java.lang.String getName()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>",
							"<java.lang.Class: java.lang.Class getComponentType()>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlogToLastActive()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.WordPressDB: int getLastBlogId()>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences: int getInt(java.lang.String,int)>",
							"<org.wordpress.android.WordPressDB: boolean isDotComAccountVisible(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<org.wordpress.android.util.SqlUtils: boolean boolForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: boolean sqlToBool(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: org.wordpress.android.ui.posts.PostsListFragment access$100(org.wordpress.android.ui.posts.PostsActivity)>",
							"<org.wordpress.android.WordPressDB: boolean deletePost(org.wordpress.android.models.Post)>",
							"<org.wordpress.android.models.Post: int getLocalTableBlogId()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.models.Post: long getLocalTablePostId()>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void checkForLocalChanges(boolean)>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void popPostDetail()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getHTMLStringStackTrace(java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getStringStackTrace(java.lang.Throwable)>",
							"<java.io.StringWriter: void <init>()>",
							"<org.apache.commons.lang.exception.NestableError: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.NotImplementedException: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: void printStackTrace(java.io.PrintWriter)>",
							"<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableException: void printStackTrace(java.io.PrintWriter)>",
							"<java.io.PrintWriter: void <init>(java.io.Writer)>",
							"<java.io.StringWriter: java.lang.String toString()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<android.support.v4.app.FragmentManager: void popBackStack()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$5: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$4: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.WordPressDB: boolean findLocalChanges(int,boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.wordpress.android.ui.posts.PostsActivity: void attemptToSelectPost()>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setShouldSelectFirstPost(boolean)>",
							"<android.support.v4.app.Fragment: boolean isInLayout()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Object)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"android.os.AsyncTask.onPostExecute",
							"android.os.AsyncTask$Status.<clinit>",
							"android.os.AsyncTask$Status.<clinit>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<android.os.AsyncTask: void <init>()>",
							"android.os.AsyncTask$Status.<init>"
						]
					}
				]
			},
			{
				"Candidate Name":"org.wordpress.android.ui.posts.PostsActivity$deletePostTask.onPreExecute",
				"Candidate Score":96,
				"Reasons":[
					{
						"Reason Type":"Key API Related",
						"Explanation":"Caller of keyAPI <android.app.Activity: void showDialog(int)>",
						"Trace":[
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPreExecute()>",
							"fw: <android.app.Activity: void showDialog(int)>, <android.app.Activity: boolean showDialog(int,android.os.Bundle)>, key field: <android.app.Activity: android.util.SparseArray mManagedDialogs>, <android.app.Activity: void dismissDialog(int)>"
						],
						"Influenced Field":[
							"android.app.Activity: android.util.SparseArray mManagedDialogs"
						],
						"Signaler":"android.app.Activity.missingDialog"
					}
				]
			},
			{
				"Candidate Name":"org.wordpress.android.ui.posts.PostsActivity$deletePostTask$1.<init>",
				"Candidate Score":95,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.AsyncTask.finish",
							"android.os.AsyncTask.isCancelled",
							"android.os.AsyncTask.onCancelled",
							"android.os.AsyncTask.onCancelled",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"<android.app.Activity: void dismissDialog(int)>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask$1: void <init>(org.wordpress.android.ui.posts.PostsActivity$deletePostTask)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHelper: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHeaderTransformer: void setShowProgressBarOnly(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void ensureAttacher()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshingInt(android.view.View,boolean,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean isDestroyed()>",
							"<android.util.Log: int i(java.lang.String,java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void reset(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<android.view.View: boolean removeCallbacks(java.lang.Runnable)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void startRefresh(android.view.View,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.OnRefreshListener: void onRefreshStarted(android.view.View)>",
							"<android.view.View: boolean post(java.lang.Runnable)>",
							"<android.view.View: boolean postDelayed(java.lang.Runnable,long)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void updateHeaderViewPosition(android.view.View)>",
							"<android.app.Activity: android.view.Window getWindow()>",
							"<android.view.View: java.lang.Object getTag()>",
							"<android.view.ViewManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>",
							"<android.app.Activity: android.view.WindowManager getWindowManager()>",
							"<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>",
							"<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>",
							"<android.view.Window: android.view.View getDecorView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: void onRefreshStarted()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean canRefresh(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void resetTouch()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: boolean hasActivity()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Object)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Boolean)>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.xmlrpc.android.ApiHelper$GenericErrorCallback: void onFailure(org.xmlrpc.android.ApiHelper$ErrorType,java.lang.String,java.lang.Throwable)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback: void onSuccess(int)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Object doInBackground(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Boolean doInBackground(java.util.List[])>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.wordpress.android.WordPressDB: void savePosts(java.util.List,int,boolean,boolean)>",
							"<java.util.List: int size()>",
							"<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>",
							"<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>",
							"<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.util.SqlUtils: long boolToSql(boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.wordpress.android.util.MapUtils: int getMapInt(java.util.Map,java.lang.String,int)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.lang.Integer: int parseInt(java.lang.String)>",
							"<java.lang.Object: boolean equals(java.lang.Object)>",
							"<org.json.JSONArray: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: int getTimezoneOffset()>",
							"<java.util.Date: void <init>(long)>",
							"<java.lang.Long: long longValue()>",
							"<android.content.ContentValues: java.lang.Object get(java.lang.String)>",
							"<android.database.sqlite.SQLiteDatabase: void endTransaction()>",
							"<java.util.Date: void <init>()>",
							"<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<org.json.JSONArray: void <init>()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>",
							"<java.lang.Long: java.lang.Long valueOf(long)>",
							"<java.util.Date: long getTime()>",
							"<org.wordpress.android.util.MapUtils: java.util.Date getMapDate(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.String)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<android.content.ContentValues: void <init>()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<android.database.sqlite.SQLiteDatabase: void beginTransaction()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<org.wordpress.android.WordPressDB: void deleteUploadedPosts(int,boolean)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.xmlrpc.android.XMLRPCClientInterface: java.lang.Object call(java.lang.String,java.lang.Object[])>",
							"<org.wordpress.android.models.Blog: java.lang.String getPassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUsername()>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.xmlrpc.android.XMLRPCFactory: org.xmlrpc.android.XMLRPCClientInterface instantiate(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.xmlrpc.android.XMLRPCFactoryDefault: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.xmlrpc.android.XMLRPCFactoryAbstract: org.xmlrpc.android.XMLRPCClientInterface make(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void v(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean access$300(org.wordpress.android.util.AppLog$LogEntryList,org.wordpress.android.util.AppLog$LogEntry)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean addEntry(org.wordpress.android.util.AppLog$LogEntry)>",
							"<java.util.ArrayList: int size()>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void removeFirstEntry()>",
							"<java.util.ArrayList: java.util.Iterator iterator()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$EntrySet$1: java.util.Map$Entry next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt(int)>",
							"<org.apache.commons.lang.math.JVMRandom: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<java.util.Random: int nextInt(int)>",
							"<java.util.Random: int nextInt()>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object next()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: void checkTokenized()>",
							"<java.lang.String: void <clinit>()>",
							"<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.List: int size()>",
							"<java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.Vector: int size()>",
							"<java.util.ArrayList: int size()>",
							"<java.util.LinkedList: int size()>",
							"<java.util.concurrent.CopyOnWriteArrayList: int size()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer: java.util.List tokenize(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.Collections: void <clinit>()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<java.lang.String: int length()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: boolean add(java.lang.Object)>",
							"<java.util.AbstractList: boolean add(java.lang.Object)>",
							"<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<java.util.LinkedList: boolean add(java.lang.Object)>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isEmptyTokenAsNull()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isIgnoreEmptyTokens()>",
							"<org.apache.commons.lang.text.StrTokenizer: int readNextToken(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List)>",
							"<java.lang.Math: int max(int,int)>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<java.util.Arrays: int binarySearch(char[],char)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: int readWithQuotes(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder clear()>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isQuote(char[],int,int,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.String substring(int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int validateRange(int,int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char[],int,int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(int)>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder appendNull()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getQuoteMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void <init>()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: java.lang.Object next()>",
							"<java.util.GregorianCalendar: boolean equals(java.lang.Object)>",
							"<java.util.Calendar: void add(int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.GregorianCalendar: void add(int,int)>",
							"<java.util.Calendar: boolean equals(java.lang.Object)>",
							"<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$KeySet$1: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap$Values$1: java.lang.Object next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: java.lang.Object next()>",
							"<java.lang.Character: void <clinit>()>",
							"<java.lang.Character: void <init>(char)>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: void prepareNext()>",
							"<org.apache.commons.lang.CharRange: boolean access$100(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$200(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$300(org.apache.commons.lang.CharRange)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: java.lang.Object next()>",
							"<java.util.Scanner: java.lang.String next()>",
							"<android.support.v4.util.MapCollections$MapIterator: java.util.Map$Entry next()>",
							"<android.support.v4.util.MapCollections$MapIterator: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: boolean hasNext()>",
							"<java.util.Calendar: boolean before(java.lang.Object)>",
							"<com.google.gson.JsonStreamParser: boolean hasNext()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<com.google.gson.JsonIOException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<java.lang.RuntimeException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonSyntaxException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>",
							"<com.google.gson.stream.JsonReader$2: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: com.google.gson.stream.JsonScope[] values()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.support.v4.util.SparseArrayCompat: android.support.v4.util.SparseArrayCompat clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object cloneReset()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: java.lang.Object clone()>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrTokenizer reset()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.MalformedJsonException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.io.Reader: int read(char[],int,int)>",
							"<com.google.gson.internal.bind.JsonTreeReader$1: int read(char[],int,int)>",
							"<java.lang.AssertionError: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderReader: int read(char[],int,int)>",
							"<java.lang.IndexOutOfBoundsException: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void getChars(int,int,char[],int)>",
							"<java.lang.System: void <clinit>()>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<java.io.BufferedReader: int read(char[],int,int)>",
							"<java.io.InputStreamReader: int read(char[],int,int)>",
							"<java.io.FilterReader: int read(char[],int,int)>",
							"<java.io.PushbackReader: int read(char[],int,int)>",
							"<java.io.StringReader: int read(char[],int,int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.io.EOFException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: void skipToEndOfLine()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean skipTo(java.lang.String)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.String: char charAt(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken objectValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<java.lang.String: char charAt(int)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: char readEscapeCharacter()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.NumberFormatException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: void push(com.google.gson.stream.JsonScope)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken readLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeNumber(char[],int,int)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInObject(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInArray(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: void consumeNonExecutePrefix()>",
							"<com.google.gson.stream.JsonReader: void <clinit>()>",
							"<java.lang.String: char[] toCharArray()>",
							"<com.google.gson.stream.JsonReader$1: void <init>()>",
							"<com.google.gson.internal.JsonReaderInternalAccess: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.util.Scanner: boolean hasNext()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: boolean hasNext()>",
							"<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: boolean hasNext()>",
							"<java.util.ArrayList: boolean remove(java.lang.Object)>",
							"<android.util.Log: int v(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttppassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttpuser()>",
							"<org.wordpress.android.models.Blog: java.net.URI getUri()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUrl()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.net.URI: void <init>(java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void <init>(org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback)>",
							"<org.xmlrpc.android.ApiHelper$HelperAsyncTask: void <init>()>",
							"<android.os.AsyncTask: void <init>()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$7: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<android.view.View: void setVisibility(int)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: int getRemotePostCount()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.models.PostsListPost: boolean isLocalDraft()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: org.wordpress.android.ui.posts.adapters.PostsListAdapter getPostListAdapter()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$4: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: void <init>(android.content.Context,boolean,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnLoadMoreListener,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnPostsLoadedListener)>",
							"<android.widget.BaseAdapter: void <init>()>",
							"<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>",
							"<java.util.ArrayList: void <init>()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$5: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.NetworkUtils: boolean checkConnection(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: boolean isNetworkAvailable(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: android.net.NetworkInfo getActiveNetworkInfo(android.content.Context)>",
							"<android.content.Context: java.lang.Object getSystemService(java.lang.String)>",
							"<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>",
							"<android.net.NetworkInfo: boolean isConnected()>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.content.Context: java.lang.String getString(int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,java.lang.String,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.wordpress.android.WordPressDB: void updateLastBlogId(int)>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences$Editor: boolean commit()>",
							"<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>",
							"<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<org.wordpress.android.WordPressDB: org.wordpress.android.models.Blog instantiateBlogByLocalId(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<android.database.Cursor: void close()>",
							"<org.wordpress.android.models.Blog: void setHidden(boolean)>",
							"<org.wordpress.android.models.Blog: void setAdmin(boolean)>",
							"<org.wordpress.android.models.Blog: void setBlogOptions(java.lang.String)>",
							"<org.wordpress.android.models.Blog: org.json.JSONObject getBlogOptionsJSONObject()>",
							"<org.wordpress.android.models.Blog: java.lang.String getBlogOptions()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.wordpress.android.util.CrashlyticsUtils: void logException(java.lang.Throwable,org.wordpress.android.util.CrashlyticsUtils$ExceptionType,org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<java.lang.Enum: java.lang.String name()>",
							"<com.crashlytics.android.Crashlytics: void setString(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: int size()>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.v: void <init>()>",
							"<com.crashlytics.android.internal.m: void <clinit>()>",
							"<com.crashlytics.android.internal.n: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.o: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.B: void <init>(com.crashlytics.android.internal.m)>",
							"<android.os.Looper: android.os.Looper getMainLooper()>",
							"<android.os.Handler: void <init>(android.os.Looper)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String)>",
							"<com.crashlytics.android.internal.i: void <clinit>()>",
							"<com.crashlytics.android.internal.j: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String,com.crashlytics.android.internal.i)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(java.lang.String)>",
							"<java.util.HashMap: void <init>()>",
							"<com.crashlytics.android.internal.d: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<com.crashlytics.android.internal.c: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.v: int g()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>",
							"<com.crashlytics.android.internal.r: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<com.crashlytics.android.internal.ab: void <clinit>()>",
							"<com.crashlytics.android.internal.ac: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.ab: boolean f(android.content.Context)>",
							"<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.Crashlytics: void <init>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.u: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.System: long currentTimeMillis()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.u a(java.lang.Class)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: java.lang.String c(java.lang.String)>",
							"<java.lang.String: java.lang.String trim()>",
							"<java.lang.String: java.lang.String substring(int,int)>",
							"<java.lang.String: int length()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: void logException(java.lang.Throwable)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.v: void a(java.lang.Thread,java.lang.Throwable)>",
							"<java.util.Date: void <init>()>",
							"<com.crashlytics.android.v: java.util.concurrent.Future a(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.AbstractExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.G: void <init>(com.crashlytics.android.v,java.lang.Runnable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.P: void <init>(com.crashlytics.android.v,java.util.Date,java.lang.Thread,java.lang.Throwable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.A: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String,boolean)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int println(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<java.lang.Thread: java.lang.Thread currentThread()>",
							"<org.json.JSONObject: void <init>(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.json.JSONObject: java.lang.String getString(java.lang.String)>",
							"<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.json.JSONObject: boolean has(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHomeURL(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setScaledImageWidth(int)>",
							"<org.wordpress.android.models.Blog: void setScaledImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setPostFormats(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setWpVersion(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_key(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_password(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_username(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcomFlag(boolean)>",
							"<org.wordpress.android.models.Blog: void setLocation(boolean)>",
							"<org.wordpress.android.models.Blog: void setRemoteBlogId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidthId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidth(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setFullSizeImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setFeaturedImageCapable(boolean)>",
							"<android.database.Cursor: int getInt(int)>",
							"<org.wordpress.android.models.Blog: void setImagePlacement(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttppassword(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttpuser(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setPassword(java.lang.String)>",
							"<org.wordpress.android.WordPressDB: java.lang.String decryptPassword(java.lang.String)>",
							"<java.lang.String: byte[] getBytes(java.lang.String)>",
							"<java.lang.String: void <init>(byte[])>",
							"<javax.crypto.Cipher: byte[] doFinal(byte[])>",
							"<javax.crypto.Cipher: void init(int,java.security.Key)>",
							"<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
							"<android.util.Base64: byte[] decode(java.lang.String,int)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>",
							"<javax.crypto.spec.DESKeySpec: void <init>(byte[])>",
							"<org.wordpress.android.models.Blog: void setUsername(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setBlogName(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setUrl(java.lang.String)>",
							"<android.database.Cursor: int getColumnIndex(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setLocalTableBlogId(int)>",
							"<org.wordpress.android.models.Blog: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.util.List: int size()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPressDB: java.util.List getAccountsBy(java.lang.String,java.lang.String[])>",
							"<java.util.Vector: void <init>()>",
							"<java.util.Collections: void sort(java.util.List,java.util.Comparator)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: boolean moveToNext()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.util.HashMap: void <init>()>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: int getInt(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] addAll(java.lang.Object[],java.lang.Object[])>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] clone(java.lang.Object[])>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.Class: java.lang.String getName()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>",
							"<java.lang.Class: java.lang.Class getComponentType()>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlogToLastActive()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.WordPressDB: int getLastBlogId()>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences: int getInt(java.lang.String,int)>",
							"<org.wordpress.android.WordPressDB: boolean isDotComAccountVisible(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<org.wordpress.android.util.SqlUtils: boolean boolForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: boolean sqlToBool(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: org.wordpress.android.ui.posts.PostsListFragment access$100(org.wordpress.android.ui.posts.PostsActivity)>",
							"<org.wordpress.android.WordPressDB: boolean deletePost(org.wordpress.android.models.Post)>",
							"<org.wordpress.android.models.Post: int getLocalTableBlogId()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.models.Post: long getLocalTablePostId()>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void checkForLocalChanges(boolean)>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void popPostDetail()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getHTMLStringStackTrace(java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getStringStackTrace(java.lang.Throwable)>",
							"<java.io.StringWriter: void <init>()>",
							"<org.apache.commons.lang.exception.NestableError: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.NotImplementedException: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: void printStackTrace(java.io.PrintWriter)>",
							"<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableException: void printStackTrace(java.io.PrintWriter)>",
							"<java.io.PrintWriter: void <init>(java.io.Writer)>",
							"<java.io.StringWriter: java.lang.String toString()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<android.support.v4.app.FragmentManager: void popBackStack()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$5: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$4: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.WordPressDB: boolean findLocalChanges(int,boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.wordpress.android.ui.posts.PostsActivity: void attemptToSelectPost()>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setShouldSelectFirstPost(boolean)>",
							"<android.support.v4.app.Fragment: boolean isInLayout()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Object)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"android.os.AsyncTask.onPostExecute",
							"android.os.AsyncTask$Status.<clinit>",
							"android.os.AsyncTask$Status.<clinit>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<android.os.AsyncTask: void <init>()>",
							"android.os.AsyncTask$Status.<init>"
						]
					}
				]
			},
			{
				"Candidate Name":"org.wordpress.android.ui.posts.PostsActivity.access$100",
				"Candidate Score":95,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.AsyncTask.finish",
							"android.os.AsyncTask.isCancelled",
							"android.os.AsyncTask.onCancelled",
							"android.os.AsyncTask.onCancelled",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"<android.app.Activity: void dismissDialog(int)>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask$1: void <init>(org.wordpress.android.ui.posts.PostsActivity$deletePostTask)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHelper: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHeaderTransformer: void setShowProgressBarOnly(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void ensureAttacher()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshingInt(android.view.View,boolean,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean isDestroyed()>",
							"<android.util.Log: int i(java.lang.String,java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void reset(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<android.view.View: boolean removeCallbacks(java.lang.Runnable)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void startRefresh(android.view.View,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.OnRefreshListener: void onRefreshStarted(android.view.View)>",
							"<android.view.View: boolean post(java.lang.Runnable)>",
							"<android.view.View: boolean postDelayed(java.lang.Runnable,long)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void updateHeaderViewPosition(android.view.View)>",
							"<android.app.Activity: android.view.Window getWindow()>",
							"<android.view.View: java.lang.Object getTag()>",
							"<android.view.ViewManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>",
							"<android.app.Activity: android.view.WindowManager getWindowManager()>",
							"<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>",
							"<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>",
							"<android.view.Window: android.view.View getDecorView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: void onRefreshStarted()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean canRefresh(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void resetTouch()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: boolean hasActivity()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Object)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Boolean)>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.xmlrpc.android.ApiHelper$GenericErrorCallback: void onFailure(org.xmlrpc.android.ApiHelper$ErrorType,java.lang.String,java.lang.Throwable)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback: void onSuccess(int)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Object doInBackground(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Boolean doInBackground(java.util.List[])>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.wordpress.android.WordPressDB: void savePosts(java.util.List,int,boolean,boolean)>",
							"<java.util.List: int size()>",
							"<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>",
							"<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>",
							"<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.util.SqlUtils: long boolToSql(boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.wordpress.android.util.MapUtils: int getMapInt(java.util.Map,java.lang.String,int)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.lang.Integer: int parseInt(java.lang.String)>",
							"<java.lang.Object: boolean equals(java.lang.Object)>",
							"<org.json.JSONArray: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: int getTimezoneOffset()>",
							"<java.util.Date: void <init>(long)>",
							"<java.lang.Long: long longValue()>",
							"<android.content.ContentValues: java.lang.Object get(java.lang.String)>",
							"<android.database.sqlite.SQLiteDatabase: void endTransaction()>",
							"<java.util.Date: void <init>()>",
							"<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<org.json.JSONArray: void <init>()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>",
							"<java.lang.Long: java.lang.Long valueOf(long)>",
							"<java.util.Date: long getTime()>",
							"<org.wordpress.android.util.MapUtils: java.util.Date getMapDate(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.String)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<android.content.ContentValues: void <init>()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<android.database.sqlite.SQLiteDatabase: void beginTransaction()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<org.wordpress.android.WordPressDB: void deleteUploadedPosts(int,boolean)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.xmlrpc.android.XMLRPCClientInterface: java.lang.Object call(java.lang.String,java.lang.Object[])>",
							"<org.wordpress.android.models.Blog: java.lang.String getPassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUsername()>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.xmlrpc.android.XMLRPCFactory: org.xmlrpc.android.XMLRPCClientInterface instantiate(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.xmlrpc.android.XMLRPCFactoryDefault: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.xmlrpc.android.XMLRPCFactoryAbstract: org.xmlrpc.android.XMLRPCClientInterface make(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void v(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean access$300(org.wordpress.android.util.AppLog$LogEntryList,org.wordpress.android.util.AppLog$LogEntry)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean addEntry(org.wordpress.android.util.AppLog$LogEntry)>",
							"<java.util.ArrayList: int size()>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void removeFirstEntry()>",
							"<java.util.ArrayList: java.util.Iterator iterator()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$EntrySet$1: java.util.Map$Entry next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt(int)>",
							"<org.apache.commons.lang.math.JVMRandom: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<java.util.Random: int nextInt(int)>",
							"<java.util.Random: int nextInt()>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object next()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: void checkTokenized()>",
							"<java.lang.String: void <clinit>()>",
							"<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.List: int size()>",
							"<java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.Vector: int size()>",
							"<java.util.ArrayList: int size()>",
							"<java.util.LinkedList: int size()>",
							"<java.util.concurrent.CopyOnWriteArrayList: int size()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer: java.util.List tokenize(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.Collections: void <clinit>()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<java.lang.String: int length()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: boolean add(java.lang.Object)>",
							"<java.util.AbstractList: boolean add(java.lang.Object)>",
							"<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<java.util.LinkedList: boolean add(java.lang.Object)>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isEmptyTokenAsNull()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isIgnoreEmptyTokens()>",
							"<org.apache.commons.lang.text.StrTokenizer: int readNextToken(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List)>",
							"<java.lang.Math: int max(int,int)>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<java.util.Arrays: int binarySearch(char[],char)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: int readWithQuotes(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder clear()>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isQuote(char[],int,int,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.String substring(int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int validateRange(int,int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char[],int,int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(int)>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder appendNull()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getQuoteMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void <init>()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: java.lang.Object next()>",
							"<java.util.GregorianCalendar: boolean equals(java.lang.Object)>",
							"<java.util.Calendar: void add(int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.GregorianCalendar: void add(int,int)>",
							"<java.util.Calendar: boolean equals(java.lang.Object)>",
							"<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$KeySet$1: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap$Values$1: java.lang.Object next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: java.lang.Object next()>",
							"<java.lang.Character: void <clinit>()>",
							"<java.lang.Character: void <init>(char)>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: void prepareNext()>",
							"<org.apache.commons.lang.CharRange: boolean access$100(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$200(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$300(org.apache.commons.lang.CharRange)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: java.lang.Object next()>",
							"<java.util.Scanner: java.lang.String next()>",
							"<android.support.v4.util.MapCollections$MapIterator: java.util.Map$Entry next()>",
							"<android.support.v4.util.MapCollections$MapIterator: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: boolean hasNext()>",
							"<java.util.Calendar: boolean before(java.lang.Object)>",
							"<com.google.gson.JsonStreamParser: boolean hasNext()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<com.google.gson.JsonIOException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<java.lang.RuntimeException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonSyntaxException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>",
							"<com.google.gson.stream.JsonReader$2: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: com.google.gson.stream.JsonScope[] values()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.support.v4.util.SparseArrayCompat: android.support.v4.util.SparseArrayCompat clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object cloneReset()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: java.lang.Object clone()>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrTokenizer reset()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.MalformedJsonException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.io.Reader: int read(char[],int,int)>",
							"<com.google.gson.internal.bind.JsonTreeReader$1: int read(char[],int,int)>",
							"<java.lang.AssertionError: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderReader: int read(char[],int,int)>",
							"<java.lang.IndexOutOfBoundsException: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void getChars(int,int,char[],int)>",
							"<java.lang.System: void <clinit>()>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<java.io.BufferedReader: int read(char[],int,int)>",
							"<java.io.InputStreamReader: int read(char[],int,int)>",
							"<java.io.FilterReader: int read(char[],int,int)>",
							"<java.io.PushbackReader: int read(char[],int,int)>",
							"<java.io.StringReader: int read(char[],int,int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.io.EOFException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: void skipToEndOfLine()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean skipTo(java.lang.String)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.String: char charAt(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken objectValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<java.lang.String: char charAt(int)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: char readEscapeCharacter()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.NumberFormatException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: void push(com.google.gson.stream.JsonScope)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken readLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeNumber(char[],int,int)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInObject(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInArray(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: void consumeNonExecutePrefix()>",
							"<com.google.gson.stream.JsonReader: void <clinit>()>",
							"<java.lang.String: char[] toCharArray()>",
							"<com.google.gson.stream.JsonReader$1: void <init>()>",
							"<com.google.gson.internal.JsonReaderInternalAccess: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.util.Scanner: boolean hasNext()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: boolean hasNext()>",
							"<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: boolean hasNext()>",
							"<java.util.ArrayList: boolean remove(java.lang.Object)>",
							"<android.util.Log: int v(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttppassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttpuser()>",
							"<org.wordpress.android.models.Blog: java.net.URI getUri()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUrl()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.net.URI: void <init>(java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void <init>(org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback)>",
							"<org.xmlrpc.android.ApiHelper$HelperAsyncTask: void <init>()>",
							"<android.os.AsyncTask: void <init>()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$7: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<android.view.View: void setVisibility(int)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: int getRemotePostCount()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.models.PostsListPost: boolean isLocalDraft()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: org.wordpress.android.ui.posts.adapters.PostsListAdapter getPostListAdapter()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$4: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: void <init>(android.content.Context,boolean,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnLoadMoreListener,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnPostsLoadedListener)>",
							"<android.widget.BaseAdapter: void <init>()>",
							"<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>",
							"<java.util.ArrayList: void <init>()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$5: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.NetworkUtils: boolean checkConnection(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: boolean isNetworkAvailable(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: android.net.NetworkInfo getActiveNetworkInfo(android.content.Context)>",
							"<android.content.Context: java.lang.Object getSystemService(java.lang.String)>",
							"<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>",
							"<android.net.NetworkInfo: boolean isConnected()>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.content.Context: java.lang.String getString(int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,java.lang.String,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.wordpress.android.WordPressDB: void updateLastBlogId(int)>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences$Editor: boolean commit()>",
							"<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>",
							"<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<org.wordpress.android.WordPressDB: org.wordpress.android.models.Blog instantiateBlogByLocalId(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<android.database.Cursor: void close()>",
							"<org.wordpress.android.models.Blog: void setHidden(boolean)>",
							"<org.wordpress.android.models.Blog: void setAdmin(boolean)>",
							"<org.wordpress.android.models.Blog: void setBlogOptions(java.lang.String)>",
							"<org.wordpress.android.models.Blog: org.json.JSONObject getBlogOptionsJSONObject()>",
							"<org.wordpress.android.models.Blog: java.lang.String getBlogOptions()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.wordpress.android.util.CrashlyticsUtils: void logException(java.lang.Throwable,org.wordpress.android.util.CrashlyticsUtils$ExceptionType,org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<java.lang.Enum: java.lang.String name()>",
							"<com.crashlytics.android.Crashlytics: void setString(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: int size()>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.v: void <init>()>",
							"<com.crashlytics.android.internal.m: void <clinit>()>",
							"<com.crashlytics.android.internal.n: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.o: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.B: void <init>(com.crashlytics.android.internal.m)>",
							"<android.os.Looper: android.os.Looper getMainLooper()>",
							"<android.os.Handler: void <init>(android.os.Looper)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String)>",
							"<com.crashlytics.android.internal.i: void <clinit>()>",
							"<com.crashlytics.android.internal.j: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String,com.crashlytics.android.internal.i)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(java.lang.String)>",
							"<java.util.HashMap: void <init>()>",
							"<com.crashlytics.android.internal.d: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<com.crashlytics.android.internal.c: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.v: int g()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>",
							"<com.crashlytics.android.internal.r: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<com.crashlytics.android.internal.ab: void <clinit>()>",
							"<com.crashlytics.android.internal.ac: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.ab: boolean f(android.content.Context)>",
							"<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.Crashlytics: void <init>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.u: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.System: long currentTimeMillis()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.u a(java.lang.Class)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: java.lang.String c(java.lang.String)>",
							"<java.lang.String: java.lang.String trim()>",
							"<java.lang.String: java.lang.String substring(int,int)>",
							"<java.lang.String: int length()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: void logException(java.lang.Throwable)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.v: void a(java.lang.Thread,java.lang.Throwable)>",
							"<java.util.Date: void <init>()>",
							"<com.crashlytics.android.v: java.util.concurrent.Future a(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.AbstractExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.G: void <init>(com.crashlytics.android.v,java.lang.Runnable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.P: void <init>(com.crashlytics.android.v,java.util.Date,java.lang.Thread,java.lang.Throwable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.A: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String,boolean)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int println(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<java.lang.Thread: java.lang.Thread currentThread()>",
							"<org.json.JSONObject: void <init>(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.json.JSONObject: java.lang.String getString(java.lang.String)>",
							"<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.json.JSONObject: boolean has(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHomeURL(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setScaledImageWidth(int)>",
							"<org.wordpress.android.models.Blog: void setScaledImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setPostFormats(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setWpVersion(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_key(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_password(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_username(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcomFlag(boolean)>",
							"<org.wordpress.android.models.Blog: void setLocation(boolean)>",
							"<org.wordpress.android.models.Blog: void setRemoteBlogId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidthId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidth(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setFullSizeImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setFeaturedImageCapable(boolean)>",
							"<android.database.Cursor: int getInt(int)>",
							"<org.wordpress.android.models.Blog: void setImagePlacement(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttppassword(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttpuser(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setPassword(java.lang.String)>",
							"<org.wordpress.android.WordPressDB: java.lang.String decryptPassword(java.lang.String)>",
							"<java.lang.String: byte[] getBytes(java.lang.String)>",
							"<java.lang.String: void <init>(byte[])>",
							"<javax.crypto.Cipher: byte[] doFinal(byte[])>",
							"<javax.crypto.Cipher: void init(int,java.security.Key)>",
							"<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
							"<android.util.Base64: byte[] decode(java.lang.String,int)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>",
							"<javax.crypto.spec.DESKeySpec: void <init>(byte[])>",
							"<org.wordpress.android.models.Blog: void setUsername(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setBlogName(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setUrl(java.lang.String)>",
							"<android.database.Cursor: int getColumnIndex(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setLocalTableBlogId(int)>",
							"<org.wordpress.android.models.Blog: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.util.List: int size()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPressDB: java.util.List getAccountsBy(java.lang.String,java.lang.String[])>",
							"<java.util.Vector: void <init>()>",
							"<java.util.Collections: void sort(java.util.List,java.util.Comparator)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: boolean moveToNext()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.util.HashMap: void <init>()>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: int getInt(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] addAll(java.lang.Object[],java.lang.Object[])>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] clone(java.lang.Object[])>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.Class: java.lang.String getName()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>",
							"<java.lang.Class: java.lang.Class getComponentType()>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlogToLastActive()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.WordPressDB: int getLastBlogId()>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences: int getInt(java.lang.String,int)>",
							"<org.wordpress.android.WordPressDB: boolean isDotComAccountVisible(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<org.wordpress.android.util.SqlUtils: boolean boolForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: boolean sqlToBool(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: org.wordpress.android.ui.posts.PostsListFragment access$100(org.wordpress.android.ui.posts.PostsActivity)>",
							"<org.wordpress.android.WordPressDB: boolean deletePost(org.wordpress.android.models.Post)>",
							"<org.wordpress.android.models.Post: int getLocalTableBlogId()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.models.Post: long getLocalTablePostId()>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void checkForLocalChanges(boolean)>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void popPostDetail()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getHTMLStringStackTrace(java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getStringStackTrace(java.lang.Throwable)>",
							"<java.io.StringWriter: void <init>()>",
							"<org.apache.commons.lang.exception.NestableError: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.NotImplementedException: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: void printStackTrace(java.io.PrintWriter)>",
							"<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableException: void printStackTrace(java.io.PrintWriter)>",
							"<java.io.PrintWriter: void <init>(java.io.Writer)>",
							"<java.io.StringWriter: java.lang.String toString()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<android.support.v4.app.FragmentManager: void popBackStack()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$5: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$4: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.WordPressDB: boolean findLocalChanges(int,boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.wordpress.android.ui.posts.PostsActivity: void attemptToSelectPost()>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setShouldSelectFirstPost(boolean)>",
							"<android.support.v4.app.Fragment: boolean isInLayout()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Object)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"android.os.AsyncTask.onPostExecute",
							"android.os.AsyncTask$Status.<clinit>",
							"android.os.AsyncTask$Status.<clinit>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<android.os.AsyncTask: void <init>()>",
							"android.os.AsyncTask$Status.<init>"
						]
					}
				]
			},
			{
				"Candidate Name":"org.wordpress.android.ui.posts.PostsActivity.attemptToSelectPost",
				"Candidate Score":95,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.AsyncTask.finish",
							"android.os.AsyncTask.isCancelled",
							"android.os.AsyncTask.onCancelled",
							"android.os.AsyncTask.onCancelled",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"<android.app.Activity: void dismissDialog(int)>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask$1: void <init>(org.wordpress.android.ui.posts.PostsActivity$deletePostTask)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHelper: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHeaderTransformer: void setShowProgressBarOnly(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void ensureAttacher()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshingInt(android.view.View,boolean,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean isDestroyed()>",
							"<android.util.Log: int i(java.lang.String,java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void reset(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<android.view.View: boolean removeCallbacks(java.lang.Runnable)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void startRefresh(android.view.View,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.OnRefreshListener: void onRefreshStarted(android.view.View)>",
							"<android.view.View: boolean post(java.lang.Runnable)>",
							"<android.view.View: boolean postDelayed(java.lang.Runnable,long)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void updateHeaderViewPosition(android.view.View)>",
							"<android.app.Activity: android.view.Window getWindow()>",
							"<android.view.View: java.lang.Object getTag()>",
							"<android.view.ViewManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>",
							"<android.app.Activity: android.view.WindowManager getWindowManager()>",
							"<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>",
							"<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>",
							"<android.view.Window: android.view.View getDecorView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: void onRefreshStarted()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean canRefresh(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void resetTouch()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: boolean hasActivity()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Object)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Boolean)>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.xmlrpc.android.ApiHelper$GenericErrorCallback: void onFailure(org.xmlrpc.android.ApiHelper$ErrorType,java.lang.String,java.lang.Throwable)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback: void onSuccess(int)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Object doInBackground(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Boolean doInBackground(java.util.List[])>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.wordpress.android.WordPressDB: void savePosts(java.util.List,int,boolean,boolean)>",
							"<java.util.List: int size()>",
							"<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>",
							"<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>",
							"<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.util.SqlUtils: long boolToSql(boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.wordpress.android.util.MapUtils: int getMapInt(java.util.Map,java.lang.String,int)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.lang.Integer: int parseInt(java.lang.String)>",
							"<java.lang.Object: boolean equals(java.lang.Object)>",
							"<org.json.JSONArray: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: int getTimezoneOffset()>",
							"<java.util.Date: void <init>(long)>",
							"<java.lang.Long: long longValue()>",
							"<android.content.ContentValues: java.lang.Object get(java.lang.String)>",
							"<android.database.sqlite.SQLiteDatabase: void endTransaction()>",
							"<java.util.Date: void <init>()>",
							"<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<org.json.JSONArray: void <init>()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>",
							"<java.lang.Long: java.lang.Long valueOf(long)>",
							"<java.util.Date: long getTime()>",
							"<org.wordpress.android.util.MapUtils: java.util.Date getMapDate(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.String)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<android.content.ContentValues: void <init>()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<android.database.sqlite.SQLiteDatabase: void beginTransaction()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<org.wordpress.android.WordPressDB: void deleteUploadedPosts(int,boolean)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.xmlrpc.android.XMLRPCClientInterface: java.lang.Object call(java.lang.String,java.lang.Object[])>",
							"<org.wordpress.android.models.Blog: java.lang.String getPassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUsername()>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.xmlrpc.android.XMLRPCFactory: org.xmlrpc.android.XMLRPCClientInterface instantiate(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.xmlrpc.android.XMLRPCFactoryDefault: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.xmlrpc.android.XMLRPCFactoryAbstract: org.xmlrpc.android.XMLRPCClientInterface make(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void v(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean access$300(org.wordpress.android.util.AppLog$LogEntryList,org.wordpress.android.util.AppLog$LogEntry)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean addEntry(org.wordpress.android.util.AppLog$LogEntry)>",
							"<java.util.ArrayList: int size()>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void removeFirstEntry()>",
							"<java.util.ArrayList: java.util.Iterator iterator()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$EntrySet$1: java.util.Map$Entry next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt(int)>",
							"<org.apache.commons.lang.math.JVMRandom: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<java.util.Random: int nextInt(int)>",
							"<java.util.Random: int nextInt()>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object next()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: void checkTokenized()>",
							"<java.lang.String: void <clinit>()>",
							"<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.List: int size()>",
							"<java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.Vector: int size()>",
							"<java.util.ArrayList: int size()>",
							"<java.util.LinkedList: int size()>",
							"<java.util.concurrent.CopyOnWriteArrayList: int size()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer: java.util.List tokenize(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.Collections: void <clinit>()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<java.lang.String: int length()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: boolean add(java.lang.Object)>",
							"<java.util.AbstractList: boolean add(java.lang.Object)>",
							"<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<java.util.LinkedList: boolean add(java.lang.Object)>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isEmptyTokenAsNull()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isIgnoreEmptyTokens()>",
							"<org.apache.commons.lang.text.StrTokenizer: int readNextToken(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List)>",
							"<java.lang.Math: int max(int,int)>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<java.util.Arrays: int binarySearch(char[],char)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: int readWithQuotes(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder clear()>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isQuote(char[],int,int,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.String substring(int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int validateRange(int,int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char[],int,int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(int)>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder appendNull()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getQuoteMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void <init>()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: java.lang.Object next()>",
							"<java.util.GregorianCalendar: boolean equals(java.lang.Object)>",
							"<java.util.Calendar: void add(int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.GregorianCalendar: void add(int,int)>",
							"<java.util.Calendar: boolean equals(java.lang.Object)>",
							"<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$KeySet$1: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap$Values$1: java.lang.Object next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: java.lang.Object next()>",
							"<java.lang.Character: void <clinit>()>",
							"<java.lang.Character: void <init>(char)>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: void prepareNext()>",
							"<org.apache.commons.lang.CharRange: boolean access$100(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$200(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$300(org.apache.commons.lang.CharRange)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: java.lang.Object next()>",
							"<java.util.Scanner: java.lang.String next()>",
							"<android.support.v4.util.MapCollections$MapIterator: java.util.Map$Entry next()>",
							"<android.support.v4.util.MapCollections$MapIterator: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: boolean hasNext()>",
							"<java.util.Calendar: boolean before(java.lang.Object)>",
							"<com.google.gson.JsonStreamParser: boolean hasNext()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<com.google.gson.JsonIOException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<java.lang.RuntimeException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonSyntaxException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>",
							"<com.google.gson.stream.JsonReader$2: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: com.google.gson.stream.JsonScope[] values()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.support.v4.util.SparseArrayCompat: android.support.v4.util.SparseArrayCompat clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object cloneReset()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: java.lang.Object clone()>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrTokenizer reset()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.MalformedJsonException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.io.Reader: int read(char[],int,int)>",
							"<com.google.gson.internal.bind.JsonTreeReader$1: int read(char[],int,int)>",
							"<java.lang.AssertionError: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderReader: int read(char[],int,int)>",
							"<java.lang.IndexOutOfBoundsException: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void getChars(int,int,char[],int)>",
							"<java.lang.System: void <clinit>()>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<java.io.BufferedReader: int read(char[],int,int)>",
							"<java.io.InputStreamReader: int read(char[],int,int)>",
							"<java.io.FilterReader: int read(char[],int,int)>",
							"<java.io.PushbackReader: int read(char[],int,int)>",
							"<java.io.StringReader: int read(char[],int,int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.io.EOFException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: void skipToEndOfLine()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean skipTo(java.lang.String)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.String: char charAt(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken objectValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<java.lang.String: char charAt(int)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: char readEscapeCharacter()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.NumberFormatException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: void push(com.google.gson.stream.JsonScope)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken readLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeNumber(char[],int,int)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInObject(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInArray(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: void consumeNonExecutePrefix()>",
							"<com.google.gson.stream.JsonReader: void <clinit>()>",
							"<java.lang.String: char[] toCharArray()>",
							"<com.google.gson.stream.JsonReader$1: void <init>()>",
							"<com.google.gson.internal.JsonReaderInternalAccess: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.util.Scanner: boolean hasNext()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: boolean hasNext()>",
							"<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: boolean hasNext()>",
							"<java.util.ArrayList: boolean remove(java.lang.Object)>",
							"<android.util.Log: int v(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttppassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttpuser()>",
							"<org.wordpress.android.models.Blog: java.net.URI getUri()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUrl()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.net.URI: void <init>(java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void <init>(org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback)>",
							"<org.xmlrpc.android.ApiHelper$HelperAsyncTask: void <init>()>",
							"<android.os.AsyncTask: void <init>()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$7: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<android.view.View: void setVisibility(int)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: int getRemotePostCount()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.models.PostsListPost: boolean isLocalDraft()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: org.wordpress.android.ui.posts.adapters.PostsListAdapter getPostListAdapter()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$4: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: void <init>(android.content.Context,boolean,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnLoadMoreListener,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnPostsLoadedListener)>",
							"<android.widget.BaseAdapter: void <init>()>",
							"<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>",
							"<java.util.ArrayList: void <init>()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$5: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.NetworkUtils: boolean checkConnection(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: boolean isNetworkAvailable(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: android.net.NetworkInfo getActiveNetworkInfo(android.content.Context)>",
							"<android.content.Context: java.lang.Object getSystemService(java.lang.String)>",
							"<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>",
							"<android.net.NetworkInfo: boolean isConnected()>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.content.Context: java.lang.String getString(int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,java.lang.String,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.wordpress.android.WordPressDB: void updateLastBlogId(int)>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences$Editor: boolean commit()>",
							"<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>",
							"<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<org.wordpress.android.WordPressDB: org.wordpress.android.models.Blog instantiateBlogByLocalId(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<android.database.Cursor: void close()>",
							"<org.wordpress.android.models.Blog: void setHidden(boolean)>",
							"<org.wordpress.android.models.Blog: void setAdmin(boolean)>",
							"<org.wordpress.android.models.Blog: void setBlogOptions(java.lang.String)>",
							"<org.wordpress.android.models.Blog: org.json.JSONObject getBlogOptionsJSONObject()>",
							"<org.wordpress.android.models.Blog: java.lang.String getBlogOptions()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.wordpress.android.util.CrashlyticsUtils: void logException(java.lang.Throwable,org.wordpress.android.util.CrashlyticsUtils$ExceptionType,org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<java.lang.Enum: java.lang.String name()>",
							"<com.crashlytics.android.Crashlytics: void setString(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: int size()>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.v: void <init>()>",
							"<com.crashlytics.android.internal.m: void <clinit>()>",
							"<com.crashlytics.android.internal.n: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.o: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.B: void <init>(com.crashlytics.android.internal.m)>",
							"<android.os.Looper: android.os.Looper getMainLooper()>",
							"<android.os.Handler: void <init>(android.os.Looper)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String)>",
							"<com.crashlytics.android.internal.i: void <clinit>()>",
							"<com.crashlytics.android.internal.j: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String,com.crashlytics.android.internal.i)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(java.lang.String)>",
							"<java.util.HashMap: void <init>()>",
							"<com.crashlytics.android.internal.d: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<com.crashlytics.android.internal.c: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.v: int g()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>",
							"<com.crashlytics.android.internal.r: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<com.crashlytics.android.internal.ab: void <clinit>()>",
							"<com.crashlytics.android.internal.ac: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.ab: boolean f(android.content.Context)>",
							"<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.Crashlytics: void <init>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.u: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.System: long currentTimeMillis()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.u a(java.lang.Class)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: java.lang.String c(java.lang.String)>",
							"<java.lang.String: java.lang.String trim()>",
							"<java.lang.String: java.lang.String substring(int,int)>",
							"<java.lang.String: int length()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: void logException(java.lang.Throwable)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.v: void a(java.lang.Thread,java.lang.Throwable)>",
							"<java.util.Date: void <init>()>",
							"<com.crashlytics.android.v: java.util.concurrent.Future a(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.AbstractExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.G: void <init>(com.crashlytics.android.v,java.lang.Runnable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.P: void <init>(com.crashlytics.android.v,java.util.Date,java.lang.Thread,java.lang.Throwable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.A: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String,boolean)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int println(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<java.lang.Thread: java.lang.Thread currentThread()>",
							"<org.json.JSONObject: void <init>(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.json.JSONObject: java.lang.String getString(java.lang.String)>",
							"<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.json.JSONObject: boolean has(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHomeURL(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setScaledImageWidth(int)>",
							"<org.wordpress.android.models.Blog: void setScaledImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setPostFormats(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setWpVersion(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_key(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_password(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_username(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcomFlag(boolean)>",
							"<org.wordpress.android.models.Blog: void setLocation(boolean)>",
							"<org.wordpress.android.models.Blog: void setRemoteBlogId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidthId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidth(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setFullSizeImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setFeaturedImageCapable(boolean)>",
							"<android.database.Cursor: int getInt(int)>",
							"<org.wordpress.android.models.Blog: void setImagePlacement(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttppassword(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttpuser(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setPassword(java.lang.String)>",
							"<org.wordpress.android.WordPressDB: java.lang.String decryptPassword(java.lang.String)>",
							"<java.lang.String: byte[] getBytes(java.lang.String)>",
							"<java.lang.String: void <init>(byte[])>",
							"<javax.crypto.Cipher: byte[] doFinal(byte[])>",
							"<javax.crypto.Cipher: void init(int,java.security.Key)>",
							"<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
							"<android.util.Base64: byte[] decode(java.lang.String,int)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>",
							"<javax.crypto.spec.DESKeySpec: void <init>(byte[])>",
							"<org.wordpress.android.models.Blog: void setUsername(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setBlogName(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setUrl(java.lang.String)>",
							"<android.database.Cursor: int getColumnIndex(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setLocalTableBlogId(int)>",
							"<org.wordpress.android.models.Blog: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.util.List: int size()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPressDB: java.util.List getAccountsBy(java.lang.String,java.lang.String[])>",
							"<java.util.Vector: void <init>()>",
							"<java.util.Collections: void sort(java.util.List,java.util.Comparator)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: boolean moveToNext()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.util.HashMap: void <init>()>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: int getInt(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] addAll(java.lang.Object[],java.lang.Object[])>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] clone(java.lang.Object[])>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.Class: java.lang.String getName()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>",
							"<java.lang.Class: java.lang.Class getComponentType()>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlogToLastActive()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.WordPressDB: int getLastBlogId()>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences: int getInt(java.lang.String,int)>",
							"<org.wordpress.android.WordPressDB: boolean isDotComAccountVisible(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<org.wordpress.android.util.SqlUtils: boolean boolForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: boolean sqlToBool(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: org.wordpress.android.ui.posts.PostsListFragment access$100(org.wordpress.android.ui.posts.PostsActivity)>",
							"<org.wordpress.android.WordPressDB: boolean deletePost(org.wordpress.android.models.Post)>",
							"<org.wordpress.android.models.Post: int getLocalTableBlogId()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.models.Post: long getLocalTablePostId()>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void checkForLocalChanges(boolean)>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void popPostDetail()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getHTMLStringStackTrace(java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getStringStackTrace(java.lang.Throwable)>",
							"<java.io.StringWriter: void <init>()>",
							"<org.apache.commons.lang.exception.NestableError: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.NotImplementedException: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: void printStackTrace(java.io.PrintWriter)>",
							"<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableException: void printStackTrace(java.io.PrintWriter)>",
							"<java.io.PrintWriter: void <init>(java.io.Writer)>",
							"<java.io.StringWriter: java.lang.String toString()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<android.support.v4.app.FragmentManager: void popBackStack()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$5: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$4: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.WordPressDB: boolean findLocalChanges(int,boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.wordpress.android.ui.posts.PostsActivity: void attemptToSelectPost()>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setShouldSelectFirstPost(boolean)>",
							"<android.support.v4.app.Fragment: boolean isInLayout()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Object)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"android.os.AsyncTask.onPostExecute",
							"android.os.AsyncTask$Status.<clinit>",
							"android.os.AsyncTask$Status.<clinit>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<android.os.AsyncTask: void <init>()>",
							"android.os.AsyncTask$Status.<init>"
						]
					}
				]
			},
			{
				"Candidate Name":"org.wordpress.android.ui.posts.PostsActivity.checkForLocalChanges",
				"Candidate Score":95,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.AsyncTask.finish",
							"android.os.AsyncTask.isCancelled",
							"android.os.AsyncTask.onCancelled",
							"android.os.AsyncTask.onCancelled",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"<android.app.Activity: void dismissDialog(int)>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask$1: void <init>(org.wordpress.android.ui.posts.PostsActivity$deletePostTask)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHelper: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHeaderTransformer: void setShowProgressBarOnly(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void ensureAttacher()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshingInt(android.view.View,boolean,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean isDestroyed()>",
							"<android.util.Log: int i(java.lang.String,java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void reset(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<android.view.View: boolean removeCallbacks(java.lang.Runnable)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void startRefresh(android.view.View,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.OnRefreshListener: void onRefreshStarted(android.view.View)>",
							"<android.view.View: boolean post(java.lang.Runnable)>",
							"<android.view.View: boolean postDelayed(java.lang.Runnable,long)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void updateHeaderViewPosition(android.view.View)>",
							"<android.app.Activity: android.view.Window getWindow()>",
							"<android.view.View: java.lang.Object getTag()>",
							"<android.view.ViewManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>",
							"<android.app.Activity: android.view.WindowManager getWindowManager()>",
							"<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>",
							"<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>",
							"<android.view.Window: android.view.View getDecorView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: void onRefreshStarted()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean canRefresh(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void resetTouch()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: boolean hasActivity()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Object)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Boolean)>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.xmlrpc.android.ApiHelper$GenericErrorCallback: void onFailure(org.xmlrpc.android.ApiHelper$ErrorType,java.lang.String,java.lang.Throwable)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback: void onSuccess(int)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Object doInBackground(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Boolean doInBackground(java.util.List[])>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.wordpress.android.WordPressDB: void savePosts(java.util.List,int,boolean,boolean)>",
							"<java.util.List: int size()>",
							"<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>",
							"<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>",
							"<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.util.SqlUtils: long boolToSql(boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.wordpress.android.util.MapUtils: int getMapInt(java.util.Map,java.lang.String,int)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.lang.Integer: int parseInt(java.lang.String)>",
							"<java.lang.Object: boolean equals(java.lang.Object)>",
							"<org.json.JSONArray: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: int getTimezoneOffset()>",
							"<java.util.Date: void <init>(long)>",
							"<java.lang.Long: long longValue()>",
							"<android.content.ContentValues: java.lang.Object get(java.lang.String)>",
							"<android.database.sqlite.SQLiteDatabase: void endTransaction()>",
							"<java.util.Date: void <init>()>",
							"<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<org.json.JSONArray: void <init>()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>",
							"<java.lang.Long: java.lang.Long valueOf(long)>",
							"<java.util.Date: long getTime()>",
							"<org.wordpress.android.util.MapUtils: java.util.Date getMapDate(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.String)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<android.content.ContentValues: void <init>()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<android.database.sqlite.SQLiteDatabase: void beginTransaction()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<org.wordpress.android.WordPressDB: void deleteUploadedPosts(int,boolean)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.xmlrpc.android.XMLRPCClientInterface: java.lang.Object call(java.lang.String,java.lang.Object[])>",
							"<org.wordpress.android.models.Blog: java.lang.String getPassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUsername()>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.xmlrpc.android.XMLRPCFactory: org.xmlrpc.android.XMLRPCClientInterface instantiate(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.xmlrpc.android.XMLRPCFactoryDefault: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.xmlrpc.android.XMLRPCFactoryAbstract: org.xmlrpc.android.XMLRPCClientInterface make(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void v(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean access$300(org.wordpress.android.util.AppLog$LogEntryList,org.wordpress.android.util.AppLog$LogEntry)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean addEntry(org.wordpress.android.util.AppLog$LogEntry)>",
							"<java.util.ArrayList: int size()>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void removeFirstEntry()>",
							"<java.util.ArrayList: java.util.Iterator iterator()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$EntrySet$1: java.util.Map$Entry next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt(int)>",
							"<org.apache.commons.lang.math.JVMRandom: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<java.util.Random: int nextInt(int)>",
							"<java.util.Random: int nextInt()>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object next()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: void checkTokenized()>",
							"<java.lang.String: void <clinit>()>",
							"<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.List: int size()>",
							"<java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.Vector: int size()>",
							"<java.util.ArrayList: int size()>",
							"<java.util.LinkedList: int size()>",
							"<java.util.concurrent.CopyOnWriteArrayList: int size()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer: java.util.List tokenize(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.Collections: void <clinit>()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<java.lang.String: int length()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: boolean add(java.lang.Object)>",
							"<java.util.AbstractList: boolean add(java.lang.Object)>",
							"<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<java.util.LinkedList: boolean add(java.lang.Object)>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isEmptyTokenAsNull()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isIgnoreEmptyTokens()>",
							"<org.apache.commons.lang.text.StrTokenizer: int readNextToken(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List)>",
							"<java.lang.Math: int max(int,int)>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<java.util.Arrays: int binarySearch(char[],char)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: int readWithQuotes(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder clear()>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isQuote(char[],int,int,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.String substring(int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int validateRange(int,int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char[],int,int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(int)>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder appendNull()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getQuoteMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void <init>()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: java.lang.Object next()>",
							"<java.util.GregorianCalendar: boolean equals(java.lang.Object)>",
							"<java.util.Calendar: void add(int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.GregorianCalendar: void add(int,int)>",
							"<java.util.Calendar: boolean equals(java.lang.Object)>",
							"<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$KeySet$1: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap$Values$1: java.lang.Object next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: java.lang.Object next()>",
							"<java.lang.Character: void <clinit>()>",
							"<java.lang.Character: void <init>(char)>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: void prepareNext()>",
							"<org.apache.commons.lang.CharRange: boolean access$100(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$200(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$300(org.apache.commons.lang.CharRange)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: java.lang.Object next()>",
							"<java.util.Scanner: java.lang.String next()>",
							"<android.support.v4.util.MapCollections$MapIterator: java.util.Map$Entry next()>",
							"<android.support.v4.util.MapCollections$MapIterator: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: boolean hasNext()>",
							"<java.util.Calendar: boolean before(java.lang.Object)>",
							"<com.google.gson.JsonStreamParser: boolean hasNext()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<com.google.gson.JsonIOException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<java.lang.RuntimeException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonSyntaxException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>",
							"<com.google.gson.stream.JsonReader$2: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: com.google.gson.stream.JsonScope[] values()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.support.v4.util.SparseArrayCompat: android.support.v4.util.SparseArrayCompat clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object cloneReset()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: java.lang.Object clone()>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrTokenizer reset()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.MalformedJsonException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.io.Reader: int read(char[],int,int)>",
							"<com.google.gson.internal.bind.JsonTreeReader$1: int read(char[],int,int)>",
							"<java.lang.AssertionError: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderReader: int read(char[],int,int)>",
							"<java.lang.IndexOutOfBoundsException: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void getChars(int,int,char[],int)>",
							"<java.lang.System: void <clinit>()>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<java.io.BufferedReader: int read(char[],int,int)>",
							"<java.io.InputStreamReader: int read(char[],int,int)>",
							"<java.io.FilterReader: int read(char[],int,int)>",
							"<java.io.PushbackReader: int read(char[],int,int)>",
							"<java.io.StringReader: int read(char[],int,int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.io.EOFException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: void skipToEndOfLine()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean skipTo(java.lang.String)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.String: char charAt(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken objectValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<java.lang.String: char charAt(int)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: char readEscapeCharacter()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.NumberFormatException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: void push(com.google.gson.stream.JsonScope)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken readLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeNumber(char[],int,int)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInObject(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInArray(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: void consumeNonExecutePrefix()>",
							"<com.google.gson.stream.JsonReader: void <clinit>()>",
							"<java.lang.String: char[] toCharArray()>",
							"<com.google.gson.stream.JsonReader$1: void <init>()>",
							"<com.google.gson.internal.JsonReaderInternalAccess: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.util.Scanner: boolean hasNext()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: boolean hasNext()>",
							"<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: boolean hasNext()>",
							"<java.util.ArrayList: boolean remove(java.lang.Object)>",
							"<android.util.Log: int v(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttppassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttpuser()>",
							"<org.wordpress.android.models.Blog: java.net.URI getUri()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUrl()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.net.URI: void <init>(java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void <init>(org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback)>",
							"<org.xmlrpc.android.ApiHelper$HelperAsyncTask: void <init>()>",
							"<android.os.AsyncTask: void <init>()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$7: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<android.view.View: void setVisibility(int)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: int getRemotePostCount()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.models.PostsListPost: boolean isLocalDraft()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: org.wordpress.android.ui.posts.adapters.PostsListAdapter getPostListAdapter()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$4: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: void <init>(android.content.Context,boolean,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnLoadMoreListener,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnPostsLoadedListener)>",
							"<android.widget.BaseAdapter: void <init>()>",
							"<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>",
							"<java.util.ArrayList: void <init>()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$5: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.NetworkUtils: boolean checkConnection(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: boolean isNetworkAvailable(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: android.net.NetworkInfo getActiveNetworkInfo(android.content.Context)>",
							"<android.content.Context: java.lang.Object getSystemService(java.lang.String)>",
							"<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>",
							"<android.net.NetworkInfo: boolean isConnected()>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.content.Context: java.lang.String getString(int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,java.lang.String,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.wordpress.android.WordPressDB: void updateLastBlogId(int)>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences$Editor: boolean commit()>",
							"<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>",
							"<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<org.wordpress.android.WordPressDB: org.wordpress.android.models.Blog instantiateBlogByLocalId(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<android.database.Cursor: void close()>",
							"<org.wordpress.android.models.Blog: void setHidden(boolean)>",
							"<org.wordpress.android.models.Blog: void setAdmin(boolean)>",
							"<org.wordpress.android.models.Blog: void setBlogOptions(java.lang.String)>",
							"<org.wordpress.android.models.Blog: org.json.JSONObject getBlogOptionsJSONObject()>",
							"<org.wordpress.android.models.Blog: java.lang.String getBlogOptions()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.wordpress.android.util.CrashlyticsUtils: void logException(java.lang.Throwable,org.wordpress.android.util.CrashlyticsUtils$ExceptionType,org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<java.lang.Enum: java.lang.String name()>",
							"<com.crashlytics.android.Crashlytics: void setString(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: int size()>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.v: void <init>()>",
							"<com.crashlytics.android.internal.m: void <clinit>()>",
							"<com.crashlytics.android.internal.n: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.o: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.B: void <init>(com.crashlytics.android.internal.m)>",
							"<android.os.Looper: android.os.Looper getMainLooper()>",
							"<android.os.Handler: void <init>(android.os.Looper)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String)>",
							"<com.crashlytics.android.internal.i: void <clinit>()>",
							"<com.crashlytics.android.internal.j: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String,com.crashlytics.android.internal.i)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(java.lang.String)>",
							"<java.util.HashMap: void <init>()>",
							"<com.crashlytics.android.internal.d: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<com.crashlytics.android.internal.c: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.v: int g()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>",
							"<com.crashlytics.android.internal.r: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<com.crashlytics.android.internal.ab: void <clinit>()>",
							"<com.crashlytics.android.internal.ac: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.ab: boolean f(android.content.Context)>",
							"<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.Crashlytics: void <init>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.u: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.System: long currentTimeMillis()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.u a(java.lang.Class)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: java.lang.String c(java.lang.String)>",
							"<java.lang.String: java.lang.String trim()>",
							"<java.lang.String: java.lang.String substring(int,int)>",
							"<java.lang.String: int length()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: void logException(java.lang.Throwable)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.v: void a(java.lang.Thread,java.lang.Throwable)>",
							"<java.util.Date: void <init>()>",
							"<com.crashlytics.android.v: java.util.concurrent.Future a(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.AbstractExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.G: void <init>(com.crashlytics.android.v,java.lang.Runnable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.P: void <init>(com.crashlytics.android.v,java.util.Date,java.lang.Thread,java.lang.Throwable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.A: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String,boolean)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int println(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<java.lang.Thread: java.lang.Thread currentThread()>",
							"<org.json.JSONObject: void <init>(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.json.JSONObject: java.lang.String getString(java.lang.String)>",
							"<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.json.JSONObject: boolean has(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHomeURL(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setScaledImageWidth(int)>",
							"<org.wordpress.android.models.Blog: void setScaledImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setPostFormats(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setWpVersion(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_key(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_password(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_username(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcomFlag(boolean)>",
							"<org.wordpress.android.models.Blog: void setLocation(boolean)>",
							"<org.wordpress.android.models.Blog: void setRemoteBlogId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidthId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidth(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setFullSizeImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setFeaturedImageCapable(boolean)>",
							"<android.database.Cursor: int getInt(int)>",
							"<org.wordpress.android.models.Blog: void setImagePlacement(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttppassword(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttpuser(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setPassword(java.lang.String)>",
							"<org.wordpress.android.WordPressDB: java.lang.String decryptPassword(java.lang.String)>",
							"<java.lang.String: byte[] getBytes(java.lang.String)>",
							"<java.lang.String: void <init>(byte[])>",
							"<javax.crypto.Cipher: byte[] doFinal(byte[])>",
							"<javax.crypto.Cipher: void init(int,java.security.Key)>",
							"<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
							"<android.util.Base64: byte[] decode(java.lang.String,int)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>",
							"<javax.crypto.spec.DESKeySpec: void <init>(byte[])>",
							"<org.wordpress.android.models.Blog: void setUsername(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setBlogName(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setUrl(java.lang.String)>",
							"<android.database.Cursor: int getColumnIndex(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setLocalTableBlogId(int)>",
							"<org.wordpress.android.models.Blog: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.util.List: int size()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPressDB: java.util.List getAccountsBy(java.lang.String,java.lang.String[])>",
							"<java.util.Vector: void <init>()>",
							"<java.util.Collections: void sort(java.util.List,java.util.Comparator)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: boolean moveToNext()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.util.HashMap: void <init>()>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: int getInt(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] addAll(java.lang.Object[],java.lang.Object[])>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] clone(java.lang.Object[])>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.Class: java.lang.String getName()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>",
							"<java.lang.Class: java.lang.Class getComponentType()>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlogToLastActive()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.WordPressDB: int getLastBlogId()>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences: int getInt(java.lang.String,int)>",
							"<org.wordpress.android.WordPressDB: boolean isDotComAccountVisible(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<org.wordpress.android.util.SqlUtils: boolean boolForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: boolean sqlToBool(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: org.wordpress.android.ui.posts.PostsListFragment access$100(org.wordpress.android.ui.posts.PostsActivity)>",
							"<org.wordpress.android.WordPressDB: boolean deletePost(org.wordpress.android.models.Post)>",
							"<org.wordpress.android.models.Post: int getLocalTableBlogId()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.models.Post: long getLocalTablePostId()>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void checkForLocalChanges(boolean)>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void popPostDetail()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getHTMLStringStackTrace(java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getStringStackTrace(java.lang.Throwable)>",
							"<java.io.StringWriter: void <init>()>",
							"<org.apache.commons.lang.exception.NestableError: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.NotImplementedException: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: void printStackTrace(java.io.PrintWriter)>",
							"<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableException: void printStackTrace(java.io.PrintWriter)>",
							"<java.io.PrintWriter: void <init>(java.io.Writer)>",
							"<java.io.StringWriter: java.lang.String toString()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<android.support.v4.app.FragmentManager: void popBackStack()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$5: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$4: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.WordPressDB: boolean findLocalChanges(int,boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.wordpress.android.ui.posts.PostsActivity: void attemptToSelectPost()>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setShouldSelectFirstPost(boolean)>",
							"<android.support.v4.app.Fragment: boolean isInLayout()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Object)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"android.os.AsyncTask.onPostExecute",
							"android.os.AsyncTask$Status.<clinit>",
							"android.os.AsyncTask$Status.<clinit>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<android.os.AsyncTask: void <init>()>",
							"android.os.AsyncTask$Status.<init>"
						]
					}
				]
			},
			{
				"Candidate Name":"org.wordpress.android.ui.posts.PostsActivity$4.<init>",
				"Candidate Score":94,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.AsyncTask.finish",
							"android.os.AsyncTask.isCancelled",
							"android.os.AsyncTask.onCancelled",
							"android.os.AsyncTask.onCancelled",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"<android.app.Activity: void dismissDialog(int)>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask$1: void <init>(org.wordpress.android.ui.posts.PostsActivity$deletePostTask)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHelper: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHeaderTransformer: void setShowProgressBarOnly(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void ensureAttacher()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshingInt(android.view.View,boolean,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean isDestroyed()>",
							"<android.util.Log: int i(java.lang.String,java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void reset(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<android.view.View: boolean removeCallbacks(java.lang.Runnable)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void startRefresh(android.view.View,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.OnRefreshListener: void onRefreshStarted(android.view.View)>",
							"<android.view.View: boolean post(java.lang.Runnable)>",
							"<android.view.View: boolean postDelayed(java.lang.Runnable,long)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void updateHeaderViewPosition(android.view.View)>",
							"<android.app.Activity: android.view.Window getWindow()>",
							"<android.view.View: java.lang.Object getTag()>",
							"<android.view.ViewManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>",
							"<android.app.Activity: android.view.WindowManager getWindowManager()>",
							"<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>",
							"<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>",
							"<android.view.Window: android.view.View getDecorView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: void onRefreshStarted()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean canRefresh(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void resetTouch()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: boolean hasActivity()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Object)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Boolean)>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.xmlrpc.android.ApiHelper$GenericErrorCallback: void onFailure(org.xmlrpc.android.ApiHelper$ErrorType,java.lang.String,java.lang.Throwable)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback: void onSuccess(int)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Object doInBackground(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Boolean doInBackground(java.util.List[])>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.wordpress.android.WordPressDB: void savePosts(java.util.List,int,boolean,boolean)>",
							"<java.util.List: int size()>",
							"<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>",
							"<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>",
							"<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.util.SqlUtils: long boolToSql(boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.wordpress.android.util.MapUtils: int getMapInt(java.util.Map,java.lang.String,int)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.lang.Integer: int parseInt(java.lang.String)>",
							"<java.lang.Object: boolean equals(java.lang.Object)>",
							"<org.json.JSONArray: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: int getTimezoneOffset()>",
							"<java.util.Date: void <init>(long)>",
							"<java.lang.Long: long longValue()>",
							"<android.content.ContentValues: java.lang.Object get(java.lang.String)>",
							"<android.database.sqlite.SQLiteDatabase: void endTransaction()>",
							"<java.util.Date: void <init>()>",
							"<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<org.json.JSONArray: void <init>()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>",
							"<java.lang.Long: java.lang.Long valueOf(long)>",
							"<java.util.Date: long getTime()>",
							"<org.wordpress.android.util.MapUtils: java.util.Date getMapDate(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.String)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<android.content.ContentValues: void <init>()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<android.database.sqlite.SQLiteDatabase: void beginTransaction()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<org.wordpress.android.WordPressDB: void deleteUploadedPosts(int,boolean)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.xmlrpc.android.XMLRPCClientInterface: java.lang.Object call(java.lang.String,java.lang.Object[])>",
							"<org.wordpress.android.models.Blog: java.lang.String getPassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUsername()>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.xmlrpc.android.XMLRPCFactory: org.xmlrpc.android.XMLRPCClientInterface instantiate(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.xmlrpc.android.XMLRPCFactoryDefault: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.xmlrpc.android.XMLRPCFactoryAbstract: org.xmlrpc.android.XMLRPCClientInterface make(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void v(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean access$300(org.wordpress.android.util.AppLog$LogEntryList,org.wordpress.android.util.AppLog$LogEntry)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean addEntry(org.wordpress.android.util.AppLog$LogEntry)>",
							"<java.util.ArrayList: int size()>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void removeFirstEntry()>",
							"<java.util.ArrayList: java.util.Iterator iterator()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$EntrySet$1: java.util.Map$Entry next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt(int)>",
							"<org.apache.commons.lang.math.JVMRandom: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<java.util.Random: int nextInt(int)>",
							"<java.util.Random: int nextInt()>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object next()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: void checkTokenized()>",
							"<java.lang.String: void <clinit>()>",
							"<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.List: int size()>",
							"<java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.Vector: int size()>",
							"<java.util.ArrayList: int size()>",
							"<java.util.LinkedList: int size()>",
							"<java.util.concurrent.CopyOnWriteArrayList: int size()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer: java.util.List tokenize(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.Collections: void <clinit>()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<java.lang.String: int length()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: boolean add(java.lang.Object)>",
							"<java.util.AbstractList: boolean add(java.lang.Object)>",
							"<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<java.util.LinkedList: boolean add(java.lang.Object)>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isEmptyTokenAsNull()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isIgnoreEmptyTokens()>",
							"<org.apache.commons.lang.text.StrTokenizer: int readNextToken(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List)>",
							"<java.lang.Math: int max(int,int)>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<java.util.Arrays: int binarySearch(char[],char)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: int readWithQuotes(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder clear()>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isQuote(char[],int,int,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.String substring(int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int validateRange(int,int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char[],int,int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(int)>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder appendNull()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getQuoteMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void <init>()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: java.lang.Object next()>",
							"<java.util.GregorianCalendar: boolean equals(java.lang.Object)>",
							"<java.util.Calendar: void add(int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.GregorianCalendar: void add(int,int)>",
							"<java.util.Calendar: boolean equals(java.lang.Object)>",
							"<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$KeySet$1: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap$Values$1: java.lang.Object next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: java.lang.Object next()>",
							"<java.lang.Character: void <clinit>()>",
							"<java.lang.Character: void <init>(char)>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: void prepareNext()>",
							"<org.apache.commons.lang.CharRange: boolean access$100(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$200(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$300(org.apache.commons.lang.CharRange)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: java.lang.Object next()>",
							"<java.util.Scanner: java.lang.String next()>",
							"<android.support.v4.util.MapCollections$MapIterator: java.util.Map$Entry next()>",
							"<android.support.v4.util.MapCollections$MapIterator: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: boolean hasNext()>",
							"<java.util.Calendar: boolean before(java.lang.Object)>",
							"<com.google.gson.JsonStreamParser: boolean hasNext()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<com.google.gson.JsonIOException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<java.lang.RuntimeException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonSyntaxException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>",
							"<com.google.gson.stream.JsonReader$2: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: com.google.gson.stream.JsonScope[] values()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.support.v4.util.SparseArrayCompat: android.support.v4.util.SparseArrayCompat clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object cloneReset()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: java.lang.Object clone()>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrTokenizer reset()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.MalformedJsonException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.io.Reader: int read(char[],int,int)>",
							"<com.google.gson.internal.bind.JsonTreeReader$1: int read(char[],int,int)>",
							"<java.lang.AssertionError: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderReader: int read(char[],int,int)>",
							"<java.lang.IndexOutOfBoundsException: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void getChars(int,int,char[],int)>",
							"<java.lang.System: void <clinit>()>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<java.io.BufferedReader: int read(char[],int,int)>",
							"<java.io.InputStreamReader: int read(char[],int,int)>",
							"<java.io.FilterReader: int read(char[],int,int)>",
							"<java.io.PushbackReader: int read(char[],int,int)>",
							"<java.io.StringReader: int read(char[],int,int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.io.EOFException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: void skipToEndOfLine()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean skipTo(java.lang.String)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.String: char charAt(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken objectValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<java.lang.String: char charAt(int)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: char readEscapeCharacter()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.NumberFormatException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: void push(com.google.gson.stream.JsonScope)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken readLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeNumber(char[],int,int)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInObject(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInArray(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: void consumeNonExecutePrefix()>",
							"<com.google.gson.stream.JsonReader: void <clinit>()>",
							"<java.lang.String: char[] toCharArray()>",
							"<com.google.gson.stream.JsonReader$1: void <init>()>",
							"<com.google.gson.internal.JsonReaderInternalAccess: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.util.Scanner: boolean hasNext()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: boolean hasNext()>",
							"<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: boolean hasNext()>",
							"<java.util.ArrayList: boolean remove(java.lang.Object)>",
							"<android.util.Log: int v(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttppassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttpuser()>",
							"<org.wordpress.android.models.Blog: java.net.URI getUri()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUrl()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.net.URI: void <init>(java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void <init>(org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback)>",
							"<org.xmlrpc.android.ApiHelper$HelperAsyncTask: void <init>()>",
							"<android.os.AsyncTask: void <init>()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$7: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<android.view.View: void setVisibility(int)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: int getRemotePostCount()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.models.PostsListPost: boolean isLocalDraft()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: org.wordpress.android.ui.posts.adapters.PostsListAdapter getPostListAdapter()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$4: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: void <init>(android.content.Context,boolean,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnLoadMoreListener,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnPostsLoadedListener)>",
							"<android.widget.BaseAdapter: void <init>()>",
							"<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>",
							"<java.util.ArrayList: void <init>()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$5: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.NetworkUtils: boolean checkConnection(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: boolean isNetworkAvailable(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: android.net.NetworkInfo getActiveNetworkInfo(android.content.Context)>",
							"<android.content.Context: java.lang.Object getSystemService(java.lang.String)>",
							"<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>",
							"<android.net.NetworkInfo: boolean isConnected()>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.content.Context: java.lang.String getString(int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,java.lang.String,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.wordpress.android.WordPressDB: void updateLastBlogId(int)>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences$Editor: boolean commit()>",
							"<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>",
							"<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<org.wordpress.android.WordPressDB: org.wordpress.android.models.Blog instantiateBlogByLocalId(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<android.database.Cursor: void close()>",
							"<org.wordpress.android.models.Blog: void setHidden(boolean)>",
							"<org.wordpress.android.models.Blog: void setAdmin(boolean)>",
							"<org.wordpress.android.models.Blog: void setBlogOptions(java.lang.String)>",
							"<org.wordpress.android.models.Blog: org.json.JSONObject getBlogOptionsJSONObject()>",
							"<org.wordpress.android.models.Blog: java.lang.String getBlogOptions()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.wordpress.android.util.CrashlyticsUtils: void logException(java.lang.Throwable,org.wordpress.android.util.CrashlyticsUtils$ExceptionType,org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<java.lang.Enum: java.lang.String name()>",
							"<com.crashlytics.android.Crashlytics: void setString(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: int size()>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.v: void <init>()>",
							"<com.crashlytics.android.internal.m: void <clinit>()>",
							"<com.crashlytics.android.internal.n: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.o: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.B: void <init>(com.crashlytics.android.internal.m)>",
							"<android.os.Looper: android.os.Looper getMainLooper()>",
							"<android.os.Handler: void <init>(android.os.Looper)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String)>",
							"<com.crashlytics.android.internal.i: void <clinit>()>",
							"<com.crashlytics.android.internal.j: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String,com.crashlytics.android.internal.i)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(java.lang.String)>",
							"<java.util.HashMap: void <init>()>",
							"<com.crashlytics.android.internal.d: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<com.crashlytics.android.internal.c: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.v: int g()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>",
							"<com.crashlytics.android.internal.r: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<com.crashlytics.android.internal.ab: void <clinit>()>",
							"<com.crashlytics.android.internal.ac: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.ab: boolean f(android.content.Context)>",
							"<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.Crashlytics: void <init>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.u: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.System: long currentTimeMillis()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.u a(java.lang.Class)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: java.lang.String c(java.lang.String)>",
							"<java.lang.String: java.lang.String trim()>",
							"<java.lang.String: java.lang.String substring(int,int)>",
							"<java.lang.String: int length()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: void logException(java.lang.Throwable)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.v: void a(java.lang.Thread,java.lang.Throwable)>",
							"<java.util.Date: void <init>()>",
							"<com.crashlytics.android.v: java.util.concurrent.Future a(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.AbstractExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.G: void <init>(com.crashlytics.android.v,java.lang.Runnable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.P: void <init>(com.crashlytics.android.v,java.util.Date,java.lang.Thread,java.lang.Throwable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.A: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String,boolean)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int println(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<java.lang.Thread: java.lang.Thread currentThread()>",
							"<org.json.JSONObject: void <init>(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.json.JSONObject: java.lang.String getString(java.lang.String)>",
							"<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.json.JSONObject: boolean has(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHomeURL(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setScaledImageWidth(int)>",
							"<org.wordpress.android.models.Blog: void setScaledImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setPostFormats(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setWpVersion(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_key(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_password(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_username(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcomFlag(boolean)>",
							"<org.wordpress.android.models.Blog: void setLocation(boolean)>",
							"<org.wordpress.android.models.Blog: void setRemoteBlogId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidthId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidth(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setFullSizeImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setFeaturedImageCapable(boolean)>",
							"<android.database.Cursor: int getInt(int)>",
							"<org.wordpress.android.models.Blog: void setImagePlacement(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttppassword(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttpuser(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setPassword(java.lang.String)>",
							"<org.wordpress.android.WordPressDB: java.lang.String decryptPassword(java.lang.String)>",
							"<java.lang.String: byte[] getBytes(java.lang.String)>",
							"<java.lang.String: void <init>(byte[])>",
							"<javax.crypto.Cipher: byte[] doFinal(byte[])>",
							"<javax.crypto.Cipher: void init(int,java.security.Key)>",
							"<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
							"<android.util.Base64: byte[] decode(java.lang.String,int)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>",
							"<javax.crypto.spec.DESKeySpec: void <init>(byte[])>",
							"<org.wordpress.android.models.Blog: void setUsername(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setBlogName(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setUrl(java.lang.String)>",
							"<android.database.Cursor: int getColumnIndex(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setLocalTableBlogId(int)>",
							"<org.wordpress.android.models.Blog: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.util.List: int size()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPressDB: java.util.List getAccountsBy(java.lang.String,java.lang.String[])>",
							"<java.util.Vector: void <init>()>",
							"<java.util.Collections: void sort(java.util.List,java.util.Comparator)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: boolean moveToNext()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.util.HashMap: void <init>()>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: int getInt(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] addAll(java.lang.Object[],java.lang.Object[])>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] clone(java.lang.Object[])>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.Class: java.lang.String getName()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>",
							"<java.lang.Class: java.lang.Class getComponentType()>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlogToLastActive()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.WordPressDB: int getLastBlogId()>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences: int getInt(java.lang.String,int)>",
							"<org.wordpress.android.WordPressDB: boolean isDotComAccountVisible(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<org.wordpress.android.util.SqlUtils: boolean boolForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: boolean sqlToBool(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: org.wordpress.android.ui.posts.PostsListFragment access$100(org.wordpress.android.ui.posts.PostsActivity)>",
							"<org.wordpress.android.WordPressDB: boolean deletePost(org.wordpress.android.models.Post)>",
							"<org.wordpress.android.models.Post: int getLocalTableBlogId()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.models.Post: long getLocalTablePostId()>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void checkForLocalChanges(boolean)>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void popPostDetail()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getHTMLStringStackTrace(java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getStringStackTrace(java.lang.Throwable)>",
							"<java.io.StringWriter: void <init>()>",
							"<org.apache.commons.lang.exception.NestableError: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.NotImplementedException: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: void printStackTrace(java.io.PrintWriter)>",
							"<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableException: void printStackTrace(java.io.PrintWriter)>",
							"<java.io.PrintWriter: void <init>(java.io.Writer)>",
							"<java.io.StringWriter: java.lang.String toString()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<android.support.v4.app.FragmentManager: void popBackStack()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$5: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$4: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.WordPressDB: boolean findLocalChanges(int,boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.wordpress.android.ui.posts.PostsActivity: void attemptToSelectPost()>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setShouldSelectFirstPost(boolean)>",
							"<android.support.v4.app.Fragment: boolean isInLayout()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Object)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"android.os.AsyncTask.onPostExecute",
							"android.os.AsyncTask$Status.<clinit>",
							"android.os.AsyncTask$Status.<clinit>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<android.os.AsyncTask: void <init>()>",
							"android.os.AsyncTask$Status.<init>"
						]
					}
				]
			},
			{
				"Candidate Name":"org.wordpress.android.ui.posts.PostsActivity$5.<init>",
				"Candidate Score":94,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.AsyncTask.finish",
							"android.os.AsyncTask.isCancelled",
							"android.os.AsyncTask.onCancelled",
							"android.os.AsyncTask.onCancelled",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"<android.app.Activity: void dismissDialog(int)>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask$1: void <init>(org.wordpress.android.ui.posts.PostsActivity$deletePostTask)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHelper: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHeaderTransformer: void setShowProgressBarOnly(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void ensureAttacher()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshingInt(android.view.View,boolean,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean isDestroyed()>",
							"<android.util.Log: int i(java.lang.String,java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void reset(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<android.view.View: boolean removeCallbacks(java.lang.Runnable)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void startRefresh(android.view.View,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.OnRefreshListener: void onRefreshStarted(android.view.View)>",
							"<android.view.View: boolean post(java.lang.Runnable)>",
							"<android.view.View: boolean postDelayed(java.lang.Runnable,long)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void updateHeaderViewPosition(android.view.View)>",
							"<android.app.Activity: android.view.Window getWindow()>",
							"<android.view.View: java.lang.Object getTag()>",
							"<android.view.ViewManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>",
							"<android.app.Activity: android.view.WindowManager getWindowManager()>",
							"<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>",
							"<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>",
							"<android.view.Window: android.view.View getDecorView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: void onRefreshStarted()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean canRefresh(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void resetTouch()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: boolean hasActivity()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Object)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Boolean)>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.xmlrpc.android.ApiHelper$GenericErrorCallback: void onFailure(org.xmlrpc.android.ApiHelper$ErrorType,java.lang.String,java.lang.Throwable)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback: void onSuccess(int)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Object doInBackground(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Boolean doInBackground(java.util.List[])>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.wordpress.android.WordPressDB: void savePosts(java.util.List,int,boolean,boolean)>",
							"<java.util.List: int size()>",
							"<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>",
							"<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>",
							"<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.util.SqlUtils: long boolToSql(boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.wordpress.android.util.MapUtils: int getMapInt(java.util.Map,java.lang.String,int)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.lang.Integer: int parseInt(java.lang.String)>",
							"<java.lang.Object: boolean equals(java.lang.Object)>",
							"<org.json.JSONArray: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: int getTimezoneOffset()>",
							"<java.util.Date: void <init>(long)>",
							"<java.lang.Long: long longValue()>",
							"<android.content.ContentValues: java.lang.Object get(java.lang.String)>",
							"<android.database.sqlite.SQLiteDatabase: void endTransaction()>",
							"<java.util.Date: void <init>()>",
							"<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<org.json.JSONArray: void <init>()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>",
							"<java.lang.Long: java.lang.Long valueOf(long)>",
							"<java.util.Date: long getTime()>",
							"<org.wordpress.android.util.MapUtils: java.util.Date getMapDate(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.String)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<android.content.ContentValues: void <init>()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<android.database.sqlite.SQLiteDatabase: void beginTransaction()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<org.wordpress.android.WordPressDB: void deleteUploadedPosts(int,boolean)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.xmlrpc.android.XMLRPCClientInterface: java.lang.Object call(java.lang.String,java.lang.Object[])>",
							"<org.wordpress.android.models.Blog: java.lang.String getPassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUsername()>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.xmlrpc.android.XMLRPCFactory: org.xmlrpc.android.XMLRPCClientInterface instantiate(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.xmlrpc.android.XMLRPCFactoryDefault: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.xmlrpc.android.XMLRPCFactoryAbstract: org.xmlrpc.android.XMLRPCClientInterface make(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void v(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean access$300(org.wordpress.android.util.AppLog$LogEntryList,org.wordpress.android.util.AppLog$LogEntry)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean addEntry(org.wordpress.android.util.AppLog$LogEntry)>",
							"<java.util.ArrayList: int size()>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void removeFirstEntry()>",
							"<java.util.ArrayList: java.util.Iterator iterator()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$EntrySet$1: java.util.Map$Entry next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt(int)>",
							"<org.apache.commons.lang.math.JVMRandom: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<java.util.Random: int nextInt(int)>",
							"<java.util.Random: int nextInt()>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object next()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: void checkTokenized()>",
							"<java.lang.String: void <clinit>()>",
							"<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.List: int size()>",
							"<java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.Vector: int size()>",
							"<java.util.ArrayList: int size()>",
							"<java.util.LinkedList: int size()>",
							"<java.util.concurrent.CopyOnWriteArrayList: int size()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer: java.util.List tokenize(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.Collections: void <clinit>()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<java.lang.String: int length()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: boolean add(java.lang.Object)>",
							"<java.util.AbstractList: boolean add(java.lang.Object)>",
							"<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<java.util.LinkedList: boolean add(java.lang.Object)>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isEmptyTokenAsNull()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isIgnoreEmptyTokens()>",
							"<org.apache.commons.lang.text.StrTokenizer: int readNextToken(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List)>",
							"<java.lang.Math: int max(int,int)>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<java.util.Arrays: int binarySearch(char[],char)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: int readWithQuotes(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder clear()>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isQuote(char[],int,int,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.String substring(int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int validateRange(int,int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char[],int,int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(int)>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder appendNull()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getQuoteMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void <init>()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: java.lang.Object next()>",
							"<java.util.GregorianCalendar: boolean equals(java.lang.Object)>",
							"<java.util.Calendar: void add(int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.GregorianCalendar: void add(int,int)>",
							"<java.util.Calendar: boolean equals(java.lang.Object)>",
							"<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$KeySet$1: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap$Values$1: java.lang.Object next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: java.lang.Object next()>",
							"<java.lang.Character: void <clinit>()>",
							"<java.lang.Character: void <init>(char)>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: void prepareNext()>",
							"<org.apache.commons.lang.CharRange: boolean access$100(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$200(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$300(org.apache.commons.lang.CharRange)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: java.lang.Object next()>",
							"<java.util.Scanner: java.lang.String next()>",
							"<android.support.v4.util.MapCollections$MapIterator: java.util.Map$Entry next()>",
							"<android.support.v4.util.MapCollections$MapIterator: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: boolean hasNext()>",
							"<java.util.Calendar: boolean before(java.lang.Object)>",
							"<com.google.gson.JsonStreamParser: boolean hasNext()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<com.google.gson.JsonIOException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<java.lang.RuntimeException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonSyntaxException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>",
							"<com.google.gson.stream.JsonReader$2: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: com.google.gson.stream.JsonScope[] values()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.support.v4.util.SparseArrayCompat: android.support.v4.util.SparseArrayCompat clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object cloneReset()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: java.lang.Object clone()>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrTokenizer reset()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.MalformedJsonException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.io.Reader: int read(char[],int,int)>",
							"<com.google.gson.internal.bind.JsonTreeReader$1: int read(char[],int,int)>",
							"<java.lang.AssertionError: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderReader: int read(char[],int,int)>",
							"<java.lang.IndexOutOfBoundsException: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void getChars(int,int,char[],int)>",
							"<java.lang.System: void <clinit>()>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<java.io.BufferedReader: int read(char[],int,int)>",
							"<java.io.InputStreamReader: int read(char[],int,int)>",
							"<java.io.FilterReader: int read(char[],int,int)>",
							"<java.io.PushbackReader: int read(char[],int,int)>",
							"<java.io.StringReader: int read(char[],int,int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.io.EOFException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: void skipToEndOfLine()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean skipTo(java.lang.String)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.String: char charAt(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken objectValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<java.lang.String: char charAt(int)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: char readEscapeCharacter()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.NumberFormatException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: void push(com.google.gson.stream.JsonScope)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken readLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeNumber(char[],int,int)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInObject(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInArray(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: void consumeNonExecutePrefix()>",
							"<com.google.gson.stream.JsonReader: void <clinit>()>",
							"<java.lang.String: char[] toCharArray()>",
							"<com.google.gson.stream.JsonReader$1: void <init>()>",
							"<com.google.gson.internal.JsonReaderInternalAccess: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.util.Scanner: boolean hasNext()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: boolean hasNext()>",
							"<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: boolean hasNext()>",
							"<java.util.ArrayList: boolean remove(java.lang.Object)>",
							"<android.util.Log: int v(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttppassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttpuser()>",
							"<org.wordpress.android.models.Blog: java.net.URI getUri()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUrl()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.net.URI: void <init>(java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void <init>(org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback)>",
							"<org.xmlrpc.android.ApiHelper$HelperAsyncTask: void <init>()>",
							"<android.os.AsyncTask: void <init>()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$7: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<android.view.View: void setVisibility(int)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: int getRemotePostCount()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.models.PostsListPost: boolean isLocalDraft()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: org.wordpress.android.ui.posts.adapters.PostsListAdapter getPostListAdapter()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$4: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: void <init>(android.content.Context,boolean,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnLoadMoreListener,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnPostsLoadedListener)>",
							"<android.widget.BaseAdapter: void <init>()>",
							"<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>",
							"<java.util.ArrayList: void <init>()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$5: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.NetworkUtils: boolean checkConnection(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: boolean isNetworkAvailable(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: android.net.NetworkInfo getActiveNetworkInfo(android.content.Context)>",
							"<android.content.Context: java.lang.Object getSystemService(java.lang.String)>",
							"<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>",
							"<android.net.NetworkInfo: boolean isConnected()>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.content.Context: java.lang.String getString(int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,java.lang.String,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.wordpress.android.WordPressDB: void updateLastBlogId(int)>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences$Editor: boolean commit()>",
							"<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>",
							"<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<org.wordpress.android.WordPressDB: org.wordpress.android.models.Blog instantiateBlogByLocalId(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<android.database.Cursor: void close()>",
							"<org.wordpress.android.models.Blog: void setHidden(boolean)>",
							"<org.wordpress.android.models.Blog: void setAdmin(boolean)>",
							"<org.wordpress.android.models.Blog: void setBlogOptions(java.lang.String)>",
							"<org.wordpress.android.models.Blog: org.json.JSONObject getBlogOptionsJSONObject()>",
							"<org.wordpress.android.models.Blog: java.lang.String getBlogOptions()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.wordpress.android.util.CrashlyticsUtils: void logException(java.lang.Throwable,org.wordpress.android.util.CrashlyticsUtils$ExceptionType,org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<java.lang.Enum: java.lang.String name()>",
							"<com.crashlytics.android.Crashlytics: void setString(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: int size()>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.v: void <init>()>",
							"<com.crashlytics.android.internal.m: void <clinit>()>",
							"<com.crashlytics.android.internal.n: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.o: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.B: void <init>(com.crashlytics.android.internal.m)>",
							"<android.os.Looper: android.os.Looper getMainLooper()>",
							"<android.os.Handler: void <init>(android.os.Looper)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String)>",
							"<com.crashlytics.android.internal.i: void <clinit>()>",
							"<com.crashlytics.android.internal.j: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String,com.crashlytics.android.internal.i)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(java.lang.String)>",
							"<java.util.HashMap: void <init>()>",
							"<com.crashlytics.android.internal.d: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<com.crashlytics.android.internal.c: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.v: int g()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>",
							"<com.crashlytics.android.internal.r: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<com.crashlytics.android.internal.ab: void <clinit>()>",
							"<com.crashlytics.android.internal.ac: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.ab: boolean f(android.content.Context)>",
							"<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.Crashlytics: void <init>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.u: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.System: long currentTimeMillis()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.u a(java.lang.Class)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: java.lang.String c(java.lang.String)>",
							"<java.lang.String: java.lang.String trim()>",
							"<java.lang.String: java.lang.String substring(int,int)>",
							"<java.lang.String: int length()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: void logException(java.lang.Throwable)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.v: void a(java.lang.Thread,java.lang.Throwable)>",
							"<java.util.Date: void <init>()>",
							"<com.crashlytics.android.v: java.util.concurrent.Future a(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.AbstractExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.G: void <init>(com.crashlytics.android.v,java.lang.Runnable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.P: void <init>(com.crashlytics.android.v,java.util.Date,java.lang.Thread,java.lang.Throwable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.A: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String,boolean)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int println(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<java.lang.Thread: java.lang.Thread currentThread()>",
							"<org.json.JSONObject: void <init>(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.json.JSONObject: java.lang.String getString(java.lang.String)>",
							"<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.json.JSONObject: boolean has(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHomeURL(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setScaledImageWidth(int)>",
							"<org.wordpress.android.models.Blog: void setScaledImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setPostFormats(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setWpVersion(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_key(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_password(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_username(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcomFlag(boolean)>",
							"<org.wordpress.android.models.Blog: void setLocation(boolean)>",
							"<org.wordpress.android.models.Blog: void setRemoteBlogId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidthId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidth(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setFullSizeImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setFeaturedImageCapable(boolean)>",
							"<android.database.Cursor: int getInt(int)>",
							"<org.wordpress.android.models.Blog: void setImagePlacement(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttppassword(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttpuser(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setPassword(java.lang.String)>",
							"<org.wordpress.android.WordPressDB: java.lang.String decryptPassword(java.lang.String)>",
							"<java.lang.String: byte[] getBytes(java.lang.String)>",
							"<java.lang.String: void <init>(byte[])>",
							"<javax.crypto.Cipher: byte[] doFinal(byte[])>",
							"<javax.crypto.Cipher: void init(int,java.security.Key)>",
							"<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
							"<android.util.Base64: byte[] decode(java.lang.String,int)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>",
							"<javax.crypto.spec.DESKeySpec: void <init>(byte[])>",
							"<org.wordpress.android.models.Blog: void setUsername(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setBlogName(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setUrl(java.lang.String)>",
							"<android.database.Cursor: int getColumnIndex(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setLocalTableBlogId(int)>",
							"<org.wordpress.android.models.Blog: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.util.List: int size()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPressDB: java.util.List getAccountsBy(java.lang.String,java.lang.String[])>",
							"<java.util.Vector: void <init>()>",
							"<java.util.Collections: void sort(java.util.List,java.util.Comparator)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: boolean moveToNext()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.util.HashMap: void <init>()>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: int getInt(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] addAll(java.lang.Object[],java.lang.Object[])>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] clone(java.lang.Object[])>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.Class: java.lang.String getName()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>",
							"<java.lang.Class: java.lang.Class getComponentType()>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlogToLastActive()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.WordPressDB: int getLastBlogId()>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences: int getInt(java.lang.String,int)>",
							"<org.wordpress.android.WordPressDB: boolean isDotComAccountVisible(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<org.wordpress.android.util.SqlUtils: boolean boolForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: boolean sqlToBool(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: org.wordpress.android.ui.posts.PostsListFragment access$100(org.wordpress.android.ui.posts.PostsActivity)>",
							"<org.wordpress.android.WordPressDB: boolean deletePost(org.wordpress.android.models.Post)>",
							"<org.wordpress.android.models.Post: int getLocalTableBlogId()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.models.Post: long getLocalTablePostId()>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void checkForLocalChanges(boolean)>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void popPostDetail()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getHTMLStringStackTrace(java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getStringStackTrace(java.lang.Throwable)>",
							"<java.io.StringWriter: void <init>()>",
							"<org.apache.commons.lang.exception.NestableError: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.NotImplementedException: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: void printStackTrace(java.io.PrintWriter)>",
							"<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableException: void printStackTrace(java.io.PrintWriter)>",
							"<java.io.PrintWriter: void <init>(java.io.Writer)>",
							"<java.io.StringWriter: java.lang.String toString()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<android.support.v4.app.FragmentManager: void popBackStack()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$5: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$4: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.WordPressDB: boolean findLocalChanges(int,boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.wordpress.android.ui.posts.PostsActivity: void attemptToSelectPost()>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setShouldSelectFirstPost(boolean)>",
							"<android.support.v4.app.Fragment: boolean isInLayout()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Object)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"android.os.AsyncTask.onPostExecute",
							"android.os.AsyncTask$Status.<clinit>",
							"android.os.AsyncTask$Status.<clinit>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<android.os.AsyncTask: void <init>()>",
							"android.os.AsyncTask$Status.<init>"
						]
					}
				]
			},
			{
				"Candidate Name":"org.wordpress.android.ui.posts.PostsActivity.popPostDetail",
				"Candidate Score":94,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.AsyncTask.finish",
							"android.os.AsyncTask.isCancelled",
							"android.os.AsyncTask.onCancelled",
							"android.os.AsyncTask.onCancelled",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"<android.app.Activity: void dismissDialog(int)>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask$1: void <init>(org.wordpress.android.ui.posts.PostsActivity$deletePostTask)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHelper: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHeaderTransformer: void setShowProgressBarOnly(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void ensureAttacher()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshingInt(android.view.View,boolean,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean isDestroyed()>",
							"<android.util.Log: int i(java.lang.String,java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void reset(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<android.view.View: boolean removeCallbacks(java.lang.Runnable)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void startRefresh(android.view.View,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.OnRefreshListener: void onRefreshStarted(android.view.View)>",
							"<android.view.View: boolean post(java.lang.Runnable)>",
							"<android.view.View: boolean postDelayed(java.lang.Runnable,long)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void updateHeaderViewPosition(android.view.View)>",
							"<android.app.Activity: android.view.Window getWindow()>",
							"<android.view.View: java.lang.Object getTag()>",
							"<android.view.ViewManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>",
							"<android.app.Activity: android.view.WindowManager getWindowManager()>",
							"<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>",
							"<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>",
							"<android.view.Window: android.view.View getDecorView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: void onRefreshStarted()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean canRefresh(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void resetTouch()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: boolean hasActivity()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Object)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Boolean)>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.xmlrpc.android.ApiHelper$GenericErrorCallback: void onFailure(org.xmlrpc.android.ApiHelper$ErrorType,java.lang.String,java.lang.Throwable)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback: void onSuccess(int)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Object doInBackground(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Boolean doInBackground(java.util.List[])>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.wordpress.android.WordPressDB: void savePosts(java.util.List,int,boolean,boolean)>",
							"<java.util.List: int size()>",
							"<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>",
							"<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>",
							"<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.util.SqlUtils: long boolToSql(boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.wordpress.android.util.MapUtils: int getMapInt(java.util.Map,java.lang.String,int)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.lang.Integer: int parseInt(java.lang.String)>",
							"<java.lang.Object: boolean equals(java.lang.Object)>",
							"<org.json.JSONArray: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: int getTimezoneOffset()>",
							"<java.util.Date: void <init>(long)>",
							"<java.lang.Long: long longValue()>",
							"<android.content.ContentValues: java.lang.Object get(java.lang.String)>",
							"<android.database.sqlite.SQLiteDatabase: void endTransaction()>",
							"<java.util.Date: void <init>()>",
							"<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<org.json.JSONArray: void <init>()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>",
							"<java.lang.Long: java.lang.Long valueOf(long)>",
							"<java.util.Date: long getTime()>",
							"<org.wordpress.android.util.MapUtils: java.util.Date getMapDate(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.String)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<android.content.ContentValues: void <init>()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<android.database.sqlite.SQLiteDatabase: void beginTransaction()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<org.wordpress.android.WordPressDB: void deleteUploadedPosts(int,boolean)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.xmlrpc.android.XMLRPCClientInterface: java.lang.Object call(java.lang.String,java.lang.Object[])>",
							"<org.wordpress.android.models.Blog: java.lang.String getPassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUsername()>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.xmlrpc.android.XMLRPCFactory: org.xmlrpc.android.XMLRPCClientInterface instantiate(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.xmlrpc.android.XMLRPCFactoryDefault: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.xmlrpc.android.XMLRPCFactoryAbstract: org.xmlrpc.android.XMLRPCClientInterface make(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void v(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean access$300(org.wordpress.android.util.AppLog$LogEntryList,org.wordpress.android.util.AppLog$LogEntry)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean addEntry(org.wordpress.android.util.AppLog$LogEntry)>",
							"<java.util.ArrayList: int size()>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void removeFirstEntry()>",
							"<java.util.ArrayList: java.util.Iterator iterator()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$EntrySet$1: java.util.Map$Entry next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt(int)>",
							"<org.apache.commons.lang.math.JVMRandom: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<java.util.Random: int nextInt(int)>",
							"<java.util.Random: int nextInt()>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object next()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: void checkTokenized()>",
							"<java.lang.String: void <clinit>()>",
							"<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.List: int size()>",
							"<java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.Vector: int size()>",
							"<java.util.ArrayList: int size()>",
							"<java.util.LinkedList: int size()>",
							"<java.util.concurrent.CopyOnWriteArrayList: int size()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer: java.util.List tokenize(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.Collections: void <clinit>()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<java.lang.String: int length()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: boolean add(java.lang.Object)>",
							"<java.util.AbstractList: boolean add(java.lang.Object)>",
							"<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<java.util.LinkedList: boolean add(java.lang.Object)>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isEmptyTokenAsNull()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isIgnoreEmptyTokens()>",
							"<org.apache.commons.lang.text.StrTokenizer: int readNextToken(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List)>",
							"<java.lang.Math: int max(int,int)>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<java.util.Arrays: int binarySearch(char[],char)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: int readWithQuotes(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder clear()>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isQuote(char[],int,int,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.String substring(int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int validateRange(int,int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char[],int,int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(int)>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder appendNull()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getQuoteMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void <init>()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: java.lang.Object next()>",
							"<java.util.GregorianCalendar: boolean equals(java.lang.Object)>",
							"<java.util.Calendar: void add(int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.GregorianCalendar: void add(int,int)>",
							"<java.util.Calendar: boolean equals(java.lang.Object)>",
							"<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$KeySet$1: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap$Values$1: java.lang.Object next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: java.lang.Object next()>",
							"<java.lang.Character: void <clinit>()>",
							"<java.lang.Character: void <init>(char)>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: void prepareNext()>",
							"<org.apache.commons.lang.CharRange: boolean access$100(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$200(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$300(org.apache.commons.lang.CharRange)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: java.lang.Object next()>",
							"<java.util.Scanner: java.lang.String next()>",
							"<android.support.v4.util.MapCollections$MapIterator: java.util.Map$Entry next()>",
							"<android.support.v4.util.MapCollections$MapIterator: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: boolean hasNext()>",
							"<java.util.Calendar: boolean before(java.lang.Object)>",
							"<com.google.gson.JsonStreamParser: boolean hasNext()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<com.google.gson.JsonIOException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<java.lang.RuntimeException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonSyntaxException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>",
							"<com.google.gson.stream.JsonReader$2: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: com.google.gson.stream.JsonScope[] values()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.support.v4.util.SparseArrayCompat: android.support.v4.util.SparseArrayCompat clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object cloneReset()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: java.lang.Object clone()>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrTokenizer reset()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.MalformedJsonException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.io.Reader: int read(char[],int,int)>",
							"<com.google.gson.internal.bind.JsonTreeReader$1: int read(char[],int,int)>",
							"<java.lang.AssertionError: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderReader: int read(char[],int,int)>",
							"<java.lang.IndexOutOfBoundsException: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void getChars(int,int,char[],int)>",
							"<java.lang.System: void <clinit>()>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<java.io.BufferedReader: int read(char[],int,int)>",
							"<java.io.InputStreamReader: int read(char[],int,int)>",
							"<java.io.FilterReader: int read(char[],int,int)>",
							"<java.io.PushbackReader: int read(char[],int,int)>",
							"<java.io.StringReader: int read(char[],int,int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.io.EOFException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: void skipToEndOfLine()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean skipTo(java.lang.String)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.String: char charAt(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken objectValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<java.lang.String: char charAt(int)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: char readEscapeCharacter()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.NumberFormatException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: void push(com.google.gson.stream.JsonScope)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken readLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeNumber(char[],int,int)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInObject(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInArray(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: void consumeNonExecutePrefix()>",
							"<com.google.gson.stream.JsonReader: void <clinit>()>",
							"<java.lang.String: char[] toCharArray()>",
							"<com.google.gson.stream.JsonReader$1: void <init>()>",
							"<com.google.gson.internal.JsonReaderInternalAccess: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.util.Scanner: boolean hasNext()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: boolean hasNext()>",
							"<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: boolean hasNext()>",
							"<java.util.ArrayList: boolean remove(java.lang.Object)>",
							"<android.util.Log: int v(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttppassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttpuser()>",
							"<org.wordpress.android.models.Blog: java.net.URI getUri()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUrl()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.net.URI: void <init>(java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void <init>(org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback)>",
							"<org.xmlrpc.android.ApiHelper$HelperAsyncTask: void <init>()>",
							"<android.os.AsyncTask: void <init>()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$7: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<android.view.View: void setVisibility(int)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: int getRemotePostCount()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.models.PostsListPost: boolean isLocalDraft()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: org.wordpress.android.ui.posts.adapters.PostsListAdapter getPostListAdapter()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$4: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: void <init>(android.content.Context,boolean,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnLoadMoreListener,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnPostsLoadedListener)>",
							"<android.widget.BaseAdapter: void <init>()>",
							"<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>",
							"<java.util.ArrayList: void <init>()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$5: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.NetworkUtils: boolean checkConnection(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: boolean isNetworkAvailable(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: android.net.NetworkInfo getActiveNetworkInfo(android.content.Context)>",
							"<android.content.Context: java.lang.Object getSystemService(java.lang.String)>",
							"<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>",
							"<android.net.NetworkInfo: boolean isConnected()>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.content.Context: java.lang.String getString(int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,java.lang.String,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.wordpress.android.WordPressDB: void updateLastBlogId(int)>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences$Editor: boolean commit()>",
							"<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>",
							"<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<org.wordpress.android.WordPressDB: org.wordpress.android.models.Blog instantiateBlogByLocalId(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<android.database.Cursor: void close()>",
							"<org.wordpress.android.models.Blog: void setHidden(boolean)>",
							"<org.wordpress.android.models.Blog: void setAdmin(boolean)>",
							"<org.wordpress.android.models.Blog: void setBlogOptions(java.lang.String)>",
							"<org.wordpress.android.models.Blog: org.json.JSONObject getBlogOptionsJSONObject()>",
							"<org.wordpress.android.models.Blog: java.lang.String getBlogOptions()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.wordpress.android.util.CrashlyticsUtils: void logException(java.lang.Throwable,org.wordpress.android.util.CrashlyticsUtils$ExceptionType,org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<java.lang.Enum: java.lang.String name()>",
							"<com.crashlytics.android.Crashlytics: void setString(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: int size()>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.v: void <init>()>",
							"<com.crashlytics.android.internal.m: void <clinit>()>",
							"<com.crashlytics.android.internal.n: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.o: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.B: void <init>(com.crashlytics.android.internal.m)>",
							"<android.os.Looper: android.os.Looper getMainLooper()>",
							"<android.os.Handler: void <init>(android.os.Looper)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String)>",
							"<com.crashlytics.android.internal.i: void <clinit>()>",
							"<com.crashlytics.android.internal.j: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String,com.crashlytics.android.internal.i)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(java.lang.String)>",
							"<java.util.HashMap: void <init>()>",
							"<com.crashlytics.android.internal.d: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<com.crashlytics.android.internal.c: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.v: int g()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>",
							"<com.crashlytics.android.internal.r: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<com.crashlytics.android.internal.ab: void <clinit>()>",
							"<com.crashlytics.android.internal.ac: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.ab: boolean f(android.content.Context)>",
							"<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.Crashlytics: void <init>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.u: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.System: long currentTimeMillis()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.u a(java.lang.Class)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: java.lang.String c(java.lang.String)>",
							"<java.lang.String: java.lang.String trim()>",
							"<java.lang.String: java.lang.String substring(int,int)>",
							"<java.lang.String: int length()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: void logException(java.lang.Throwable)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.v: void a(java.lang.Thread,java.lang.Throwable)>",
							"<java.util.Date: void <init>()>",
							"<com.crashlytics.android.v: java.util.concurrent.Future a(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.AbstractExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.G: void <init>(com.crashlytics.android.v,java.lang.Runnable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.P: void <init>(com.crashlytics.android.v,java.util.Date,java.lang.Thread,java.lang.Throwable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.A: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String,boolean)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int println(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<java.lang.Thread: java.lang.Thread currentThread()>",
							"<org.json.JSONObject: void <init>(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.json.JSONObject: java.lang.String getString(java.lang.String)>",
							"<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.json.JSONObject: boolean has(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHomeURL(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setScaledImageWidth(int)>",
							"<org.wordpress.android.models.Blog: void setScaledImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setPostFormats(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setWpVersion(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_key(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_password(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_username(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcomFlag(boolean)>",
							"<org.wordpress.android.models.Blog: void setLocation(boolean)>",
							"<org.wordpress.android.models.Blog: void setRemoteBlogId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidthId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidth(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setFullSizeImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setFeaturedImageCapable(boolean)>",
							"<android.database.Cursor: int getInt(int)>",
							"<org.wordpress.android.models.Blog: void setImagePlacement(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttppassword(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttpuser(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setPassword(java.lang.String)>",
							"<org.wordpress.android.WordPressDB: java.lang.String decryptPassword(java.lang.String)>",
							"<java.lang.String: byte[] getBytes(java.lang.String)>",
							"<java.lang.String: void <init>(byte[])>",
							"<javax.crypto.Cipher: byte[] doFinal(byte[])>",
							"<javax.crypto.Cipher: void init(int,java.security.Key)>",
							"<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
							"<android.util.Base64: byte[] decode(java.lang.String,int)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>",
							"<javax.crypto.spec.DESKeySpec: void <init>(byte[])>",
							"<org.wordpress.android.models.Blog: void setUsername(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setBlogName(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setUrl(java.lang.String)>",
							"<android.database.Cursor: int getColumnIndex(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setLocalTableBlogId(int)>",
							"<org.wordpress.android.models.Blog: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.util.List: int size()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPressDB: java.util.List getAccountsBy(java.lang.String,java.lang.String[])>",
							"<java.util.Vector: void <init>()>",
							"<java.util.Collections: void sort(java.util.List,java.util.Comparator)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: boolean moveToNext()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.util.HashMap: void <init>()>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: int getInt(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] addAll(java.lang.Object[],java.lang.Object[])>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] clone(java.lang.Object[])>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.Class: java.lang.String getName()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>",
							"<java.lang.Class: java.lang.Class getComponentType()>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlogToLastActive()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.WordPressDB: int getLastBlogId()>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences: int getInt(java.lang.String,int)>",
							"<org.wordpress.android.WordPressDB: boolean isDotComAccountVisible(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<org.wordpress.android.util.SqlUtils: boolean boolForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: boolean sqlToBool(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: org.wordpress.android.ui.posts.PostsListFragment access$100(org.wordpress.android.ui.posts.PostsActivity)>",
							"<org.wordpress.android.WordPressDB: boolean deletePost(org.wordpress.android.models.Post)>",
							"<org.wordpress.android.models.Post: int getLocalTableBlogId()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.models.Post: long getLocalTablePostId()>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void checkForLocalChanges(boolean)>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void popPostDetail()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getHTMLStringStackTrace(java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getStringStackTrace(java.lang.Throwable)>",
							"<java.io.StringWriter: void <init>()>",
							"<org.apache.commons.lang.exception.NestableError: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.NotImplementedException: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: void printStackTrace(java.io.PrintWriter)>",
							"<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableException: void printStackTrace(java.io.PrintWriter)>",
							"<java.io.PrintWriter: void <init>(java.io.Writer)>",
							"<java.io.StringWriter: java.lang.String toString()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<android.support.v4.app.FragmentManager: void popBackStack()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$5: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$4: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.WordPressDB: boolean findLocalChanges(int,boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.wordpress.android.ui.posts.PostsActivity: void attemptToSelectPost()>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setShouldSelectFirstPost(boolean)>",
							"<android.support.v4.app.Fragment: boolean isInLayout()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Object)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"android.os.AsyncTask.onPostExecute",
							"android.os.AsyncTask$Status.<clinit>",
							"android.os.AsyncTask$Status.<clinit>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<android.os.AsyncTask: void <init>()>",
							"android.os.AsyncTask$Status.<init>"
						]
					}
				]
			},
			{
				"Candidate Name":"org.wordpress.android.ui.posts.PostsListFragment.requestPosts",
				"Candidate Score":91,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.AsyncTask.finish",
							"android.os.AsyncTask.isCancelled",
							"android.os.AsyncTask.onCancelled",
							"android.os.AsyncTask.onCancelled",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"<android.app.Activity: void dismissDialog(int)>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask$1: void <init>(org.wordpress.android.ui.posts.PostsActivity$deletePostTask)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHelper: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHeaderTransformer: void setShowProgressBarOnly(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void ensureAttacher()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshingInt(android.view.View,boolean,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean isDestroyed()>",
							"<android.util.Log: int i(java.lang.String,java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void reset(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<android.view.View: boolean removeCallbacks(java.lang.Runnable)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void startRefresh(android.view.View,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.OnRefreshListener: void onRefreshStarted(android.view.View)>",
							"<android.view.View: boolean post(java.lang.Runnable)>",
							"<android.view.View: boolean postDelayed(java.lang.Runnable,long)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void updateHeaderViewPosition(android.view.View)>",
							"<android.app.Activity: android.view.Window getWindow()>",
							"<android.view.View: java.lang.Object getTag()>",
							"<android.view.ViewManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>",
							"<android.app.Activity: android.view.WindowManager getWindowManager()>",
							"<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>",
							"<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>",
							"<android.view.Window: android.view.View getDecorView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: void onRefreshStarted()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean canRefresh(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void resetTouch()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: boolean hasActivity()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Object)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Boolean)>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.xmlrpc.android.ApiHelper$GenericErrorCallback: void onFailure(org.xmlrpc.android.ApiHelper$ErrorType,java.lang.String,java.lang.Throwable)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback: void onSuccess(int)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Object doInBackground(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Boolean doInBackground(java.util.List[])>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.wordpress.android.WordPressDB: void savePosts(java.util.List,int,boolean,boolean)>",
							"<java.util.List: int size()>",
							"<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>",
							"<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>",
							"<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.util.SqlUtils: long boolToSql(boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.wordpress.android.util.MapUtils: int getMapInt(java.util.Map,java.lang.String,int)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.lang.Integer: int parseInt(java.lang.String)>",
							"<java.lang.Object: boolean equals(java.lang.Object)>",
							"<org.json.JSONArray: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: int getTimezoneOffset()>",
							"<java.util.Date: void <init>(long)>",
							"<java.lang.Long: long longValue()>",
							"<android.content.ContentValues: java.lang.Object get(java.lang.String)>",
							"<android.database.sqlite.SQLiteDatabase: void endTransaction()>",
							"<java.util.Date: void <init>()>",
							"<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<org.json.JSONArray: void <init>()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>",
							"<java.lang.Long: java.lang.Long valueOf(long)>",
							"<java.util.Date: long getTime()>",
							"<org.wordpress.android.util.MapUtils: java.util.Date getMapDate(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.String)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<android.content.ContentValues: void <init>()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<android.database.sqlite.SQLiteDatabase: void beginTransaction()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<org.wordpress.android.WordPressDB: void deleteUploadedPosts(int,boolean)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.xmlrpc.android.XMLRPCClientInterface: java.lang.Object call(java.lang.String,java.lang.Object[])>",
							"<org.wordpress.android.models.Blog: java.lang.String getPassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUsername()>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.xmlrpc.android.XMLRPCFactory: org.xmlrpc.android.XMLRPCClientInterface instantiate(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.xmlrpc.android.XMLRPCFactoryDefault: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.xmlrpc.android.XMLRPCFactoryAbstract: org.xmlrpc.android.XMLRPCClientInterface make(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void v(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean access$300(org.wordpress.android.util.AppLog$LogEntryList,org.wordpress.android.util.AppLog$LogEntry)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean addEntry(org.wordpress.android.util.AppLog$LogEntry)>",
							"<java.util.ArrayList: int size()>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void removeFirstEntry()>",
							"<java.util.ArrayList: java.util.Iterator iterator()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$EntrySet$1: java.util.Map$Entry next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt(int)>",
							"<org.apache.commons.lang.math.JVMRandom: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<java.util.Random: int nextInt(int)>",
							"<java.util.Random: int nextInt()>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object next()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: void checkTokenized()>",
							"<java.lang.String: void <clinit>()>",
							"<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.List: int size()>",
							"<java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.Vector: int size()>",
							"<java.util.ArrayList: int size()>",
							"<java.util.LinkedList: int size()>",
							"<java.util.concurrent.CopyOnWriteArrayList: int size()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer: java.util.List tokenize(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.Collections: void <clinit>()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<java.lang.String: int length()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: boolean add(java.lang.Object)>",
							"<java.util.AbstractList: boolean add(java.lang.Object)>",
							"<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<java.util.LinkedList: boolean add(java.lang.Object)>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isEmptyTokenAsNull()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isIgnoreEmptyTokens()>",
							"<org.apache.commons.lang.text.StrTokenizer: int readNextToken(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List)>",
							"<java.lang.Math: int max(int,int)>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<java.util.Arrays: int binarySearch(char[],char)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: int readWithQuotes(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder clear()>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isQuote(char[],int,int,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.String substring(int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int validateRange(int,int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char[],int,int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(int)>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder appendNull()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getQuoteMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void <init>()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: java.lang.Object next()>",
							"<java.util.GregorianCalendar: boolean equals(java.lang.Object)>",
							"<java.util.Calendar: void add(int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.GregorianCalendar: void add(int,int)>",
							"<java.util.Calendar: boolean equals(java.lang.Object)>",
							"<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$KeySet$1: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap$Values$1: java.lang.Object next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: java.lang.Object next()>",
							"<java.lang.Character: void <clinit>()>",
							"<java.lang.Character: void <init>(char)>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: void prepareNext()>",
							"<org.apache.commons.lang.CharRange: boolean access$100(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$200(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$300(org.apache.commons.lang.CharRange)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: java.lang.Object next()>",
							"<java.util.Scanner: java.lang.String next()>",
							"<android.support.v4.util.MapCollections$MapIterator: java.util.Map$Entry next()>",
							"<android.support.v4.util.MapCollections$MapIterator: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: boolean hasNext()>",
							"<java.util.Calendar: boolean before(java.lang.Object)>",
							"<com.google.gson.JsonStreamParser: boolean hasNext()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<com.google.gson.JsonIOException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<java.lang.RuntimeException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonSyntaxException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>",
							"<com.google.gson.stream.JsonReader$2: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: com.google.gson.stream.JsonScope[] values()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.support.v4.util.SparseArrayCompat: android.support.v4.util.SparseArrayCompat clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object cloneReset()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: java.lang.Object clone()>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrTokenizer reset()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.MalformedJsonException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.io.Reader: int read(char[],int,int)>",
							"<com.google.gson.internal.bind.JsonTreeReader$1: int read(char[],int,int)>",
							"<java.lang.AssertionError: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderReader: int read(char[],int,int)>",
							"<java.lang.IndexOutOfBoundsException: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void getChars(int,int,char[],int)>",
							"<java.lang.System: void <clinit>()>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<java.io.BufferedReader: int read(char[],int,int)>",
							"<java.io.InputStreamReader: int read(char[],int,int)>",
							"<java.io.FilterReader: int read(char[],int,int)>",
							"<java.io.PushbackReader: int read(char[],int,int)>",
							"<java.io.StringReader: int read(char[],int,int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.io.EOFException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: void skipToEndOfLine()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean skipTo(java.lang.String)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.String: char charAt(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken objectValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<java.lang.String: char charAt(int)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: char readEscapeCharacter()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.NumberFormatException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: void push(com.google.gson.stream.JsonScope)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken readLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeNumber(char[],int,int)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInObject(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInArray(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: void consumeNonExecutePrefix()>",
							"<com.google.gson.stream.JsonReader: void <clinit>()>",
							"<java.lang.String: char[] toCharArray()>",
							"<com.google.gson.stream.JsonReader$1: void <init>()>",
							"<com.google.gson.internal.JsonReaderInternalAccess: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.util.Scanner: boolean hasNext()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: boolean hasNext()>",
							"<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: boolean hasNext()>",
							"<java.util.ArrayList: boolean remove(java.lang.Object)>",
							"<android.util.Log: int v(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttppassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttpuser()>",
							"<org.wordpress.android.models.Blog: java.net.URI getUri()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUrl()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.net.URI: void <init>(java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void <init>(org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback)>",
							"<org.xmlrpc.android.ApiHelper$HelperAsyncTask: void <init>()>",
							"<android.os.AsyncTask: void <init>()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$7: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<android.view.View: void setVisibility(int)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: int getRemotePostCount()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.models.PostsListPost: boolean isLocalDraft()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: org.wordpress.android.ui.posts.adapters.PostsListAdapter getPostListAdapter()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$4: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: void <init>(android.content.Context,boolean,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnLoadMoreListener,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnPostsLoadedListener)>",
							"<android.widget.BaseAdapter: void <init>()>",
							"<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>",
							"<java.util.ArrayList: void <init>()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$5: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.NetworkUtils: boolean checkConnection(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: boolean isNetworkAvailable(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: android.net.NetworkInfo getActiveNetworkInfo(android.content.Context)>",
							"<android.content.Context: java.lang.Object getSystemService(java.lang.String)>",
							"<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>",
							"<android.net.NetworkInfo: boolean isConnected()>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.content.Context: java.lang.String getString(int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,java.lang.String,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.wordpress.android.WordPressDB: void updateLastBlogId(int)>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences$Editor: boolean commit()>",
							"<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>",
							"<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<org.wordpress.android.WordPressDB: org.wordpress.android.models.Blog instantiateBlogByLocalId(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<android.database.Cursor: void close()>",
							"<org.wordpress.android.models.Blog: void setHidden(boolean)>",
							"<org.wordpress.android.models.Blog: void setAdmin(boolean)>",
							"<org.wordpress.android.models.Blog: void setBlogOptions(java.lang.String)>",
							"<org.wordpress.android.models.Blog: org.json.JSONObject getBlogOptionsJSONObject()>",
							"<org.wordpress.android.models.Blog: java.lang.String getBlogOptions()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.wordpress.android.util.CrashlyticsUtils: void logException(java.lang.Throwable,org.wordpress.android.util.CrashlyticsUtils$ExceptionType,org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<java.lang.Enum: java.lang.String name()>",
							"<com.crashlytics.android.Crashlytics: void setString(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: int size()>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.v: void <init>()>",
							"<com.crashlytics.android.internal.m: void <clinit>()>",
							"<com.crashlytics.android.internal.n: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.o: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.B: void <init>(com.crashlytics.android.internal.m)>",
							"<android.os.Looper: android.os.Looper getMainLooper()>",
							"<android.os.Handler: void <init>(android.os.Looper)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String)>",
							"<com.crashlytics.android.internal.i: void <clinit>()>",
							"<com.crashlytics.android.internal.j: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String,com.crashlytics.android.internal.i)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(java.lang.String)>",
							"<java.util.HashMap: void <init>()>",
							"<com.crashlytics.android.internal.d: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<com.crashlytics.android.internal.c: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.v: int g()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>",
							"<com.crashlytics.android.internal.r: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<com.crashlytics.android.internal.ab: void <clinit>()>",
							"<com.crashlytics.android.internal.ac: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.ab: boolean f(android.content.Context)>",
							"<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.Crashlytics: void <init>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.u: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.System: long currentTimeMillis()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.u a(java.lang.Class)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: java.lang.String c(java.lang.String)>",
							"<java.lang.String: java.lang.String trim()>",
							"<java.lang.String: java.lang.String substring(int,int)>",
							"<java.lang.String: int length()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: void logException(java.lang.Throwable)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.v: void a(java.lang.Thread,java.lang.Throwable)>",
							"<java.util.Date: void <init>()>",
							"<com.crashlytics.android.v: java.util.concurrent.Future a(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.AbstractExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.G: void <init>(com.crashlytics.android.v,java.lang.Runnable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.P: void <init>(com.crashlytics.android.v,java.util.Date,java.lang.Thread,java.lang.Throwable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.A: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String,boolean)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int println(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<java.lang.Thread: java.lang.Thread currentThread()>",
							"<org.json.JSONObject: void <init>(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.json.JSONObject: java.lang.String getString(java.lang.String)>",
							"<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.json.JSONObject: boolean has(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHomeURL(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setScaledImageWidth(int)>",
							"<org.wordpress.android.models.Blog: void setScaledImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setPostFormats(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setWpVersion(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_key(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_password(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_username(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcomFlag(boolean)>",
							"<org.wordpress.android.models.Blog: void setLocation(boolean)>",
							"<org.wordpress.android.models.Blog: void setRemoteBlogId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidthId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidth(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setFullSizeImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setFeaturedImageCapable(boolean)>",
							"<android.database.Cursor: int getInt(int)>",
							"<org.wordpress.android.models.Blog: void setImagePlacement(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttppassword(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttpuser(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setPassword(java.lang.String)>",
							"<org.wordpress.android.WordPressDB: java.lang.String decryptPassword(java.lang.String)>",
							"<java.lang.String: byte[] getBytes(java.lang.String)>",
							"<java.lang.String: void <init>(byte[])>",
							"<javax.crypto.Cipher: byte[] doFinal(byte[])>",
							"<javax.crypto.Cipher: void init(int,java.security.Key)>",
							"<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
							"<android.util.Base64: byte[] decode(java.lang.String,int)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>",
							"<javax.crypto.spec.DESKeySpec: void <init>(byte[])>",
							"<org.wordpress.android.models.Blog: void setUsername(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setBlogName(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setUrl(java.lang.String)>",
							"<android.database.Cursor: int getColumnIndex(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setLocalTableBlogId(int)>",
							"<org.wordpress.android.models.Blog: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.util.List: int size()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPressDB: java.util.List getAccountsBy(java.lang.String,java.lang.String[])>",
							"<java.util.Vector: void <init>()>",
							"<java.util.Collections: void sort(java.util.List,java.util.Comparator)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: boolean moveToNext()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.util.HashMap: void <init>()>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: int getInt(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] addAll(java.lang.Object[],java.lang.Object[])>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] clone(java.lang.Object[])>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.Class: java.lang.String getName()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>",
							"<java.lang.Class: java.lang.Class getComponentType()>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlogToLastActive()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.WordPressDB: int getLastBlogId()>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences: int getInt(java.lang.String,int)>",
							"<org.wordpress.android.WordPressDB: boolean isDotComAccountVisible(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<org.wordpress.android.util.SqlUtils: boolean boolForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: boolean sqlToBool(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: org.wordpress.android.ui.posts.PostsListFragment access$100(org.wordpress.android.ui.posts.PostsActivity)>",
							"<org.wordpress.android.WordPressDB: boolean deletePost(org.wordpress.android.models.Post)>",
							"<org.wordpress.android.models.Post: int getLocalTableBlogId()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.models.Post: long getLocalTablePostId()>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void checkForLocalChanges(boolean)>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void popPostDetail()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getHTMLStringStackTrace(java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getStringStackTrace(java.lang.Throwable)>",
							"<java.io.StringWriter: void <init>()>",
							"<org.apache.commons.lang.exception.NestableError: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.NotImplementedException: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: void printStackTrace(java.io.PrintWriter)>",
							"<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableException: void printStackTrace(java.io.PrintWriter)>",
							"<java.io.PrintWriter: void <init>(java.io.Writer)>",
							"<java.io.StringWriter: java.lang.String toString()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<android.support.v4.app.FragmentManager: void popBackStack()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$5: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$4: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.WordPressDB: boolean findLocalChanges(int,boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.wordpress.android.ui.posts.PostsActivity: void attemptToSelectPost()>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setShouldSelectFirstPost(boolean)>",
							"<android.support.v4.app.Fragment: boolean isInLayout()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Object)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"android.os.AsyncTask.onPostExecute",
							"android.os.AsyncTask$Status.<clinit>",
							"android.os.AsyncTask$Status.<clinit>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<android.os.AsyncTask: void <init>()>",
							"android.os.AsyncTask$Status.<init>"
						]
					},
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.AsyncTask.finish",
							"android.os.AsyncTask.isCancelled",
							"android.os.AsyncTask.onCancelled",
							"android.os.AsyncTask.onCancelled",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"<android.app.Activity: void dismissDialog(int)>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask$1: void <init>(org.wordpress.android.ui.posts.PostsActivity$deletePostTask)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHelper: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHeaderTransformer: void setShowProgressBarOnly(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void ensureAttacher()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshingInt(android.view.View,boolean,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean isDestroyed()>",
							"<android.util.Log: int i(java.lang.String,java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void reset(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<android.view.View: boolean removeCallbacks(java.lang.Runnable)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void startRefresh(android.view.View,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.OnRefreshListener: void onRefreshStarted(android.view.View)>",
							"<android.view.View: boolean post(java.lang.Runnable)>",
							"<android.view.View: boolean postDelayed(java.lang.Runnable,long)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void updateHeaderViewPosition(android.view.View)>",
							"<android.app.Activity: android.view.Window getWindow()>",
							"<android.view.View: java.lang.Object getTag()>",
							"<android.view.ViewManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>",
							"<android.app.Activity: android.view.WindowManager getWindowManager()>",
							"<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>",
							"<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>",
							"<android.view.Window: android.view.View getDecorView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: void onRefreshStarted()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean canRefresh(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void resetTouch()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: boolean hasActivity()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Object)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Boolean)>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.xmlrpc.android.ApiHelper$GenericErrorCallback: void onFailure(org.xmlrpc.android.ApiHelper$ErrorType,java.lang.String,java.lang.Throwable)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback: void onSuccess(int)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Object doInBackground(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Boolean doInBackground(java.util.List[])>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.wordpress.android.WordPressDB: void savePosts(java.util.List,int,boolean,boolean)>",
							"<java.util.List: int size()>",
							"<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>",
							"<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>",
							"<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.util.SqlUtils: long boolToSql(boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.wordpress.android.util.MapUtils: int getMapInt(java.util.Map,java.lang.String,int)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.lang.Integer: int parseInt(java.lang.String)>",
							"<java.lang.Object: boolean equals(java.lang.Object)>",
							"<org.json.JSONArray: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: int getTimezoneOffset()>",
							"<java.util.Date: void <init>(long)>",
							"<java.lang.Long: long longValue()>",
							"<android.content.ContentValues: java.lang.Object get(java.lang.String)>",
							"<android.database.sqlite.SQLiteDatabase: void endTransaction()>",
							"<java.util.Date: void <init>()>",
							"<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<org.json.JSONArray: void <init>()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>",
							"<java.lang.Long: java.lang.Long valueOf(long)>",
							"<java.util.Date: long getTime()>",
							"<org.wordpress.android.util.MapUtils: java.util.Date getMapDate(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.String)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<android.content.ContentValues: void <init>()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<android.database.sqlite.SQLiteDatabase: void beginTransaction()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<org.wordpress.android.WordPressDB: void deleteUploadedPosts(int,boolean)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.xmlrpc.android.XMLRPCClientInterface: java.lang.Object call(java.lang.String,java.lang.Object[])>",
							"<org.wordpress.android.models.Blog: java.lang.String getPassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUsername()>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.xmlrpc.android.XMLRPCFactory: org.xmlrpc.android.XMLRPCClientInterface instantiate(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.xmlrpc.android.XMLRPCFactoryDefault: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.xmlrpc.android.XMLRPCFactoryAbstract: org.xmlrpc.android.XMLRPCClientInterface make(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void v(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean access$300(org.wordpress.android.util.AppLog$LogEntryList,org.wordpress.android.util.AppLog$LogEntry)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean addEntry(org.wordpress.android.util.AppLog$LogEntry)>",
							"<java.util.ArrayList: int size()>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void removeFirstEntry()>",
							"<java.util.ArrayList: java.util.Iterator iterator()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$EntrySet$1: java.util.Map$Entry next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt(int)>",
							"<org.apache.commons.lang.math.JVMRandom: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<java.util.Random: int nextInt(int)>",
							"<java.util.Random: int nextInt()>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object next()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: void checkTokenized()>",
							"<java.lang.String: void <clinit>()>",
							"<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.List: int size()>",
							"<java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.Vector: int size()>",
							"<java.util.ArrayList: int size()>",
							"<java.util.LinkedList: int size()>",
							"<java.util.concurrent.CopyOnWriteArrayList: int size()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer: java.util.List tokenize(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.Collections: void <clinit>()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<java.lang.String: int length()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: boolean add(java.lang.Object)>",
							"<java.util.AbstractList: boolean add(java.lang.Object)>",
							"<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<java.util.LinkedList: boolean add(java.lang.Object)>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isEmptyTokenAsNull()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isIgnoreEmptyTokens()>",
							"<org.apache.commons.lang.text.StrTokenizer: int readNextToken(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List)>",
							"<java.lang.Math: int max(int,int)>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<java.util.Arrays: int binarySearch(char[],char)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: int readWithQuotes(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder clear()>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isQuote(char[],int,int,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.String substring(int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int validateRange(int,int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char[],int,int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(int)>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder appendNull()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getQuoteMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void <init>()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: java.lang.Object next()>",
							"<java.util.GregorianCalendar: boolean equals(java.lang.Object)>",
							"<java.util.Calendar: void add(int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.GregorianCalendar: void add(int,int)>",
							"<java.util.Calendar: boolean equals(java.lang.Object)>",
							"<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$KeySet$1: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap$Values$1: java.lang.Object next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: java.lang.Object next()>",
							"<java.lang.Character: void <clinit>()>",
							"<java.lang.Character: void <init>(char)>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: void prepareNext()>",
							"<org.apache.commons.lang.CharRange: boolean access$100(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$200(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$300(org.apache.commons.lang.CharRange)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: java.lang.Object next()>",
							"<java.util.Scanner: java.lang.String next()>",
							"<android.support.v4.util.MapCollections$MapIterator: java.util.Map$Entry next()>",
							"<android.support.v4.util.MapCollections$MapIterator: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: boolean hasNext()>",
							"<java.util.Calendar: boolean before(java.lang.Object)>",
							"<com.google.gson.JsonStreamParser: boolean hasNext()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<com.google.gson.JsonIOException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<java.lang.RuntimeException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonSyntaxException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>",
							"<com.google.gson.stream.JsonReader$2: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: com.google.gson.stream.JsonScope[] values()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.support.v4.util.SparseArrayCompat: android.support.v4.util.SparseArrayCompat clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object cloneReset()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: java.lang.Object clone()>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrTokenizer reset()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.MalformedJsonException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.io.Reader: int read(char[],int,int)>",
							"<com.google.gson.internal.bind.JsonTreeReader$1: int read(char[],int,int)>",
							"<java.lang.AssertionError: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderReader: int read(char[],int,int)>",
							"<java.lang.IndexOutOfBoundsException: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void getChars(int,int,char[],int)>",
							"<java.lang.System: void <clinit>()>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<java.io.BufferedReader: int read(char[],int,int)>",
							"<java.io.InputStreamReader: int read(char[],int,int)>",
							"<java.io.FilterReader: int read(char[],int,int)>",
							"<java.io.PushbackReader: int read(char[],int,int)>",
							"<java.io.StringReader: int read(char[],int,int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.io.EOFException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: void skipToEndOfLine()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean skipTo(java.lang.String)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.String: char charAt(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken objectValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<java.lang.String: char charAt(int)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: char readEscapeCharacter()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.NumberFormatException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: void push(com.google.gson.stream.JsonScope)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken readLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeNumber(char[],int,int)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInObject(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInArray(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: void consumeNonExecutePrefix()>",
							"<com.google.gson.stream.JsonReader: void <clinit>()>",
							"<java.lang.String: char[] toCharArray()>",
							"<com.google.gson.stream.JsonReader$1: void <init>()>",
							"<com.google.gson.internal.JsonReaderInternalAccess: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.util.Scanner: boolean hasNext()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: boolean hasNext()>",
							"<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: boolean hasNext()>",
							"<java.util.ArrayList: boolean remove(java.lang.Object)>",
							"<android.util.Log: int v(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttppassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttpuser()>",
							"<org.wordpress.android.models.Blog: java.net.URI getUri()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUrl()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.net.URI: void <init>(java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void <init>(org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback)>",
							"<org.xmlrpc.android.ApiHelper$HelperAsyncTask: void <init>()>",
							"<android.os.AsyncTask: void <init>()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$7: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<android.view.View: void setVisibility(int)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: int getRemotePostCount()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.models.PostsListPost: boolean isLocalDraft()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: org.wordpress.android.ui.posts.adapters.PostsListAdapter getPostListAdapter()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$4: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: void <init>(android.content.Context,boolean,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnLoadMoreListener,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnPostsLoadedListener)>",
							"<android.widget.BaseAdapter: void <init>()>",
							"<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>",
							"<java.util.ArrayList: void <init>()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$5: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.NetworkUtils: boolean checkConnection(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: boolean isNetworkAvailable(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: android.net.NetworkInfo getActiveNetworkInfo(android.content.Context)>",
							"<android.content.Context: java.lang.Object getSystemService(java.lang.String)>",
							"<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>",
							"<android.net.NetworkInfo: boolean isConnected()>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.content.Context: java.lang.String getString(int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,java.lang.String,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.wordpress.android.WordPressDB: void updateLastBlogId(int)>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences$Editor: boolean commit()>",
							"<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>",
							"<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<org.wordpress.android.WordPressDB: org.wordpress.android.models.Blog instantiateBlogByLocalId(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<android.database.Cursor: void close()>",
							"<org.wordpress.android.models.Blog: void setHidden(boolean)>",
							"<org.wordpress.android.models.Blog: void setAdmin(boolean)>",
							"<org.wordpress.android.models.Blog: void setBlogOptions(java.lang.String)>",
							"<org.wordpress.android.models.Blog: org.json.JSONObject getBlogOptionsJSONObject()>",
							"<org.wordpress.android.models.Blog: java.lang.String getBlogOptions()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.wordpress.android.util.CrashlyticsUtils: void logException(java.lang.Throwable,org.wordpress.android.util.CrashlyticsUtils$ExceptionType,org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<java.lang.Enum: java.lang.String name()>",
							"<com.crashlytics.android.Crashlytics: void setString(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: int size()>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.v: void <init>()>",
							"<com.crashlytics.android.internal.m: void <clinit>()>",
							"<com.crashlytics.android.internal.n: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.o: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.B: void <init>(com.crashlytics.android.internal.m)>",
							"<android.os.Looper: android.os.Looper getMainLooper()>",
							"<android.os.Handler: void <init>(android.os.Looper)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String)>",
							"<com.crashlytics.android.internal.i: void <clinit>()>",
							"<com.crashlytics.android.internal.j: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String,com.crashlytics.android.internal.i)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(java.lang.String)>",
							"<java.util.HashMap: void <init>()>",
							"<com.crashlytics.android.internal.d: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<com.crashlytics.android.internal.c: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.v: int g()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>",
							"<com.crashlytics.android.internal.r: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<com.crashlytics.android.internal.ab: void <clinit>()>",
							"<com.crashlytics.android.internal.ac: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.ab: boolean f(android.content.Context)>",
							"<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.Crashlytics: void <init>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.u: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.System: long currentTimeMillis()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.u a(java.lang.Class)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: java.lang.String c(java.lang.String)>",
							"<java.lang.String: java.lang.String trim()>",
							"<java.lang.String: java.lang.String substring(int,int)>",
							"<java.lang.String: int length()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: void logException(java.lang.Throwable)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.v: void a(java.lang.Thread,java.lang.Throwable)>",
							"<java.util.Date: void <init>()>",
							"<com.crashlytics.android.v: java.util.concurrent.Future a(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.AbstractExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.G: void <init>(com.crashlytics.android.v,java.lang.Runnable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.P: void <init>(com.crashlytics.android.v,java.util.Date,java.lang.Thread,java.lang.Throwable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.A: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String,boolean)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int println(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<java.lang.Thread: java.lang.Thread currentThread()>",
							"<org.json.JSONObject: void <init>(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.json.JSONObject: java.lang.String getString(java.lang.String)>",
							"<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.json.JSONObject: boolean has(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHomeURL(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setScaledImageWidth(int)>",
							"<org.wordpress.android.models.Blog: void setScaledImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setPostFormats(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setWpVersion(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_key(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_password(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_username(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcomFlag(boolean)>",
							"<org.wordpress.android.models.Blog: void setLocation(boolean)>",
							"<org.wordpress.android.models.Blog: void setRemoteBlogId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidthId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidth(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setFullSizeImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setFeaturedImageCapable(boolean)>",
							"<android.database.Cursor: int getInt(int)>",
							"<org.wordpress.android.models.Blog: void setImagePlacement(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttppassword(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttpuser(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setPassword(java.lang.String)>",
							"<org.wordpress.android.WordPressDB: java.lang.String decryptPassword(java.lang.String)>",
							"<java.lang.String: byte[] getBytes(java.lang.String)>",
							"<java.lang.String: void <init>(byte[])>",
							"<javax.crypto.Cipher: byte[] doFinal(byte[])>",
							"<javax.crypto.Cipher: void init(int,java.security.Key)>",
							"<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
							"<android.util.Base64: byte[] decode(java.lang.String,int)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>",
							"<javax.crypto.spec.DESKeySpec: void <init>(byte[])>",
							"<org.wordpress.android.models.Blog: void setUsername(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setBlogName(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setUrl(java.lang.String)>",
							"<android.database.Cursor: int getColumnIndex(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setLocalTableBlogId(int)>",
							"<org.wordpress.android.models.Blog: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.util.List: int size()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPressDB: java.util.List getAccountsBy(java.lang.String,java.lang.String[])>",
							"<java.util.Vector: void <init>()>",
							"<java.util.Collections: void sort(java.util.List,java.util.Comparator)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: boolean moveToNext()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.util.HashMap: void <init>()>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: int getInt(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] addAll(java.lang.Object[],java.lang.Object[])>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] clone(java.lang.Object[])>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.Class: java.lang.String getName()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>",
							"<java.lang.Class: java.lang.Class getComponentType()>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlogToLastActive()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.WordPressDB: int getLastBlogId()>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences: int getInt(java.lang.String,int)>",
							"<org.wordpress.android.WordPressDB: boolean isDotComAccountVisible(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<org.wordpress.android.util.SqlUtils: boolean boolForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: boolean sqlToBool(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: org.wordpress.android.ui.posts.PostsListFragment access$100(org.wordpress.android.ui.posts.PostsActivity)>",
							"<org.wordpress.android.WordPressDB: boolean deletePost(org.wordpress.android.models.Post)>",
							"<org.wordpress.android.models.Post: int getLocalTableBlogId()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.models.Post: long getLocalTablePostId()>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void checkForLocalChanges(boolean)>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void popPostDetail()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getHTMLStringStackTrace(java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getStringStackTrace(java.lang.Throwable)>",
							"<java.io.StringWriter: void <init>()>",
							"<org.apache.commons.lang.exception.NestableError: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.NotImplementedException: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: void printStackTrace(java.io.PrintWriter)>",
							"<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableException: void printStackTrace(java.io.PrintWriter)>",
							"<java.io.PrintWriter: void <init>(java.io.Writer)>",
							"<java.io.StringWriter: java.lang.String toString()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<android.support.v4.app.FragmentManager: void popBackStack()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$5: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$4: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.WordPressDB: boolean findLocalChanges(int,boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.wordpress.android.ui.posts.PostsActivity: void attemptToSelectPost()>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setShouldSelectFirstPost(boolean)>",
							"<android.support.v4.app.Fragment: boolean isInLayout()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Object)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"android.os.AsyncTask.onPostExecute",
							"android.os.AsyncTask$Status.<clinit>",
							"android.os.AsyncTask$Status.<clinit>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<android.os.AsyncTask: void <init>()>",
							"android.os.AsyncTask$Status.<init>"
						]
					}
				]
			},
			{
				"Candidate Name":"org.wordpress.android.ui.posts.PostsListFragment.setRefreshing",
				"Candidate Score":91,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.AsyncTask.finish",
							"android.os.AsyncTask.isCancelled",
							"android.os.AsyncTask.onCancelled",
							"android.os.AsyncTask.onCancelled",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"<android.app.Activity: void dismissDialog(int)>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask$1: void <init>(org.wordpress.android.ui.posts.PostsActivity$deletePostTask)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHelper: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHeaderTransformer: void setShowProgressBarOnly(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void ensureAttacher()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshingInt(android.view.View,boolean,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean isDestroyed()>",
							"<android.util.Log: int i(java.lang.String,java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void reset(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<android.view.View: boolean removeCallbacks(java.lang.Runnable)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void startRefresh(android.view.View,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.OnRefreshListener: void onRefreshStarted(android.view.View)>",
							"<android.view.View: boolean post(java.lang.Runnable)>",
							"<android.view.View: boolean postDelayed(java.lang.Runnable,long)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void updateHeaderViewPosition(android.view.View)>",
							"<android.app.Activity: android.view.Window getWindow()>",
							"<android.view.View: java.lang.Object getTag()>",
							"<android.view.ViewManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>",
							"<android.app.Activity: android.view.WindowManager getWindowManager()>",
							"<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>",
							"<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>",
							"<android.view.Window: android.view.View getDecorView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: void onRefreshStarted()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean canRefresh(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void resetTouch()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: boolean hasActivity()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Object)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Boolean)>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.xmlrpc.android.ApiHelper$GenericErrorCallback: void onFailure(org.xmlrpc.android.ApiHelper$ErrorType,java.lang.String,java.lang.Throwable)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback: void onSuccess(int)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Object doInBackground(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Boolean doInBackground(java.util.List[])>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.wordpress.android.WordPressDB: void savePosts(java.util.List,int,boolean,boolean)>",
							"<java.util.List: int size()>",
							"<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>",
							"<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>",
							"<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.util.SqlUtils: long boolToSql(boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.wordpress.android.util.MapUtils: int getMapInt(java.util.Map,java.lang.String,int)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.lang.Integer: int parseInt(java.lang.String)>",
							"<java.lang.Object: boolean equals(java.lang.Object)>",
							"<org.json.JSONArray: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: int getTimezoneOffset()>",
							"<java.util.Date: void <init>(long)>",
							"<java.lang.Long: long longValue()>",
							"<android.content.ContentValues: java.lang.Object get(java.lang.String)>",
							"<android.database.sqlite.SQLiteDatabase: void endTransaction()>",
							"<java.util.Date: void <init>()>",
							"<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<org.json.JSONArray: void <init>()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>",
							"<java.lang.Long: java.lang.Long valueOf(long)>",
							"<java.util.Date: long getTime()>",
							"<org.wordpress.android.util.MapUtils: java.util.Date getMapDate(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.String)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<android.content.ContentValues: void <init>()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<android.database.sqlite.SQLiteDatabase: void beginTransaction()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<org.wordpress.android.WordPressDB: void deleteUploadedPosts(int,boolean)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.xmlrpc.android.XMLRPCClientInterface: java.lang.Object call(java.lang.String,java.lang.Object[])>",
							"<org.wordpress.android.models.Blog: java.lang.String getPassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUsername()>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.xmlrpc.android.XMLRPCFactory: org.xmlrpc.android.XMLRPCClientInterface instantiate(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.xmlrpc.android.XMLRPCFactoryDefault: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.xmlrpc.android.XMLRPCFactoryAbstract: org.xmlrpc.android.XMLRPCClientInterface make(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void v(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean access$300(org.wordpress.android.util.AppLog$LogEntryList,org.wordpress.android.util.AppLog$LogEntry)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean addEntry(org.wordpress.android.util.AppLog$LogEntry)>",
							"<java.util.ArrayList: int size()>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void removeFirstEntry()>",
							"<java.util.ArrayList: java.util.Iterator iterator()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$EntrySet$1: java.util.Map$Entry next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt(int)>",
							"<org.apache.commons.lang.math.JVMRandom: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<java.util.Random: int nextInt(int)>",
							"<java.util.Random: int nextInt()>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object next()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: void checkTokenized()>",
							"<java.lang.String: void <clinit>()>",
							"<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.List: int size()>",
							"<java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.Vector: int size()>",
							"<java.util.ArrayList: int size()>",
							"<java.util.LinkedList: int size()>",
							"<java.util.concurrent.CopyOnWriteArrayList: int size()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer: java.util.List tokenize(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.Collections: void <clinit>()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<java.lang.String: int length()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: boolean add(java.lang.Object)>",
							"<java.util.AbstractList: boolean add(java.lang.Object)>",
							"<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<java.util.LinkedList: boolean add(java.lang.Object)>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isEmptyTokenAsNull()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isIgnoreEmptyTokens()>",
							"<org.apache.commons.lang.text.StrTokenizer: int readNextToken(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List)>",
							"<java.lang.Math: int max(int,int)>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<java.util.Arrays: int binarySearch(char[],char)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: int readWithQuotes(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder clear()>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isQuote(char[],int,int,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.String substring(int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int validateRange(int,int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char[],int,int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(int)>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder appendNull()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getQuoteMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void <init>()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: java.lang.Object next()>",
							"<java.util.GregorianCalendar: boolean equals(java.lang.Object)>",
							"<java.util.Calendar: void add(int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.GregorianCalendar: void add(int,int)>",
							"<java.util.Calendar: boolean equals(java.lang.Object)>",
							"<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$KeySet$1: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap$Values$1: java.lang.Object next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: java.lang.Object next()>",
							"<java.lang.Character: void <clinit>()>",
							"<java.lang.Character: void <init>(char)>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: void prepareNext()>",
							"<org.apache.commons.lang.CharRange: boolean access$100(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$200(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$300(org.apache.commons.lang.CharRange)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: java.lang.Object next()>",
							"<java.util.Scanner: java.lang.String next()>",
							"<android.support.v4.util.MapCollections$MapIterator: java.util.Map$Entry next()>",
							"<android.support.v4.util.MapCollections$MapIterator: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: boolean hasNext()>",
							"<java.util.Calendar: boolean before(java.lang.Object)>",
							"<com.google.gson.JsonStreamParser: boolean hasNext()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<com.google.gson.JsonIOException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<java.lang.RuntimeException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonSyntaxException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>",
							"<com.google.gson.stream.JsonReader$2: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: com.google.gson.stream.JsonScope[] values()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.support.v4.util.SparseArrayCompat: android.support.v4.util.SparseArrayCompat clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object cloneReset()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: java.lang.Object clone()>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrTokenizer reset()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.MalformedJsonException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.io.Reader: int read(char[],int,int)>",
							"<com.google.gson.internal.bind.JsonTreeReader$1: int read(char[],int,int)>",
							"<java.lang.AssertionError: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderReader: int read(char[],int,int)>",
							"<java.lang.IndexOutOfBoundsException: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void getChars(int,int,char[],int)>",
							"<java.lang.System: void <clinit>()>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<java.io.BufferedReader: int read(char[],int,int)>",
							"<java.io.InputStreamReader: int read(char[],int,int)>",
							"<java.io.FilterReader: int read(char[],int,int)>",
							"<java.io.PushbackReader: int read(char[],int,int)>",
							"<java.io.StringReader: int read(char[],int,int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.io.EOFException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: void skipToEndOfLine()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean skipTo(java.lang.String)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.String: char charAt(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken objectValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<java.lang.String: char charAt(int)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: char readEscapeCharacter()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.NumberFormatException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: void push(com.google.gson.stream.JsonScope)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken readLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeNumber(char[],int,int)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInObject(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInArray(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: void consumeNonExecutePrefix()>",
							"<com.google.gson.stream.JsonReader: void <clinit>()>",
							"<java.lang.String: char[] toCharArray()>",
							"<com.google.gson.stream.JsonReader$1: void <init>()>",
							"<com.google.gson.internal.JsonReaderInternalAccess: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.util.Scanner: boolean hasNext()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: boolean hasNext()>",
							"<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: boolean hasNext()>",
							"<java.util.ArrayList: boolean remove(java.lang.Object)>",
							"<android.util.Log: int v(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttppassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttpuser()>",
							"<org.wordpress.android.models.Blog: java.net.URI getUri()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUrl()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.net.URI: void <init>(java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void <init>(org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback)>",
							"<org.xmlrpc.android.ApiHelper$HelperAsyncTask: void <init>()>",
							"<android.os.AsyncTask: void <init>()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$7: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<android.view.View: void setVisibility(int)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: int getRemotePostCount()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.models.PostsListPost: boolean isLocalDraft()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: org.wordpress.android.ui.posts.adapters.PostsListAdapter getPostListAdapter()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$4: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: void <init>(android.content.Context,boolean,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnLoadMoreListener,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnPostsLoadedListener)>",
							"<android.widget.BaseAdapter: void <init>()>",
							"<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>",
							"<java.util.ArrayList: void <init>()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$5: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.NetworkUtils: boolean checkConnection(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: boolean isNetworkAvailable(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: android.net.NetworkInfo getActiveNetworkInfo(android.content.Context)>",
							"<android.content.Context: java.lang.Object getSystemService(java.lang.String)>",
							"<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>",
							"<android.net.NetworkInfo: boolean isConnected()>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.content.Context: java.lang.String getString(int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,java.lang.String,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.wordpress.android.WordPressDB: void updateLastBlogId(int)>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences$Editor: boolean commit()>",
							"<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>",
							"<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<org.wordpress.android.WordPressDB: org.wordpress.android.models.Blog instantiateBlogByLocalId(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<android.database.Cursor: void close()>",
							"<org.wordpress.android.models.Blog: void setHidden(boolean)>",
							"<org.wordpress.android.models.Blog: void setAdmin(boolean)>",
							"<org.wordpress.android.models.Blog: void setBlogOptions(java.lang.String)>",
							"<org.wordpress.android.models.Blog: org.json.JSONObject getBlogOptionsJSONObject()>",
							"<org.wordpress.android.models.Blog: java.lang.String getBlogOptions()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.wordpress.android.util.CrashlyticsUtils: void logException(java.lang.Throwable,org.wordpress.android.util.CrashlyticsUtils$ExceptionType,org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<java.lang.Enum: java.lang.String name()>",
							"<com.crashlytics.android.Crashlytics: void setString(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: int size()>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.v: void <init>()>",
							"<com.crashlytics.android.internal.m: void <clinit>()>",
							"<com.crashlytics.android.internal.n: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.o: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.B: void <init>(com.crashlytics.android.internal.m)>",
							"<android.os.Looper: android.os.Looper getMainLooper()>",
							"<android.os.Handler: void <init>(android.os.Looper)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String)>",
							"<com.crashlytics.android.internal.i: void <clinit>()>",
							"<com.crashlytics.android.internal.j: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String,com.crashlytics.android.internal.i)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(java.lang.String)>",
							"<java.util.HashMap: void <init>()>",
							"<com.crashlytics.android.internal.d: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<com.crashlytics.android.internal.c: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.v: int g()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>",
							"<com.crashlytics.android.internal.r: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<com.crashlytics.android.internal.ab: void <clinit>()>",
							"<com.crashlytics.android.internal.ac: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.ab: boolean f(android.content.Context)>",
							"<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.Crashlytics: void <init>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.u: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.System: long currentTimeMillis()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.u a(java.lang.Class)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: java.lang.String c(java.lang.String)>",
							"<java.lang.String: java.lang.String trim()>",
							"<java.lang.String: java.lang.String substring(int,int)>",
							"<java.lang.String: int length()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: void logException(java.lang.Throwable)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.v: void a(java.lang.Thread,java.lang.Throwable)>",
							"<java.util.Date: void <init>()>",
							"<com.crashlytics.android.v: java.util.concurrent.Future a(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.AbstractExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.G: void <init>(com.crashlytics.android.v,java.lang.Runnable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.P: void <init>(com.crashlytics.android.v,java.util.Date,java.lang.Thread,java.lang.Throwable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.A: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String,boolean)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int println(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<java.lang.Thread: java.lang.Thread currentThread()>",
							"<org.json.JSONObject: void <init>(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.json.JSONObject: java.lang.String getString(java.lang.String)>",
							"<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.json.JSONObject: boolean has(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHomeURL(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setScaledImageWidth(int)>",
							"<org.wordpress.android.models.Blog: void setScaledImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setPostFormats(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setWpVersion(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_key(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_password(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_username(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcomFlag(boolean)>",
							"<org.wordpress.android.models.Blog: void setLocation(boolean)>",
							"<org.wordpress.android.models.Blog: void setRemoteBlogId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidthId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidth(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setFullSizeImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setFeaturedImageCapable(boolean)>",
							"<android.database.Cursor: int getInt(int)>",
							"<org.wordpress.android.models.Blog: void setImagePlacement(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttppassword(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttpuser(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setPassword(java.lang.String)>",
							"<org.wordpress.android.WordPressDB: java.lang.String decryptPassword(java.lang.String)>",
							"<java.lang.String: byte[] getBytes(java.lang.String)>",
							"<java.lang.String: void <init>(byte[])>",
							"<javax.crypto.Cipher: byte[] doFinal(byte[])>",
							"<javax.crypto.Cipher: void init(int,java.security.Key)>",
							"<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
							"<android.util.Base64: byte[] decode(java.lang.String,int)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>",
							"<javax.crypto.spec.DESKeySpec: void <init>(byte[])>",
							"<org.wordpress.android.models.Blog: void setUsername(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setBlogName(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setUrl(java.lang.String)>",
							"<android.database.Cursor: int getColumnIndex(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setLocalTableBlogId(int)>",
							"<org.wordpress.android.models.Blog: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.util.List: int size()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPressDB: java.util.List getAccountsBy(java.lang.String,java.lang.String[])>",
							"<java.util.Vector: void <init>()>",
							"<java.util.Collections: void sort(java.util.List,java.util.Comparator)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: boolean moveToNext()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.util.HashMap: void <init>()>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: int getInt(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] addAll(java.lang.Object[],java.lang.Object[])>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] clone(java.lang.Object[])>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.Class: java.lang.String getName()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>",
							"<java.lang.Class: java.lang.Class getComponentType()>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlogToLastActive()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.WordPressDB: int getLastBlogId()>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences: int getInt(java.lang.String,int)>",
							"<org.wordpress.android.WordPressDB: boolean isDotComAccountVisible(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<org.wordpress.android.util.SqlUtils: boolean boolForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: boolean sqlToBool(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: org.wordpress.android.ui.posts.PostsListFragment access$100(org.wordpress.android.ui.posts.PostsActivity)>",
							"<org.wordpress.android.WordPressDB: boolean deletePost(org.wordpress.android.models.Post)>",
							"<org.wordpress.android.models.Post: int getLocalTableBlogId()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.models.Post: long getLocalTablePostId()>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void checkForLocalChanges(boolean)>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void popPostDetail()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getHTMLStringStackTrace(java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getStringStackTrace(java.lang.Throwable)>",
							"<java.io.StringWriter: void <init>()>",
							"<org.apache.commons.lang.exception.NestableError: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.NotImplementedException: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: void printStackTrace(java.io.PrintWriter)>",
							"<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableException: void printStackTrace(java.io.PrintWriter)>",
							"<java.io.PrintWriter: void <init>(java.io.Writer)>",
							"<java.io.StringWriter: java.lang.String toString()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<android.support.v4.app.FragmentManager: void popBackStack()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$5: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$4: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.WordPressDB: boolean findLocalChanges(int,boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.wordpress.android.ui.posts.PostsActivity: void attemptToSelectPost()>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setShouldSelectFirstPost(boolean)>",
							"<android.support.v4.app.Fragment: boolean isInLayout()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Object)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"android.os.AsyncTask.onPostExecute",
							"android.os.AsyncTask$Status.<clinit>",
							"android.os.AsyncTask$Status.<clinit>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<android.os.AsyncTask: void <init>()>",
							"android.os.AsyncTask$Status.<init>"
						]
					},
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.AsyncTask.finish",
							"android.os.AsyncTask.isCancelled",
							"android.os.AsyncTask.onCancelled",
							"android.os.AsyncTask.onCancelled",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"<android.app.Activity: void dismissDialog(int)>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask$1: void <init>(org.wordpress.android.ui.posts.PostsActivity$deletePostTask)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHelper: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHeaderTransformer: void setShowProgressBarOnly(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void ensureAttacher()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshingInt(android.view.View,boolean,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean isDestroyed()>",
							"<android.util.Log: int i(java.lang.String,java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void reset(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<android.view.View: boolean removeCallbacks(java.lang.Runnable)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void startRefresh(android.view.View,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.OnRefreshListener: void onRefreshStarted(android.view.View)>",
							"<android.view.View: boolean post(java.lang.Runnable)>",
							"<android.view.View: boolean postDelayed(java.lang.Runnable,long)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void updateHeaderViewPosition(android.view.View)>",
							"<android.app.Activity: android.view.Window getWindow()>",
							"<android.view.View: java.lang.Object getTag()>",
							"<android.view.ViewManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>",
							"<android.app.Activity: android.view.WindowManager getWindowManager()>",
							"<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>",
							"<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>",
							"<android.view.Window: android.view.View getDecorView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: void onRefreshStarted()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean canRefresh(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void resetTouch()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: boolean hasActivity()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Object)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Boolean)>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.xmlrpc.android.ApiHelper$GenericErrorCallback: void onFailure(org.xmlrpc.android.ApiHelper$ErrorType,java.lang.String,java.lang.Throwable)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback: void onSuccess(int)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Object doInBackground(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Boolean doInBackground(java.util.List[])>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.wordpress.android.WordPressDB: void savePosts(java.util.List,int,boolean,boolean)>",
							"<java.util.List: int size()>",
							"<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>",
							"<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>",
							"<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.util.SqlUtils: long boolToSql(boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.wordpress.android.util.MapUtils: int getMapInt(java.util.Map,java.lang.String,int)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.lang.Integer: int parseInt(java.lang.String)>",
							"<java.lang.Object: boolean equals(java.lang.Object)>",
							"<org.json.JSONArray: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: int getTimezoneOffset()>",
							"<java.util.Date: void <init>(long)>",
							"<java.lang.Long: long longValue()>",
							"<android.content.ContentValues: java.lang.Object get(java.lang.String)>",
							"<android.database.sqlite.SQLiteDatabase: void endTransaction()>",
							"<java.util.Date: void <init>()>",
							"<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<org.json.JSONArray: void <init>()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>",
							"<java.lang.Long: java.lang.Long valueOf(long)>",
							"<java.util.Date: long getTime()>",
							"<org.wordpress.android.util.MapUtils: java.util.Date getMapDate(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.String)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<android.content.ContentValues: void <init>()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<android.database.sqlite.SQLiteDatabase: void beginTransaction()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<org.wordpress.android.WordPressDB: void deleteUploadedPosts(int,boolean)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.xmlrpc.android.XMLRPCClientInterface: java.lang.Object call(java.lang.String,java.lang.Object[])>",
							"<org.wordpress.android.models.Blog: java.lang.String getPassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUsername()>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.xmlrpc.android.XMLRPCFactory: org.xmlrpc.android.XMLRPCClientInterface instantiate(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.xmlrpc.android.XMLRPCFactoryDefault: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.xmlrpc.android.XMLRPCFactoryAbstract: org.xmlrpc.android.XMLRPCClientInterface make(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void v(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean access$300(org.wordpress.android.util.AppLog$LogEntryList,org.wordpress.android.util.AppLog$LogEntry)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean addEntry(org.wordpress.android.util.AppLog$LogEntry)>",
							"<java.util.ArrayList: int size()>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void removeFirstEntry()>",
							"<java.util.ArrayList: java.util.Iterator iterator()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$EntrySet$1: java.util.Map$Entry next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt(int)>",
							"<org.apache.commons.lang.math.JVMRandom: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<java.util.Random: int nextInt(int)>",
							"<java.util.Random: int nextInt()>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object next()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: void checkTokenized()>",
							"<java.lang.String: void <clinit>()>",
							"<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.List: int size()>",
							"<java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.Vector: int size()>",
							"<java.util.ArrayList: int size()>",
							"<java.util.LinkedList: int size()>",
							"<java.util.concurrent.CopyOnWriteArrayList: int size()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer: java.util.List tokenize(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.Collections: void <clinit>()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<java.lang.String: int length()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: boolean add(java.lang.Object)>",
							"<java.util.AbstractList: boolean add(java.lang.Object)>",
							"<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<java.util.LinkedList: boolean add(java.lang.Object)>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isEmptyTokenAsNull()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isIgnoreEmptyTokens()>",
							"<org.apache.commons.lang.text.StrTokenizer: int readNextToken(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List)>",
							"<java.lang.Math: int max(int,int)>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<java.util.Arrays: int binarySearch(char[],char)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: int readWithQuotes(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder clear()>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isQuote(char[],int,int,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.String substring(int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int validateRange(int,int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char[],int,int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(int)>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder appendNull()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getQuoteMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void <init>()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: java.lang.Object next()>",
							"<java.util.GregorianCalendar: boolean equals(java.lang.Object)>",
							"<java.util.Calendar: void add(int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.GregorianCalendar: void add(int,int)>",
							"<java.util.Calendar: boolean equals(java.lang.Object)>",
							"<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$KeySet$1: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap$Values$1: java.lang.Object next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: java.lang.Object next()>",
							"<java.lang.Character: void <clinit>()>",
							"<java.lang.Character: void <init>(char)>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: void prepareNext()>",
							"<org.apache.commons.lang.CharRange: boolean access$100(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$200(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$300(org.apache.commons.lang.CharRange)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: java.lang.Object next()>",
							"<java.util.Scanner: java.lang.String next()>",
							"<android.support.v4.util.MapCollections$MapIterator: java.util.Map$Entry next()>",
							"<android.support.v4.util.MapCollections$MapIterator: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: boolean hasNext()>",
							"<java.util.Calendar: boolean before(java.lang.Object)>",
							"<com.google.gson.JsonStreamParser: boolean hasNext()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<com.google.gson.JsonIOException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<java.lang.RuntimeException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonSyntaxException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>",
							"<com.google.gson.stream.JsonReader$2: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: com.google.gson.stream.JsonScope[] values()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.support.v4.util.SparseArrayCompat: android.support.v4.util.SparseArrayCompat clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object cloneReset()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: java.lang.Object clone()>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrTokenizer reset()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.MalformedJsonException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.io.Reader: int read(char[],int,int)>",
							"<com.google.gson.internal.bind.JsonTreeReader$1: int read(char[],int,int)>",
							"<java.lang.AssertionError: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderReader: int read(char[],int,int)>",
							"<java.lang.IndexOutOfBoundsException: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void getChars(int,int,char[],int)>",
							"<java.lang.System: void <clinit>()>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<java.io.BufferedReader: int read(char[],int,int)>",
							"<java.io.InputStreamReader: int read(char[],int,int)>",
							"<java.io.FilterReader: int read(char[],int,int)>",
							"<java.io.PushbackReader: int read(char[],int,int)>",
							"<java.io.StringReader: int read(char[],int,int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.io.EOFException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: void skipToEndOfLine()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean skipTo(java.lang.String)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.String: char charAt(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken objectValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<java.lang.String: char charAt(int)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: char readEscapeCharacter()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.NumberFormatException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: void push(com.google.gson.stream.JsonScope)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken readLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeNumber(char[],int,int)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInObject(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInArray(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: void consumeNonExecutePrefix()>",
							"<com.google.gson.stream.JsonReader: void <clinit>()>",
							"<java.lang.String: char[] toCharArray()>",
							"<com.google.gson.stream.JsonReader$1: void <init>()>",
							"<com.google.gson.internal.JsonReaderInternalAccess: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.util.Scanner: boolean hasNext()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: boolean hasNext()>",
							"<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: boolean hasNext()>",
							"<java.util.ArrayList: boolean remove(java.lang.Object)>",
							"<android.util.Log: int v(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttppassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttpuser()>",
							"<org.wordpress.android.models.Blog: java.net.URI getUri()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUrl()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.net.URI: void <init>(java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void <init>(org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback)>",
							"<org.xmlrpc.android.ApiHelper$HelperAsyncTask: void <init>()>",
							"<android.os.AsyncTask: void <init>()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$7: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<android.view.View: void setVisibility(int)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: int getRemotePostCount()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.models.PostsListPost: boolean isLocalDraft()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: org.wordpress.android.ui.posts.adapters.PostsListAdapter getPostListAdapter()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$4: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: void <init>(android.content.Context,boolean,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnLoadMoreListener,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnPostsLoadedListener)>",
							"<android.widget.BaseAdapter: void <init>()>",
							"<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>",
							"<java.util.ArrayList: void <init>()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$5: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.NetworkUtils: boolean checkConnection(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: boolean isNetworkAvailable(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: android.net.NetworkInfo getActiveNetworkInfo(android.content.Context)>",
							"<android.content.Context: java.lang.Object getSystemService(java.lang.String)>",
							"<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>",
							"<android.net.NetworkInfo: boolean isConnected()>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.content.Context: java.lang.String getString(int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,java.lang.String,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.wordpress.android.WordPressDB: void updateLastBlogId(int)>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences$Editor: boolean commit()>",
							"<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>",
							"<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<org.wordpress.android.WordPressDB: org.wordpress.android.models.Blog instantiateBlogByLocalId(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<android.database.Cursor: void close()>",
							"<org.wordpress.android.models.Blog: void setHidden(boolean)>",
							"<org.wordpress.android.models.Blog: void setAdmin(boolean)>",
							"<org.wordpress.android.models.Blog: void setBlogOptions(java.lang.String)>",
							"<org.wordpress.android.models.Blog: org.json.JSONObject getBlogOptionsJSONObject()>",
							"<org.wordpress.android.models.Blog: java.lang.String getBlogOptions()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.wordpress.android.util.CrashlyticsUtils: void logException(java.lang.Throwable,org.wordpress.android.util.CrashlyticsUtils$ExceptionType,org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<java.lang.Enum: java.lang.String name()>",
							"<com.crashlytics.android.Crashlytics: void setString(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: int size()>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.v: void <init>()>",
							"<com.crashlytics.android.internal.m: void <clinit>()>",
							"<com.crashlytics.android.internal.n: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.o: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.B: void <init>(com.crashlytics.android.internal.m)>",
							"<android.os.Looper: android.os.Looper getMainLooper()>",
							"<android.os.Handler: void <init>(android.os.Looper)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String)>",
							"<com.crashlytics.android.internal.i: void <clinit>()>",
							"<com.crashlytics.android.internal.j: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String,com.crashlytics.android.internal.i)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(java.lang.String)>",
							"<java.util.HashMap: void <init>()>",
							"<com.crashlytics.android.internal.d: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<com.crashlytics.android.internal.c: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.v: int g()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>",
							"<com.crashlytics.android.internal.r: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<com.crashlytics.android.internal.ab: void <clinit>()>",
							"<com.crashlytics.android.internal.ac: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.ab: boolean f(android.content.Context)>",
							"<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.Crashlytics: void <init>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.u: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.System: long currentTimeMillis()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.u a(java.lang.Class)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: java.lang.String c(java.lang.String)>",
							"<java.lang.String: java.lang.String trim()>",
							"<java.lang.String: java.lang.String substring(int,int)>",
							"<java.lang.String: int length()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: void logException(java.lang.Throwable)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.v: void a(java.lang.Thread,java.lang.Throwable)>",
							"<java.util.Date: void <init>()>",
							"<com.crashlytics.android.v: java.util.concurrent.Future a(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.AbstractExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.G: void <init>(com.crashlytics.android.v,java.lang.Runnable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.P: void <init>(com.crashlytics.android.v,java.util.Date,java.lang.Thread,java.lang.Throwable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.A: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String,boolean)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int println(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<java.lang.Thread: java.lang.Thread currentThread()>",
							"<org.json.JSONObject: void <init>(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.json.JSONObject: java.lang.String getString(java.lang.String)>",
							"<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.json.JSONObject: boolean has(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHomeURL(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setScaledImageWidth(int)>",
							"<org.wordpress.android.models.Blog: void setScaledImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setPostFormats(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setWpVersion(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_key(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_password(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_username(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcomFlag(boolean)>",
							"<org.wordpress.android.models.Blog: void setLocation(boolean)>",
							"<org.wordpress.android.models.Blog: void setRemoteBlogId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidthId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidth(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setFullSizeImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setFeaturedImageCapable(boolean)>",
							"<android.database.Cursor: int getInt(int)>",
							"<org.wordpress.android.models.Blog: void setImagePlacement(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttppassword(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttpuser(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setPassword(java.lang.String)>",
							"<org.wordpress.android.WordPressDB: java.lang.String decryptPassword(java.lang.String)>",
							"<java.lang.String: byte[] getBytes(java.lang.String)>",
							"<java.lang.String: void <init>(byte[])>",
							"<javax.crypto.Cipher: byte[] doFinal(byte[])>",
							"<javax.crypto.Cipher: void init(int,java.security.Key)>",
							"<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
							"<android.util.Base64: byte[] decode(java.lang.String,int)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>",
							"<javax.crypto.spec.DESKeySpec: void <init>(byte[])>",
							"<org.wordpress.android.models.Blog: void setUsername(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setBlogName(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setUrl(java.lang.String)>",
							"<android.database.Cursor: int getColumnIndex(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setLocalTableBlogId(int)>",
							"<org.wordpress.android.models.Blog: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.util.List: int size()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPressDB: java.util.List getAccountsBy(java.lang.String,java.lang.String[])>",
							"<java.util.Vector: void <init>()>",
							"<java.util.Collections: void sort(java.util.List,java.util.Comparator)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: boolean moveToNext()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.util.HashMap: void <init>()>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: int getInt(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] addAll(java.lang.Object[],java.lang.Object[])>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] clone(java.lang.Object[])>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.Class: java.lang.String getName()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>",
							"<java.lang.Class: java.lang.Class getComponentType()>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlogToLastActive()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.WordPressDB: int getLastBlogId()>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences: int getInt(java.lang.String,int)>",
							"<org.wordpress.android.WordPressDB: boolean isDotComAccountVisible(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<org.wordpress.android.util.SqlUtils: boolean boolForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: boolean sqlToBool(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: org.wordpress.android.ui.posts.PostsListFragment access$100(org.wordpress.android.ui.posts.PostsActivity)>",
							"<org.wordpress.android.WordPressDB: boolean deletePost(org.wordpress.android.models.Post)>",
							"<org.wordpress.android.models.Post: int getLocalTableBlogId()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.models.Post: long getLocalTablePostId()>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void checkForLocalChanges(boolean)>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void popPostDetail()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getHTMLStringStackTrace(java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getStringStackTrace(java.lang.Throwable)>",
							"<java.io.StringWriter: void <init>()>",
							"<org.apache.commons.lang.exception.NestableError: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.NotImplementedException: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: void printStackTrace(java.io.PrintWriter)>",
							"<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableException: void printStackTrace(java.io.PrintWriter)>",
							"<java.io.PrintWriter: void <init>(java.io.Writer)>",
							"<java.io.StringWriter: java.lang.String toString()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<android.support.v4.app.FragmentManager: void popBackStack()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$5: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$4: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.WordPressDB: boolean findLocalChanges(int,boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.wordpress.android.ui.posts.PostsActivity: void attemptToSelectPost()>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setShouldSelectFirstPost(boolean)>",
							"<android.support.v4.app.Fragment: boolean isInLayout()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Object)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"android.os.AsyncTask.onPostExecute",
							"android.os.AsyncTask$Status.<clinit>",
							"android.os.AsyncTask$Status.<clinit>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<android.os.AsyncTask: void <init>()>",
							"android.os.AsyncTask$Status.<init>"
						]
					}
				]
			},
			{
				"Candidate Name":"org.wordpress.android.ui.posts.PostsListFragment$7.<init>",
				"Candidate Score":90,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.AsyncTask.finish",
							"android.os.AsyncTask.isCancelled",
							"android.os.AsyncTask.onCancelled",
							"android.os.AsyncTask.onCancelled",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"<android.app.Activity: void dismissDialog(int)>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask$1: void <init>(org.wordpress.android.ui.posts.PostsActivity$deletePostTask)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHelper: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHeaderTransformer: void setShowProgressBarOnly(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void ensureAttacher()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshingInt(android.view.View,boolean,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean isDestroyed()>",
							"<android.util.Log: int i(java.lang.String,java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void reset(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<android.view.View: boolean removeCallbacks(java.lang.Runnable)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void startRefresh(android.view.View,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.OnRefreshListener: void onRefreshStarted(android.view.View)>",
							"<android.view.View: boolean post(java.lang.Runnable)>",
							"<android.view.View: boolean postDelayed(java.lang.Runnable,long)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void updateHeaderViewPosition(android.view.View)>",
							"<android.app.Activity: android.view.Window getWindow()>",
							"<android.view.View: java.lang.Object getTag()>",
							"<android.view.ViewManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>",
							"<android.app.Activity: android.view.WindowManager getWindowManager()>",
							"<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>",
							"<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>",
							"<android.view.Window: android.view.View getDecorView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: void onRefreshStarted()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean canRefresh(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void resetTouch()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: boolean hasActivity()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Object)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Boolean)>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.xmlrpc.android.ApiHelper$GenericErrorCallback: void onFailure(org.xmlrpc.android.ApiHelper$ErrorType,java.lang.String,java.lang.Throwable)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback: void onSuccess(int)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Object doInBackground(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Boolean doInBackground(java.util.List[])>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.wordpress.android.WordPressDB: void savePosts(java.util.List,int,boolean,boolean)>",
							"<java.util.List: int size()>",
							"<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>",
							"<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>",
							"<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.util.SqlUtils: long boolToSql(boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.wordpress.android.util.MapUtils: int getMapInt(java.util.Map,java.lang.String,int)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.lang.Integer: int parseInt(java.lang.String)>",
							"<java.lang.Object: boolean equals(java.lang.Object)>",
							"<org.json.JSONArray: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: int getTimezoneOffset()>",
							"<java.util.Date: void <init>(long)>",
							"<java.lang.Long: long longValue()>",
							"<android.content.ContentValues: java.lang.Object get(java.lang.String)>",
							"<android.database.sqlite.SQLiteDatabase: void endTransaction()>",
							"<java.util.Date: void <init>()>",
							"<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<org.json.JSONArray: void <init>()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>",
							"<java.lang.Long: java.lang.Long valueOf(long)>",
							"<java.util.Date: long getTime()>",
							"<org.wordpress.android.util.MapUtils: java.util.Date getMapDate(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.String)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<android.content.ContentValues: void <init>()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<android.database.sqlite.SQLiteDatabase: void beginTransaction()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<org.wordpress.android.WordPressDB: void deleteUploadedPosts(int,boolean)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.xmlrpc.android.XMLRPCClientInterface: java.lang.Object call(java.lang.String,java.lang.Object[])>",
							"<org.wordpress.android.models.Blog: java.lang.String getPassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUsername()>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.xmlrpc.android.XMLRPCFactory: org.xmlrpc.android.XMLRPCClientInterface instantiate(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.xmlrpc.android.XMLRPCFactoryDefault: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.xmlrpc.android.XMLRPCFactoryAbstract: org.xmlrpc.android.XMLRPCClientInterface make(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void v(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean access$300(org.wordpress.android.util.AppLog$LogEntryList,org.wordpress.android.util.AppLog$LogEntry)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean addEntry(org.wordpress.android.util.AppLog$LogEntry)>",
							"<java.util.ArrayList: int size()>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void removeFirstEntry()>",
							"<java.util.ArrayList: java.util.Iterator iterator()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$EntrySet$1: java.util.Map$Entry next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt(int)>",
							"<org.apache.commons.lang.math.JVMRandom: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<java.util.Random: int nextInt(int)>",
							"<java.util.Random: int nextInt()>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object next()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: void checkTokenized()>",
							"<java.lang.String: void <clinit>()>",
							"<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.List: int size()>",
							"<java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.Vector: int size()>",
							"<java.util.ArrayList: int size()>",
							"<java.util.LinkedList: int size()>",
							"<java.util.concurrent.CopyOnWriteArrayList: int size()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer: java.util.List tokenize(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.Collections: void <clinit>()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<java.lang.String: int length()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: boolean add(java.lang.Object)>",
							"<java.util.AbstractList: boolean add(java.lang.Object)>",
							"<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<java.util.LinkedList: boolean add(java.lang.Object)>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isEmptyTokenAsNull()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isIgnoreEmptyTokens()>",
							"<org.apache.commons.lang.text.StrTokenizer: int readNextToken(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List)>",
							"<java.lang.Math: int max(int,int)>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<java.util.Arrays: int binarySearch(char[],char)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: int readWithQuotes(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder clear()>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isQuote(char[],int,int,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.String substring(int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int validateRange(int,int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char[],int,int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(int)>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder appendNull()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getQuoteMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void <init>()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: java.lang.Object next()>",
							"<java.util.GregorianCalendar: boolean equals(java.lang.Object)>",
							"<java.util.Calendar: void add(int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.GregorianCalendar: void add(int,int)>",
							"<java.util.Calendar: boolean equals(java.lang.Object)>",
							"<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$KeySet$1: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap$Values$1: java.lang.Object next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: java.lang.Object next()>",
							"<java.lang.Character: void <clinit>()>",
							"<java.lang.Character: void <init>(char)>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: void prepareNext()>",
							"<org.apache.commons.lang.CharRange: boolean access$100(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$200(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$300(org.apache.commons.lang.CharRange)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: java.lang.Object next()>",
							"<java.util.Scanner: java.lang.String next()>",
							"<android.support.v4.util.MapCollections$MapIterator: java.util.Map$Entry next()>",
							"<android.support.v4.util.MapCollections$MapIterator: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: boolean hasNext()>",
							"<java.util.Calendar: boolean before(java.lang.Object)>",
							"<com.google.gson.JsonStreamParser: boolean hasNext()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<com.google.gson.JsonIOException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<java.lang.RuntimeException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonSyntaxException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>",
							"<com.google.gson.stream.JsonReader$2: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: com.google.gson.stream.JsonScope[] values()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.support.v4.util.SparseArrayCompat: android.support.v4.util.SparseArrayCompat clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object cloneReset()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: java.lang.Object clone()>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrTokenizer reset()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.MalformedJsonException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.io.Reader: int read(char[],int,int)>",
							"<com.google.gson.internal.bind.JsonTreeReader$1: int read(char[],int,int)>",
							"<java.lang.AssertionError: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderReader: int read(char[],int,int)>",
							"<java.lang.IndexOutOfBoundsException: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void getChars(int,int,char[],int)>",
							"<java.lang.System: void <clinit>()>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<java.io.BufferedReader: int read(char[],int,int)>",
							"<java.io.InputStreamReader: int read(char[],int,int)>",
							"<java.io.FilterReader: int read(char[],int,int)>",
							"<java.io.PushbackReader: int read(char[],int,int)>",
							"<java.io.StringReader: int read(char[],int,int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.io.EOFException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: void skipToEndOfLine()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean skipTo(java.lang.String)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.String: char charAt(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken objectValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<java.lang.String: char charAt(int)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: char readEscapeCharacter()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.NumberFormatException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: void push(com.google.gson.stream.JsonScope)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken readLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeNumber(char[],int,int)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInObject(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInArray(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: void consumeNonExecutePrefix()>",
							"<com.google.gson.stream.JsonReader: void <clinit>()>",
							"<java.lang.String: char[] toCharArray()>",
							"<com.google.gson.stream.JsonReader$1: void <init>()>",
							"<com.google.gson.internal.JsonReaderInternalAccess: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.util.Scanner: boolean hasNext()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: boolean hasNext()>",
							"<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: boolean hasNext()>",
							"<java.util.ArrayList: boolean remove(java.lang.Object)>",
							"<android.util.Log: int v(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttppassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttpuser()>",
							"<org.wordpress.android.models.Blog: java.net.URI getUri()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUrl()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.net.URI: void <init>(java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void <init>(org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback)>",
							"<org.xmlrpc.android.ApiHelper$HelperAsyncTask: void <init>()>",
							"<android.os.AsyncTask: void <init>()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$7: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<android.view.View: void setVisibility(int)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: int getRemotePostCount()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.models.PostsListPost: boolean isLocalDraft()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: org.wordpress.android.ui.posts.adapters.PostsListAdapter getPostListAdapter()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$4: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: void <init>(android.content.Context,boolean,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnLoadMoreListener,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnPostsLoadedListener)>",
							"<android.widget.BaseAdapter: void <init>()>",
							"<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>",
							"<java.util.ArrayList: void <init>()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$5: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.NetworkUtils: boolean checkConnection(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: boolean isNetworkAvailable(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: android.net.NetworkInfo getActiveNetworkInfo(android.content.Context)>",
							"<android.content.Context: java.lang.Object getSystemService(java.lang.String)>",
							"<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>",
							"<android.net.NetworkInfo: boolean isConnected()>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.content.Context: java.lang.String getString(int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,java.lang.String,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.wordpress.android.WordPressDB: void updateLastBlogId(int)>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences$Editor: boolean commit()>",
							"<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>",
							"<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<org.wordpress.android.WordPressDB: org.wordpress.android.models.Blog instantiateBlogByLocalId(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<android.database.Cursor: void close()>",
							"<org.wordpress.android.models.Blog: void setHidden(boolean)>",
							"<org.wordpress.android.models.Blog: void setAdmin(boolean)>",
							"<org.wordpress.android.models.Blog: void setBlogOptions(java.lang.String)>",
							"<org.wordpress.android.models.Blog: org.json.JSONObject getBlogOptionsJSONObject()>",
							"<org.wordpress.android.models.Blog: java.lang.String getBlogOptions()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.wordpress.android.util.CrashlyticsUtils: void logException(java.lang.Throwable,org.wordpress.android.util.CrashlyticsUtils$ExceptionType,org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<java.lang.Enum: java.lang.String name()>",
							"<com.crashlytics.android.Crashlytics: void setString(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: int size()>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.v: void <init>()>",
							"<com.crashlytics.android.internal.m: void <clinit>()>",
							"<com.crashlytics.android.internal.n: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.o: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.B: void <init>(com.crashlytics.android.internal.m)>",
							"<android.os.Looper: android.os.Looper getMainLooper()>",
							"<android.os.Handler: void <init>(android.os.Looper)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String)>",
							"<com.crashlytics.android.internal.i: void <clinit>()>",
							"<com.crashlytics.android.internal.j: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String,com.crashlytics.android.internal.i)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(java.lang.String)>",
							"<java.util.HashMap: void <init>()>",
							"<com.crashlytics.android.internal.d: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<com.crashlytics.android.internal.c: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.v: int g()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>",
							"<com.crashlytics.android.internal.r: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<com.crashlytics.android.internal.ab: void <clinit>()>",
							"<com.crashlytics.android.internal.ac: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.ab: boolean f(android.content.Context)>",
							"<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.Crashlytics: void <init>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.u: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.System: long currentTimeMillis()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.u a(java.lang.Class)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: java.lang.String c(java.lang.String)>",
							"<java.lang.String: java.lang.String trim()>",
							"<java.lang.String: java.lang.String substring(int,int)>",
							"<java.lang.String: int length()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: void logException(java.lang.Throwable)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.v: void a(java.lang.Thread,java.lang.Throwable)>",
							"<java.util.Date: void <init>()>",
							"<com.crashlytics.android.v: java.util.concurrent.Future a(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.AbstractExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.G: void <init>(com.crashlytics.android.v,java.lang.Runnable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.P: void <init>(com.crashlytics.android.v,java.util.Date,java.lang.Thread,java.lang.Throwable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.A: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String,boolean)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int println(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<java.lang.Thread: java.lang.Thread currentThread()>",
							"<org.json.JSONObject: void <init>(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.json.JSONObject: java.lang.String getString(java.lang.String)>",
							"<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.json.JSONObject: boolean has(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHomeURL(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setScaledImageWidth(int)>",
							"<org.wordpress.android.models.Blog: void setScaledImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setPostFormats(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setWpVersion(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_key(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_password(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_username(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcomFlag(boolean)>",
							"<org.wordpress.android.models.Blog: void setLocation(boolean)>",
							"<org.wordpress.android.models.Blog: void setRemoteBlogId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidthId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidth(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setFullSizeImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setFeaturedImageCapable(boolean)>",
							"<android.database.Cursor: int getInt(int)>",
							"<org.wordpress.android.models.Blog: void setImagePlacement(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttppassword(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttpuser(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setPassword(java.lang.String)>",
							"<org.wordpress.android.WordPressDB: java.lang.String decryptPassword(java.lang.String)>",
							"<java.lang.String: byte[] getBytes(java.lang.String)>",
							"<java.lang.String: void <init>(byte[])>",
							"<javax.crypto.Cipher: byte[] doFinal(byte[])>",
							"<javax.crypto.Cipher: void init(int,java.security.Key)>",
							"<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
							"<android.util.Base64: byte[] decode(java.lang.String,int)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>",
							"<javax.crypto.spec.DESKeySpec: void <init>(byte[])>",
							"<org.wordpress.android.models.Blog: void setUsername(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setBlogName(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setUrl(java.lang.String)>",
							"<android.database.Cursor: int getColumnIndex(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setLocalTableBlogId(int)>",
							"<org.wordpress.android.models.Blog: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.util.List: int size()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPressDB: java.util.List getAccountsBy(java.lang.String,java.lang.String[])>",
							"<java.util.Vector: void <init>()>",
							"<java.util.Collections: void sort(java.util.List,java.util.Comparator)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: boolean moveToNext()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.util.HashMap: void <init>()>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: int getInt(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] addAll(java.lang.Object[],java.lang.Object[])>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] clone(java.lang.Object[])>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.Class: java.lang.String getName()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>",
							"<java.lang.Class: java.lang.Class getComponentType()>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlogToLastActive()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.WordPressDB: int getLastBlogId()>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences: int getInt(java.lang.String,int)>",
							"<org.wordpress.android.WordPressDB: boolean isDotComAccountVisible(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<org.wordpress.android.util.SqlUtils: boolean boolForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: boolean sqlToBool(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: org.wordpress.android.ui.posts.PostsListFragment access$100(org.wordpress.android.ui.posts.PostsActivity)>",
							"<org.wordpress.android.WordPressDB: boolean deletePost(org.wordpress.android.models.Post)>",
							"<org.wordpress.android.models.Post: int getLocalTableBlogId()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.models.Post: long getLocalTablePostId()>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void checkForLocalChanges(boolean)>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void popPostDetail()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getHTMLStringStackTrace(java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getStringStackTrace(java.lang.Throwable)>",
							"<java.io.StringWriter: void <init>()>",
							"<org.apache.commons.lang.exception.NestableError: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.NotImplementedException: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: void printStackTrace(java.io.PrintWriter)>",
							"<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableException: void printStackTrace(java.io.PrintWriter)>",
							"<java.io.PrintWriter: void <init>(java.io.Writer)>",
							"<java.io.StringWriter: java.lang.String toString()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<android.support.v4.app.FragmentManager: void popBackStack()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$5: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$4: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.WordPressDB: boolean findLocalChanges(int,boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.wordpress.android.ui.posts.PostsActivity: void attemptToSelectPost()>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setShouldSelectFirstPost(boolean)>",
							"<android.support.v4.app.Fragment: boolean isInLayout()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Object)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"android.os.AsyncTask.onPostExecute",
							"android.os.AsyncTask$Status.<clinit>",
							"android.os.AsyncTask$Status.<clinit>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<android.os.AsyncTask: void <init>()>",
							"android.os.AsyncTask$Status.<init>"
						]
					}
				]
			},
			{
				"Candidate Name":"org.wordpress.android.ui.posts.PostsListFragment.getPostListAdapter",
				"Candidate Score":90,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.AsyncTask.finish",
							"android.os.AsyncTask.isCancelled",
							"android.os.AsyncTask.onCancelled",
							"android.os.AsyncTask.onCancelled",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"<android.app.Activity: void dismissDialog(int)>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask$1: void <init>(org.wordpress.android.ui.posts.PostsActivity$deletePostTask)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHelper: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHeaderTransformer: void setShowProgressBarOnly(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void ensureAttacher()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshingInt(android.view.View,boolean,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean isDestroyed()>",
							"<android.util.Log: int i(java.lang.String,java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void reset(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<android.view.View: boolean removeCallbacks(java.lang.Runnable)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void startRefresh(android.view.View,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.OnRefreshListener: void onRefreshStarted(android.view.View)>",
							"<android.view.View: boolean post(java.lang.Runnable)>",
							"<android.view.View: boolean postDelayed(java.lang.Runnable,long)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void updateHeaderViewPosition(android.view.View)>",
							"<android.app.Activity: android.view.Window getWindow()>",
							"<android.view.View: java.lang.Object getTag()>",
							"<android.view.ViewManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>",
							"<android.app.Activity: android.view.WindowManager getWindowManager()>",
							"<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>",
							"<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>",
							"<android.view.Window: android.view.View getDecorView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: void onRefreshStarted()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean canRefresh(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void resetTouch()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: boolean hasActivity()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Object)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Boolean)>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.xmlrpc.android.ApiHelper$GenericErrorCallback: void onFailure(org.xmlrpc.android.ApiHelper$ErrorType,java.lang.String,java.lang.Throwable)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback: void onSuccess(int)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Object doInBackground(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Boolean doInBackground(java.util.List[])>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.wordpress.android.WordPressDB: void savePosts(java.util.List,int,boolean,boolean)>",
							"<java.util.List: int size()>",
							"<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>",
							"<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>",
							"<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.util.SqlUtils: long boolToSql(boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.wordpress.android.util.MapUtils: int getMapInt(java.util.Map,java.lang.String,int)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.lang.Integer: int parseInt(java.lang.String)>",
							"<java.lang.Object: boolean equals(java.lang.Object)>",
							"<org.json.JSONArray: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: int getTimezoneOffset()>",
							"<java.util.Date: void <init>(long)>",
							"<java.lang.Long: long longValue()>",
							"<android.content.ContentValues: java.lang.Object get(java.lang.String)>",
							"<android.database.sqlite.SQLiteDatabase: void endTransaction()>",
							"<java.util.Date: void <init>()>",
							"<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<org.json.JSONArray: void <init>()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>",
							"<java.lang.Long: java.lang.Long valueOf(long)>",
							"<java.util.Date: long getTime()>",
							"<org.wordpress.android.util.MapUtils: java.util.Date getMapDate(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.String)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<android.content.ContentValues: void <init>()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<android.database.sqlite.SQLiteDatabase: void beginTransaction()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<org.wordpress.android.WordPressDB: void deleteUploadedPosts(int,boolean)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.xmlrpc.android.XMLRPCClientInterface: java.lang.Object call(java.lang.String,java.lang.Object[])>",
							"<org.wordpress.android.models.Blog: java.lang.String getPassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUsername()>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.xmlrpc.android.XMLRPCFactory: org.xmlrpc.android.XMLRPCClientInterface instantiate(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.xmlrpc.android.XMLRPCFactoryDefault: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.xmlrpc.android.XMLRPCFactoryAbstract: org.xmlrpc.android.XMLRPCClientInterface make(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void v(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean access$300(org.wordpress.android.util.AppLog$LogEntryList,org.wordpress.android.util.AppLog$LogEntry)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean addEntry(org.wordpress.android.util.AppLog$LogEntry)>",
							"<java.util.ArrayList: int size()>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void removeFirstEntry()>",
							"<java.util.ArrayList: java.util.Iterator iterator()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$EntrySet$1: java.util.Map$Entry next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt(int)>",
							"<org.apache.commons.lang.math.JVMRandom: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<java.util.Random: int nextInt(int)>",
							"<java.util.Random: int nextInt()>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object next()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: void checkTokenized()>",
							"<java.lang.String: void <clinit>()>",
							"<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.List: int size()>",
							"<java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.Vector: int size()>",
							"<java.util.ArrayList: int size()>",
							"<java.util.LinkedList: int size()>",
							"<java.util.concurrent.CopyOnWriteArrayList: int size()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer: java.util.List tokenize(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.Collections: void <clinit>()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<java.lang.String: int length()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: boolean add(java.lang.Object)>",
							"<java.util.AbstractList: boolean add(java.lang.Object)>",
							"<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<java.util.LinkedList: boolean add(java.lang.Object)>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isEmptyTokenAsNull()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isIgnoreEmptyTokens()>",
							"<org.apache.commons.lang.text.StrTokenizer: int readNextToken(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List)>",
							"<java.lang.Math: int max(int,int)>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<java.util.Arrays: int binarySearch(char[],char)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: int readWithQuotes(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder clear()>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isQuote(char[],int,int,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.String substring(int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int validateRange(int,int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char[],int,int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(int)>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder appendNull()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getQuoteMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void <init>()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: java.lang.Object next()>",
							"<java.util.GregorianCalendar: boolean equals(java.lang.Object)>",
							"<java.util.Calendar: void add(int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.GregorianCalendar: void add(int,int)>",
							"<java.util.Calendar: boolean equals(java.lang.Object)>",
							"<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$KeySet$1: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap$Values$1: java.lang.Object next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: java.lang.Object next()>",
							"<java.lang.Character: void <clinit>()>",
							"<java.lang.Character: void <init>(char)>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: void prepareNext()>",
							"<org.apache.commons.lang.CharRange: boolean access$100(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$200(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$300(org.apache.commons.lang.CharRange)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: java.lang.Object next()>",
							"<java.util.Scanner: java.lang.String next()>",
							"<android.support.v4.util.MapCollections$MapIterator: java.util.Map$Entry next()>",
							"<android.support.v4.util.MapCollections$MapIterator: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: boolean hasNext()>",
							"<java.util.Calendar: boolean before(java.lang.Object)>",
							"<com.google.gson.JsonStreamParser: boolean hasNext()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<com.google.gson.JsonIOException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<java.lang.RuntimeException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonSyntaxException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>",
							"<com.google.gson.stream.JsonReader$2: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: com.google.gson.stream.JsonScope[] values()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.support.v4.util.SparseArrayCompat: android.support.v4.util.SparseArrayCompat clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object cloneReset()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: java.lang.Object clone()>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrTokenizer reset()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.MalformedJsonException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.io.Reader: int read(char[],int,int)>",
							"<com.google.gson.internal.bind.JsonTreeReader$1: int read(char[],int,int)>",
							"<java.lang.AssertionError: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderReader: int read(char[],int,int)>",
							"<java.lang.IndexOutOfBoundsException: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void getChars(int,int,char[],int)>",
							"<java.lang.System: void <clinit>()>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<java.io.BufferedReader: int read(char[],int,int)>",
							"<java.io.InputStreamReader: int read(char[],int,int)>",
							"<java.io.FilterReader: int read(char[],int,int)>",
							"<java.io.PushbackReader: int read(char[],int,int)>",
							"<java.io.StringReader: int read(char[],int,int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.io.EOFException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: void skipToEndOfLine()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean skipTo(java.lang.String)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.String: char charAt(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken objectValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<java.lang.String: char charAt(int)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: char readEscapeCharacter()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.NumberFormatException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: void push(com.google.gson.stream.JsonScope)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken readLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeNumber(char[],int,int)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInObject(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInArray(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: void consumeNonExecutePrefix()>",
							"<com.google.gson.stream.JsonReader: void <clinit>()>",
							"<java.lang.String: char[] toCharArray()>",
							"<com.google.gson.stream.JsonReader$1: void <init>()>",
							"<com.google.gson.internal.JsonReaderInternalAccess: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.util.Scanner: boolean hasNext()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: boolean hasNext()>",
							"<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: boolean hasNext()>",
							"<java.util.ArrayList: boolean remove(java.lang.Object)>",
							"<android.util.Log: int v(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttppassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttpuser()>",
							"<org.wordpress.android.models.Blog: java.net.URI getUri()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUrl()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.net.URI: void <init>(java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void <init>(org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback)>",
							"<org.xmlrpc.android.ApiHelper$HelperAsyncTask: void <init>()>",
							"<android.os.AsyncTask: void <init>()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$7: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<android.view.View: void setVisibility(int)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: int getRemotePostCount()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.models.PostsListPost: boolean isLocalDraft()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: org.wordpress.android.ui.posts.adapters.PostsListAdapter getPostListAdapter()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$4: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: void <init>(android.content.Context,boolean,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnLoadMoreListener,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnPostsLoadedListener)>",
							"<android.widget.BaseAdapter: void <init>()>",
							"<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>",
							"<java.util.ArrayList: void <init>()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$5: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.NetworkUtils: boolean checkConnection(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: boolean isNetworkAvailable(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: android.net.NetworkInfo getActiveNetworkInfo(android.content.Context)>",
							"<android.content.Context: java.lang.Object getSystemService(java.lang.String)>",
							"<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>",
							"<android.net.NetworkInfo: boolean isConnected()>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.content.Context: java.lang.String getString(int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,java.lang.String,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.wordpress.android.WordPressDB: void updateLastBlogId(int)>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences$Editor: boolean commit()>",
							"<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>",
							"<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<org.wordpress.android.WordPressDB: org.wordpress.android.models.Blog instantiateBlogByLocalId(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<android.database.Cursor: void close()>",
							"<org.wordpress.android.models.Blog: void setHidden(boolean)>",
							"<org.wordpress.android.models.Blog: void setAdmin(boolean)>",
							"<org.wordpress.android.models.Blog: void setBlogOptions(java.lang.String)>",
							"<org.wordpress.android.models.Blog: org.json.JSONObject getBlogOptionsJSONObject()>",
							"<org.wordpress.android.models.Blog: java.lang.String getBlogOptions()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.wordpress.android.util.CrashlyticsUtils: void logException(java.lang.Throwable,org.wordpress.android.util.CrashlyticsUtils$ExceptionType,org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<java.lang.Enum: java.lang.String name()>",
							"<com.crashlytics.android.Crashlytics: void setString(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: int size()>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.v: void <init>()>",
							"<com.crashlytics.android.internal.m: void <clinit>()>",
							"<com.crashlytics.android.internal.n: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.o: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.B: void <init>(com.crashlytics.android.internal.m)>",
							"<android.os.Looper: android.os.Looper getMainLooper()>",
							"<android.os.Handler: void <init>(android.os.Looper)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String)>",
							"<com.crashlytics.android.internal.i: void <clinit>()>",
							"<com.crashlytics.android.internal.j: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String,com.crashlytics.android.internal.i)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(java.lang.String)>",
							"<java.util.HashMap: void <init>()>",
							"<com.crashlytics.android.internal.d: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<com.crashlytics.android.internal.c: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.v: int g()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>",
							"<com.crashlytics.android.internal.r: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<com.crashlytics.android.internal.ab: void <clinit>()>",
							"<com.crashlytics.android.internal.ac: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.ab: boolean f(android.content.Context)>",
							"<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.Crashlytics: void <init>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.u: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.System: long currentTimeMillis()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.u a(java.lang.Class)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: java.lang.String c(java.lang.String)>",
							"<java.lang.String: java.lang.String trim()>",
							"<java.lang.String: java.lang.String substring(int,int)>",
							"<java.lang.String: int length()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: void logException(java.lang.Throwable)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.v: void a(java.lang.Thread,java.lang.Throwable)>",
							"<java.util.Date: void <init>()>",
							"<com.crashlytics.android.v: java.util.concurrent.Future a(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.AbstractExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.G: void <init>(com.crashlytics.android.v,java.lang.Runnable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.P: void <init>(com.crashlytics.android.v,java.util.Date,java.lang.Thread,java.lang.Throwable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.A: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String,boolean)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int println(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<java.lang.Thread: java.lang.Thread currentThread()>",
							"<org.json.JSONObject: void <init>(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.json.JSONObject: java.lang.String getString(java.lang.String)>",
							"<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.json.JSONObject: boolean has(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHomeURL(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setScaledImageWidth(int)>",
							"<org.wordpress.android.models.Blog: void setScaledImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setPostFormats(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setWpVersion(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_key(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_password(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_username(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcomFlag(boolean)>",
							"<org.wordpress.android.models.Blog: void setLocation(boolean)>",
							"<org.wordpress.android.models.Blog: void setRemoteBlogId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidthId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidth(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setFullSizeImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setFeaturedImageCapable(boolean)>",
							"<android.database.Cursor: int getInt(int)>",
							"<org.wordpress.android.models.Blog: void setImagePlacement(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttppassword(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttpuser(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setPassword(java.lang.String)>",
							"<org.wordpress.android.WordPressDB: java.lang.String decryptPassword(java.lang.String)>",
							"<java.lang.String: byte[] getBytes(java.lang.String)>",
							"<java.lang.String: void <init>(byte[])>",
							"<javax.crypto.Cipher: byte[] doFinal(byte[])>",
							"<javax.crypto.Cipher: void init(int,java.security.Key)>",
							"<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
							"<android.util.Base64: byte[] decode(java.lang.String,int)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>",
							"<javax.crypto.spec.DESKeySpec: void <init>(byte[])>",
							"<org.wordpress.android.models.Blog: void setUsername(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setBlogName(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setUrl(java.lang.String)>",
							"<android.database.Cursor: int getColumnIndex(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setLocalTableBlogId(int)>",
							"<org.wordpress.android.models.Blog: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.util.List: int size()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPressDB: java.util.List getAccountsBy(java.lang.String,java.lang.String[])>",
							"<java.util.Vector: void <init>()>",
							"<java.util.Collections: void sort(java.util.List,java.util.Comparator)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: boolean moveToNext()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.util.HashMap: void <init>()>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: int getInt(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] addAll(java.lang.Object[],java.lang.Object[])>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] clone(java.lang.Object[])>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.Class: java.lang.String getName()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>",
							"<java.lang.Class: java.lang.Class getComponentType()>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlogToLastActive()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.WordPressDB: int getLastBlogId()>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences: int getInt(java.lang.String,int)>",
							"<org.wordpress.android.WordPressDB: boolean isDotComAccountVisible(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<org.wordpress.android.util.SqlUtils: boolean boolForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: boolean sqlToBool(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: org.wordpress.android.ui.posts.PostsListFragment access$100(org.wordpress.android.ui.posts.PostsActivity)>",
							"<org.wordpress.android.WordPressDB: boolean deletePost(org.wordpress.android.models.Post)>",
							"<org.wordpress.android.models.Post: int getLocalTableBlogId()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.models.Post: long getLocalTablePostId()>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void checkForLocalChanges(boolean)>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void popPostDetail()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getHTMLStringStackTrace(java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getStringStackTrace(java.lang.Throwable)>",
							"<java.io.StringWriter: void <init>()>",
							"<org.apache.commons.lang.exception.NestableError: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.NotImplementedException: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: void printStackTrace(java.io.PrintWriter)>",
							"<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableException: void printStackTrace(java.io.PrintWriter)>",
							"<java.io.PrintWriter: void <init>(java.io.Writer)>",
							"<java.io.StringWriter: java.lang.String toString()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<android.support.v4.app.FragmentManager: void popBackStack()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$5: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$4: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.WordPressDB: boolean findLocalChanges(int,boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.wordpress.android.ui.posts.PostsActivity: void attemptToSelectPost()>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setShouldSelectFirstPost(boolean)>",
							"<android.support.v4.app.Fragment: boolean isInLayout()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Object)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"android.os.AsyncTask.onPostExecute",
							"android.os.AsyncTask$Status.<clinit>",
							"android.os.AsyncTask$Status.<clinit>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<android.os.AsyncTask: void <init>()>",
							"android.os.AsyncTask$Status.<init>"
						]
					}
				]
			},
			{
				"Candidate Name":"org.wordpress.android.ui.posts.PostsListFragment.hasActivity",
				"Candidate Score":90,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.AsyncTask.finish",
							"android.os.AsyncTask.isCancelled",
							"android.os.AsyncTask.onCancelled",
							"android.os.AsyncTask.onCancelled",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"<android.app.Activity: void dismissDialog(int)>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask$1: void <init>(org.wordpress.android.ui.posts.PostsActivity$deletePostTask)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHelper: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHeaderTransformer: void setShowProgressBarOnly(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void ensureAttacher()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshingInt(android.view.View,boolean,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean isDestroyed()>",
							"<android.util.Log: int i(java.lang.String,java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void reset(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<android.view.View: boolean removeCallbacks(java.lang.Runnable)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void startRefresh(android.view.View,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.OnRefreshListener: void onRefreshStarted(android.view.View)>",
							"<android.view.View: boolean post(java.lang.Runnable)>",
							"<android.view.View: boolean postDelayed(java.lang.Runnable,long)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void updateHeaderViewPosition(android.view.View)>",
							"<android.app.Activity: android.view.Window getWindow()>",
							"<android.view.View: java.lang.Object getTag()>",
							"<android.view.ViewManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>",
							"<android.app.Activity: android.view.WindowManager getWindowManager()>",
							"<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>",
							"<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>",
							"<android.view.Window: android.view.View getDecorView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: void onRefreshStarted()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean canRefresh(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void resetTouch()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: boolean hasActivity()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Object)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Boolean)>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.xmlrpc.android.ApiHelper$GenericErrorCallback: void onFailure(org.xmlrpc.android.ApiHelper$ErrorType,java.lang.String,java.lang.Throwable)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback: void onSuccess(int)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Object doInBackground(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Boolean doInBackground(java.util.List[])>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.wordpress.android.WordPressDB: void savePosts(java.util.List,int,boolean,boolean)>",
							"<java.util.List: int size()>",
							"<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>",
							"<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>",
							"<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.util.SqlUtils: long boolToSql(boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.wordpress.android.util.MapUtils: int getMapInt(java.util.Map,java.lang.String,int)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.lang.Integer: int parseInt(java.lang.String)>",
							"<java.lang.Object: boolean equals(java.lang.Object)>",
							"<org.json.JSONArray: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: int getTimezoneOffset()>",
							"<java.util.Date: void <init>(long)>",
							"<java.lang.Long: long longValue()>",
							"<android.content.ContentValues: java.lang.Object get(java.lang.String)>",
							"<android.database.sqlite.SQLiteDatabase: void endTransaction()>",
							"<java.util.Date: void <init>()>",
							"<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<org.json.JSONArray: void <init>()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>",
							"<java.lang.Long: java.lang.Long valueOf(long)>",
							"<java.util.Date: long getTime()>",
							"<org.wordpress.android.util.MapUtils: java.util.Date getMapDate(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.String)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<android.content.ContentValues: void <init>()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<android.database.sqlite.SQLiteDatabase: void beginTransaction()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<org.wordpress.android.WordPressDB: void deleteUploadedPosts(int,boolean)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.xmlrpc.android.XMLRPCClientInterface: java.lang.Object call(java.lang.String,java.lang.Object[])>",
							"<org.wordpress.android.models.Blog: java.lang.String getPassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUsername()>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.xmlrpc.android.XMLRPCFactory: org.xmlrpc.android.XMLRPCClientInterface instantiate(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.xmlrpc.android.XMLRPCFactoryDefault: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.xmlrpc.android.XMLRPCFactoryAbstract: org.xmlrpc.android.XMLRPCClientInterface make(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void v(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean access$300(org.wordpress.android.util.AppLog$LogEntryList,org.wordpress.android.util.AppLog$LogEntry)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean addEntry(org.wordpress.android.util.AppLog$LogEntry)>",
							"<java.util.ArrayList: int size()>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void removeFirstEntry()>",
							"<java.util.ArrayList: java.util.Iterator iterator()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$EntrySet$1: java.util.Map$Entry next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt(int)>",
							"<org.apache.commons.lang.math.JVMRandom: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<java.util.Random: int nextInt(int)>",
							"<java.util.Random: int nextInt()>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object next()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: void checkTokenized()>",
							"<java.lang.String: void <clinit>()>",
							"<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.List: int size()>",
							"<java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.Vector: int size()>",
							"<java.util.ArrayList: int size()>",
							"<java.util.LinkedList: int size()>",
							"<java.util.concurrent.CopyOnWriteArrayList: int size()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer: java.util.List tokenize(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.Collections: void <clinit>()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<java.lang.String: int length()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: boolean add(java.lang.Object)>",
							"<java.util.AbstractList: boolean add(java.lang.Object)>",
							"<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<java.util.LinkedList: boolean add(java.lang.Object)>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isEmptyTokenAsNull()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isIgnoreEmptyTokens()>",
							"<org.apache.commons.lang.text.StrTokenizer: int readNextToken(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List)>",
							"<java.lang.Math: int max(int,int)>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<java.util.Arrays: int binarySearch(char[],char)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: int readWithQuotes(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder clear()>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isQuote(char[],int,int,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.String substring(int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int validateRange(int,int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char[],int,int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(int)>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder appendNull()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getQuoteMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void <init>()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: java.lang.Object next()>",
							"<java.util.GregorianCalendar: boolean equals(java.lang.Object)>",
							"<java.util.Calendar: void add(int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.GregorianCalendar: void add(int,int)>",
							"<java.util.Calendar: boolean equals(java.lang.Object)>",
							"<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$KeySet$1: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap$Values$1: java.lang.Object next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: java.lang.Object next()>",
							"<java.lang.Character: void <clinit>()>",
							"<java.lang.Character: void <init>(char)>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: void prepareNext()>",
							"<org.apache.commons.lang.CharRange: boolean access$100(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$200(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$300(org.apache.commons.lang.CharRange)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: java.lang.Object next()>",
							"<java.util.Scanner: java.lang.String next()>",
							"<android.support.v4.util.MapCollections$MapIterator: java.util.Map$Entry next()>",
							"<android.support.v4.util.MapCollections$MapIterator: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: boolean hasNext()>",
							"<java.util.Calendar: boolean before(java.lang.Object)>",
							"<com.google.gson.JsonStreamParser: boolean hasNext()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<com.google.gson.JsonIOException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<java.lang.RuntimeException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonSyntaxException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>",
							"<com.google.gson.stream.JsonReader$2: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: com.google.gson.stream.JsonScope[] values()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.support.v4.util.SparseArrayCompat: android.support.v4.util.SparseArrayCompat clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object cloneReset()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: java.lang.Object clone()>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrTokenizer reset()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.MalformedJsonException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.io.Reader: int read(char[],int,int)>",
							"<com.google.gson.internal.bind.JsonTreeReader$1: int read(char[],int,int)>",
							"<java.lang.AssertionError: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderReader: int read(char[],int,int)>",
							"<java.lang.IndexOutOfBoundsException: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void getChars(int,int,char[],int)>",
							"<java.lang.System: void <clinit>()>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<java.io.BufferedReader: int read(char[],int,int)>",
							"<java.io.InputStreamReader: int read(char[],int,int)>",
							"<java.io.FilterReader: int read(char[],int,int)>",
							"<java.io.PushbackReader: int read(char[],int,int)>",
							"<java.io.StringReader: int read(char[],int,int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.io.EOFException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: void skipToEndOfLine()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean skipTo(java.lang.String)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.String: char charAt(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken objectValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<java.lang.String: char charAt(int)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: char readEscapeCharacter()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.NumberFormatException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: void push(com.google.gson.stream.JsonScope)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken readLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeNumber(char[],int,int)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInObject(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInArray(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: void consumeNonExecutePrefix()>",
							"<com.google.gson.stream.JsonReader: void <clinit>()>",
							"<java.lang.String: char[] toCharArray()>",
							"<com.google.gson.stream.JsonReader$1: void <init>()>",
							"<com.google.gson.internal.JsonReaderInternalAccess: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.util.Scanner: boolean hasNext()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: boolean hasNext()>",
							"<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: boolean hasNext()>",
							"<java.util.ArrayList: boolean remove(java.lang.Object)>",
							"<android.util.Log: int v(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttppassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttpuser()>",
							"<org.wordpress.android.models.Blog: java.net.URI getUri()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUrl()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.net.URI: void <init>(java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void <init>(org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback)>",
							"<org.xmlrpc.android.ApiHelper$HelperAsyncTask: void <init>()>",
							"<android.os.AsyncTask: void <init>()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$7: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<android.view.View: void setVisibility(int)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: int getRemotePostCount()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.models.PostsListPost: boolean isLocalDraft()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: org.wordpress.android.ui.posts.adapters.PostsListAdapter getPostListAdapter()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$4: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: void <init>(android.content.Context,boolean,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnLoadMoreListener,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnPostsLoadedListener)>",
							"<android.widget.BaseAdapter: void <init>()>",
							"<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>",
							"<java.util.ArrayList: void <init>()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$5: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.NetworkUtils: boolean checkConnection(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: boolean isNetworkAvailable(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: android.net.NetworkInfo getActiveNetworkInfo(android.content.Context)>",
							"<android.content.Context: java.lang.Object getSystemService(java.lang.String)>",
							"<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>",
							"<android.net.NetworkInfo: boolean isConnected()>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.content.Context: java.lang.String getString(int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,java.lang.String,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.wordpress.android.WordPressDB: void updateLastBlogId(int)>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences$Editor: boolean commit()>",
							"<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>",
							"<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<org.wordpress.android.WordPressDB: org.wordpress.android.models.Blog instantiateBlogByLocalId(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<android.database.Cursor: void close()>",
							"<org.wordpress.android.models.Blog: void setHidden(boolean)>",
							"<org.wordpress.android.models.Blog: void setAdmin(boolean)>",
							"<org.wordpress.android.models.Blog: void setBlogOptions(java.lang.String)>",
							"<org.wordpress.android.models.Blog: org.json.JSONObject getBlogOptionsJSONObject()>",
							"<org.wordpress.android.models.Blog: java.lang.String getBlogOptions()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.wordpress.android.util.CrashlyticsUtils: void logException(java.lang.Throwable,org.wordpress.android.util.CrashlyticsUtils$ExceptionType,org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<java.lang.Enum: java.lang.String name()>",
							"<com.crashlytics.android.Crashlytics: void setString(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: int size()>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.v: void <init>()>",
							"<com.crashlytics.android.internal.m: void <clinit>()>",
							"<com.crashlytics.android.internal.n: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.o: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.B: void <init>(com.crashlytics.android.internal.m)>",
							"<android.os.Looper: android.os.Looper getMainLooper()>",
							"<android.os.Handler: void <init>(android.os.Looper)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String)>",
							"<com.crashlytics.android.internal.i: void <clinit>()>",
							"<com.crashlytics.android.internal.j: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String,com.crashlytics.android.internal.i)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(java.lang.String)>",
							"<java.util.HashMap: void <init>()>",
							"<com.crashlytics.android.internal.d: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<com.crashlytics.android.internal.c: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.v: int g()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>",
							"<com.crashlytics.android.internal.r: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<com.crashlytics.android.internal.ab: void <clinit>()>",
							"<com.crashlytics.android.internal.ac: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.ab: boolean f(android.content.Context)>",
							"<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.Crashlytics: void <init>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.u: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.System: long currentTimeMillis()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.u a(java.lang.Class)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: java.lang.String c(java.lang.String)>",
							"<java.lang.String: java.lang.String trim()>",
							"<java.lang.String: java.lang.String substring(int,int)>",
							"<java.lang.String: int length()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: void logException(java.lang.Throwable)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.v: void a(java.lang.Thread,java.lang.Throwable)>",
							"<java.util.Date: void <init>()>",
							"<com.crashlytics.android.v: java.util.concurrent.Future a(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.AbstractExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.G: void <init>(com.crashlytics.android.v,java.lang.Runnable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.P: void <init>(com.crashlytics.android.v,java.util.Date,java.lang.Thread,java.lang.Throwable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.A: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String,boolean)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int println(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<java.lang.Thread: java.lang.Thread currentThread()>",
							"<org.json.JSONObject: void <init>(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.json.JSONObject: java.lang.String getString(java.lang.String)>",
							"<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.json.JSONObject: boolean has(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHomeURL(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setScaledImageWidth(int)>",
							"<org.wordpress.android.models.Blog: void setScaledImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setPostFormats(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setWpVersion(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_key(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_password(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_username(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcomFlag(boolean)>",
							"<org.wordpress.android.models.Blog: void setLocation(boolean)>",
							"<org.wordpress.android.models.Blog: void setRemoteBlogId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidthId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidth(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setFullSizeImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setFeaturedImageCapable(boolean)>",
							"<android.database.Cursor: int getInt(int)>",
							"<org.wordpress.android.models.Blog: void setImagePlacement(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttppassword(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttpuser(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setPassword(java.lang.String)>",
							"<org.wordpress.android.WordPressDB: java.lang.String decryptPassword(java.lang.String)>",
							"<java.lang.String: byte[] getBytes(java.lang.String)>",
							"<java.lang.String: void <init>(byte[])>",
							"<javax.crypto.Cipher: byte[] doFinal(byte[])>",
							"<javax.crypto.Cipher: void init(int,java.security.Key)>",
							"<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
							"<android.util.Base64: byte[] decode(java.lang.String,int)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>",
							"<javax.crypto.spec.DESKeySpec: void <init>(byte[])>",
							"<org.wordpress.android.models.Blog: void setUsername(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setBlogName(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setUrl(java.lang.String)>",
							"<android.database.Cursor: int getColumnIndex(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setLocalTableBlogId(int)>",
							"<org.wordpress.android.models.Blog: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.util.List: int size()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPressDB: java.util.List getAccountsBy(java.lang.String,java.lang.String[])>",
							"<java.util.Vector: void <init>()>",
							"<java.util.Collections: void sort(java.util.List,java.util.Comparator)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: boolean moveToNext()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.util.HashMap: void <init>()>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: int getInt(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] addAll(java.lang.Object[],java.lang.Object[])>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] clone(java.lang.Object[])>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.Class: java.lang.String getName()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>",
							"<java.lang.Class: java.lang.Class getComponentType()>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlogToLastActive()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.WordPressDB: int getLastBlogId()>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences: int getInt(java.lang.String,int)>",
							"<org.wordpress.android.WordPressDB: boolean isDotComAccountVisible(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<org.wordpress.android.util.SqlUtils: boolean boolForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: boolean sqlToBool(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: org.wordpress.android.ui.posts.PostsListFragment access$100(org.wordpress.android.ui.posts.PostsActivity)>",
							"<org.wordpress.android.WordPressDB: boolean deletePost(org.wordpress.android.models.Post)>",
							"<org.wordpress.android.models.Post: int getLocalTableBlogId()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.models.Post: long getLocalTablePostId()>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void checkForLocalChanges(boolean)>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void popPostDetail()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getHTMLStringStackTrace(java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getStringStackTrace(java.lang.Throwable)>",
							"<java.io.StringWriter: void <init>()>",
							"<org.apache.commons.lang.exception.NestableError: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.NotImplementedException: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: void printStackTrace(java.io.PrintWriter)>",
							"<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableException: void printStackTrace(java.io.PrintWriter)>",
							"<java.io.PrintWriter: void <init>(java.io.Writer)>",
							"<java.io.StringWriter: java.lang.String toString()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<android.support.v4.app.FragmentManager: void popBackStack()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$5: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$4: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.WordPressDB: boolean findLocalChanges(int,boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.wordpress.android.ui.posts.PostsActivity: void attemptToSelectPost()>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setShouldSelectFirstPost(boolean)>",
							"<android.support.v4.app.Fragment: boolean isInLayout()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Object)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"android.os.AsyncTask.onPostExecute",
							"android.os.AsyncTask$Status.<clinit>",
							"android.os.AsyncTask$Status.<clinit>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<android.os.AsyncTask: void <init>()>",
							"android.os.AsyncTask$Status.<init>"
						]
					}
				]
			},
			{
				"Candidate Name":"org.wordpress.android.ui.posts.PostsListFragment.setShouldSelectFirstPost",
				"Candidate Score":90,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.AsyncTask.finish",
							"android.os.AsyncTask.isCancelled",
							"android.os.AsyncTask.onCancelled",
							"android.os.AsyncTask.onCancelled",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"<android.app.Activity: void dismissDialog(int)>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask$1: void <init>(org.wordpress.android.ui.posts.PostsActivity$deletePostTask)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHelper: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHeaderTransformer: void setShowProgressBarOnly(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void ensureAttacher()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshingInt(android.view.View,boolean,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean isDestroyed()>",
							"<android.util.Log: int i(java.lang.String,java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void reset(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<android.view.View: boolean removeCallbacks(java.lang.Runnable)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void startRefresh(android.view.View,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.OnRefreshListener: void onRefreshStarted(android.view.View)>",
							"<android.view.View: boolean post(java.lang.Runnable)>",
							"<android.view.View: boolean postDelayed(java.lang.Runnable,long)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void updateHeaderViewPosition(android.view.View)>",
							"<android.app.Activity: android.view.Window getWindow()>",
							"<android.view.View: java.lang.Object getTag()>",
							"<android.view.ViewManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>",
							"<android.app.Activity: android.view.WindowManager getWindowManager()>",
							"<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>",
							"<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>",
							"<android.view.Window: android.view.View getDecorView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: void onRefreshStarted()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean canRefresh(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void resetTouch()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: boolean hasActivity()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Object)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Boolean)>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.xmlrpc.android.ApiHelper$GenericErrorCallback: void onFailure(org.xmlrpc.android.ApiHelper$ErrorType,java.lang.String,java.lang.Throwable)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback: void onSuccess(int)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Object doInBackground(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Boolean doInBackground(java.util.List[])>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.wordpress.android.WordPressDB: void savePosts(java.util.List,int,boolean,boolean)>",
							"<java.util.List: int size()>",
							"<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>",
							"<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>",
							"<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.util.SqlUtils: long boolToSql(boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.wordpress.android.util.MapUtils: int getMapInt(java.util.Map,java.lang.String,int)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.lang.Integer: int parseInt(java.lang.String)>",
							"<java.lang.Object: boolean equals(java.lang.Object)>",
							"<org.json.JSONArray: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: int getTimezoneOffset()>",
							"<java.util.Date: void <init>(long)>",
							"<java.lang.Long: long longValue()>",
							"<android.content.ContentValues: java.lang.Object get(java.lang.String)>",
							"<android.database.sqlite.SQLiteDatabase: void endTransaction()>",
							"<java.util.Date: void <init>()>",
							"<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<org.json.JSONArray: void <init>()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>",
							"<java.lang.Long: java.lang.Long valueOf(long)>",
							"<java.util.Date: long getTime()>",
							"<org.wordpress.android.util.MapUtils: java.util.Date getMapDate(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.String)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<android.content.ContentValues: void <init>()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<android.database.sqlite.SQLiteDatabase: void beginTransaction()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<org.wordpress.android.WordPressDB: void deleteUploadedPosts(int,boolean)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.xmlrpc.android.XMLRPCClientInterface: java.lang.Object call(java.lang.String,java.lang.Object[])>",
							"<org.wordpress.android.models.Blog: java.lang.String getPassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUsername()>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.xmlrpc.android.XMLRPCFactory: org.xmlrpc.android.XMLRPCClientInterface instantiate(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.xmlrpc.android.XMLRPCFactoryDefault: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.xmlrpc.android.XMLRPCFactoryAbstract: org.xmlrpc.android.XMLRPCClientInterface make(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void v(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean access$300(org.wordpress.android.util.AppLog$LogEntryList,org.wordpress.android.util.AppLog$LogEntry)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean addEntry(org.wordpress.android.util.AppLog$LogEntry)>",
							"<java.util.ArrayList: int size()>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void removeFirstEntry()>",
							"<java.util.ArrayList: java.util.Iterator iterator()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$EntrySet$1: java.util.Map$Entry next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt(int)>",
							"<org.apache.commons.lang.math.JVMRandom: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<java.util.Random: int nextInt(int)>",
							"<java.util.Random: int nextInt()>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object next()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: void checkTokenized()>",
							"<java.lang.String: void <clinit>()>",
							"<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.List: int size()>",
							"<java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.Vector: int size()>",
							"<java.util.ArrayList: int size()>",
							"<java.util.LinkedList: int size()>",
							"<java.util.concurrent.CopyOnWriteArrayList: int size()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer: java.util.List tokenize(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.Collections: void <clinit>()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<java.lang.String: int length()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: boolean add(java.lang.Object)>",
							"<java.util.AbstractList: boolean add(java.lang.Object)>",
							"<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<java.util.LinkedList: boolean add(java.lang.Object)>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isEmptyTokenAsNull()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isIgnoreEmptyTokens()>",
							"<org.apache.commons.lang.text.StrTokenizer: int readNextToken(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List)>",
							"<java.lang.Math: int max(int,int)>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<java.util.Arrays: int binarySearch(char[],char)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: int readWithQuotes(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder clear()>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isQuote(char[],int,int,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.String substring(int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int validateRange(int,int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char[],int,int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(int)>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder appendNull()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getQuoteMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void <init>()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: java.lang.Object next()>",
							"<java.util.GregorianCalendar: boolean equals(java.lang.Object)>",
							"<java.util.Calendar: void add(int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.GregorianCalendar: void add(int,int)>",
							"<java.util.Calendar: boolean equals(java.lang.Object)>",
							"<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$KeySet$1: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap$Values$1: java.lang.Object next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: java.lang.Object next()>",
							"<java.lang.Character: void <clinit>()>",
							"<java.lang.Character: void <init>(char)>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: void prepareNext()>",
							"<org.apache.commons.lang.CharRange: boolean access$100(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$200(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$300(org.apache.commons.lang.CharRange)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: java.lang.Object next()>",
							"<java.util.Scanner: java.lang.String next()>",
							"<android.support.v4.util.MapCollections$MapIterator: java.util.Map$Entry next()>",
							"<android.support.v4.util.MapCollections$MapIterator: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: boolean hasNext()>",
							"<java.util.Calendar: boolean before(java.lang.Object)>",
							"<com.google.gson.JsonStreamParser: boolean hasNext()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<com.google.gson.JsonIOException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<java.lang.RuntimeException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonSyntaxException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>",
							"<com.google.gson.stream.JsonReader$2: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: com.google.gson.stream.JsonScope[] values()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.support.v4.util.SparseArrayCompat: android.support.v4.util.SparseArrayCompat clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object cloneReset()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: java.lang.Object clone()>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrTokenizer reset()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.MalformedJsonException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.io.Reader: int read(char[],int,int)>",
							"<com.google.gson.internal.bind.JsonTreeReader$1: int read(char[],int,int)>",
							"<java.lang.AssertionError: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderReader: int read(char[],int,int)>",
							"<java.lang.IndexOutOfBoundsException: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void getChars(int,int,char[],int)>",
							"<java.lang.System: void <clinit>()>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<java.io.BufferedReader: int read(char[],int,int)>",
							"<java.io.InputStreamReader: int read(char[],int,int)>",
							"<java.io.FilterReader: int read(char[],int,int)>",
							"<java.io.PushbackReader: int read(char[],int,int)>",
							"<java.io.StringReader: int read(char[],int,int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.io.EOFException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: void skipToEndOfLine()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean skipTo(java.lang.String)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.String: char charAt(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken objectValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<java.lang.String: char charAt(int)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: char readEscapeCharacter()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.NumberFormatException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: void push(com.google.gson.stream.JsonScope)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken readLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeNumber(char[],int,int)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInObject(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInArray(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: void consumeNonExecutePrefix()>",
							"<com.google.gson.stream.JsonReader: void <clinit>()>",
							"<java.lang.String: char[] toCharArray()>",
							"<com.google.gson.stream.JsonReader$1: void <init>()>",
							"<com.google.gson.internal.JsonReaderInternalAccess: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.util.Scanner: boolean hasNext()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: boolean hasNext()>",
							"<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: boolean hasNext()>",
							"<java.util.ArrayList: boolean remove(java.lang.Object)>",
							"<android.util.Log: int v(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttppassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttpuser()>",
							"<org.wordpress.android.models.Blog: java.net.URI getUri()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUrl()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.net.URI: void <init>(java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void <init>(org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback)>",
							"<org.xmlrpc.android.ApiHelper$HelperAsyncTask: void <init>()>",
							"<android.os.AsyncTask: void <init>()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$7: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<android.view.View: void setVisibility(int)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: int getRemotePostCount()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.models.PostsListPost: boolean isLocalDraft()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: org.wordpress.android.ui.posts.adapters.PostsListAdapter getPostListAdapter()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$4: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: void <init>(android.content.Context,boolean,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnLoadMoreListener,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnPostsLoadedListener)>",
							"<android.widget.BaseAdapter: void <init>()>",
							"<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>",
							"<java.util.ArrayList: void <init>()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$5: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.NetworkUtils: boolean checkConnection(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: boolean isNetworkAvailable(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: android.net.NetworkInfo getActiveNetworkInfo(android.content.Context)>",
							"<android.content.Context: java.lang.Object getSystemService(java.lang.String)>",
							"<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>",
							"<android.net.NetworkInfo: boolean isConnected()>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.content.Context: java.lang.String getString(int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,java.lang.String,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.wordpress.android.WordPressDB: void updateLastBlogId(int)>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences$Editor: boolean commit()>",
							"<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>",
							"<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<org.wordpress.android.WordPressDB: org.wordpress.android.models.Blog instantiateBlogByLocalId(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<android.database.Cursor: void close()>",
							"<org.wordpress.android.models.Blog: void setHidden(boolean)>",
							"<org.wordpress.android.models.Blog: void setAdmin(boolean)>",
							"<org.wordpress.android.models.Blog: void setBlogOptions(java.lang.String)>",
							"<org.wordpress.android.models.Blog: org.json.JSONObject getBlogOptionsJSONObject()>",
							"<org.wordpress.android.models.Blog: java.lang.String getBlogOptions()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.wordpress.android.util.CrashlyticsUtils: void logException(java.lang.Throwable,org.wordpress.android.util.CrashlyticsUtils$ExceptionType,org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<java.lang.Enum: java.lang.String name()>",
							"<com.crashlytics.android.Crashlytics: void setString(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: int size()>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.v: void <init>()>",
							"<com.crashlytics.android.internal.m: void <clinit>()>",
							"<com.crashlytics.android.internal.n: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.o: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.B: void <init>(com.crashlytics.android.internal.m)>",
							"<android.os.Looper: android.os.Looper getMainLooper()>",
							"<android.os.Handler: void <init>(android.os.Looper)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String)>",
							"<com.crashlytics.android.internal.i: void <clinit>()>",
							"<com.crashlytics.android.internal.j: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String,com.crashlytics.android.internal.i)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(java.lang.String)>",
							"<java.util.HashMap: void <init>()>",
							"<com.crashlytics.android.internal.d: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<com.crashlytics.android.internal.c: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.v: int g()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>",
							"<com.crashlytics.android.internal.r: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<com.crashlytics.android.internal.ab: void <clinit>()>",
							"<com.crashlytics.android.internal.ac: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.ab: boolean f(android.content.Context)>",
							"<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.Crashlytics: void <init>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.u: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.System: long currentTimeMillis()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.u a(java.lang.Class)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: java.lang.String c(java.lang.String)>",
							"<java.lang.String: java.lang.String trim()>",
							"<java.lang.String: java.lang.String substring(int,int)>",
							"<java.lang.String: int length()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: void logException(java.lang.Throwable)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.v: void a(java.lang.Thread,java.lang.Throwable)>",
							"<java.util.Date: void <init>()>",
							"<com.crashlytics.android.v: java.util.concurrent.Future a(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.AbstractExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.G: void <init>(com.crashlytics.android.v,java.lang.Runnable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.P: void <init>(com.crashlytics.android.v,java.util.Date,java.lang.Thread,java.lang.Throwable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.A: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String,boolean)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int println(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<java.lang.Thread: java.lang.Thread currentThread()>",
							"<org.json.JSONObject: void <init>(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.json.JSONObject: java.lang.String getString(java.lang.String)>",
							"<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.json.JSONObject: boolean has(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHomeURL(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setScaledImageWidth(int)>",
							"<org.wordpress.android.models.Blog: void setScaledImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setPostFormats(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setWpVersion(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_key(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_password(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_username(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcomFlag(boolean)>",
							"<org.wordpress.android.models.Blog: void setLocation(boolean)>",
							"<org.wordpress.android.models.Blog: void setRemoteBlogId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidthId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidth(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setFullSizeImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setFeaturedImageCapable(boolean)>",
							"<android.database.Cursor: int getInt(int)>",
							"<org.wordpress.android.models.Blog: void setImagePlacement(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttppassword(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttpuser(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setPassword(java.lang.String)>",
							"<org.wordpress.android.WordPressDB: java.lang.String decryptPassword(java.lang.String)>",
							"<java.lang.String: byte[] getBytes(java.lang.String)>",
							"<java.lang.String: void <init>(byte[])>",
							"<javax.crypto.Cipher: byte[] doFinal(byte[])>",
							"<javax.crypto.Cipher: void init(int,java.security.Key)>",
							"<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
							"<android.util.Base64: byte[] decode(java.lang.String,int)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>",
							"<javax.crypto.spec.DESKeySpec: void <init>(byte[])>",
							"<org.wordpress.android.models.Blog: void setUsername(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setBlogName(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setUrl(java.lang.String)>",
							"<android.database.Cursor: int getColumnIndex(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setLocalTableBlogId(int)>",
							"<org.wordpress.android.models.Blog: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.util.List: int size()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPressDB: java.util.List getAccountsBy(java.lang.String,java.lang.String[])>",
							"<java.util.Vector: void <init>()>",
							"<java.util.Collections: void sort(java.util.List,java.util.Comparator)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: boolean moveToNext()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.util.HashMap: void <init>()>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: int getInt(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] addAll(java.lang.Object[],java.lang.Object[])>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] clone(java.lang.Object[])>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.Class: java.lang.String getName()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>",
							"<java.lang.Class: java.lang.Class getComponentType()>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlogToLastActive()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.WordPressDB: int getLastBlogId()>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences: int getInt(java.lang.String,int)>",
							"<org.wordpress.android.WordPressDB: boolean isDotComAccountVisible(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<org.wordpress.android.util.SqlUtils: boolean boolForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: boolean sqlToBool(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: org.wordpress.android.ui.posts.PostsListFragment access$100(org.wordpress.android.ui.posts.PostsActivity)>",
							"<org.wordpress.android.WordPressDB: boolean deletePost(org.wordpress.android.models.Post)>",
							"<org.wordpress.android.models.Post: int getLocalTableBlogId()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.models.Post: long getLocalTablePostId()>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void checkForLocalChanges(boolean)>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void popPostDetail()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getHTMLStringStackTrace(java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getStringStackTrace(java.lang.Throwable)>",
							"<java.io.StringWriter: void <init>()>",
							"<org.apache.commons.lang.exception.NestableError: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.NotImplementedException: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: void printStackTrace(java.io.PrintWriter)>",
							"<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableException: void printStackTrace(java.io.PrintWriter)>",
							"<java.io.PrintWriter: void <init>(java.io.Writer)>",
							"<java.io.StringWriter: java.lang.String toString()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<android.support.v4.app.FragmentManager: void popBackStack()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$5: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$4: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.WordPressDB: boolean findLocalChanges(int,boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.wordpress.android.ui.posts.PostsActivity: void attemptToSelectPost()>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setShouldSelectFirstPost(boolean)>",
							"<android.support.v4.app.Fragment: boolean isInLayout()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Object)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"android.os.AsyncTask.onPostExecute",
							"android.os.AsyncTask$Status.<clinit>",
							"android.os.AsyncTask$Status.<clinit>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<android.os.AsyncTask: void <init>()>",
							"android.os.AsyncTask$Status.<init>"
						]
					}
				]
			},
			{
				"Candidate Name":"org.wordpress.android.ui.posts.adapters.PostsListAdapter.getRemotePostCount",
				"Candidate Score":90,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.AsyncTask.finish",
							"android.os.AsyncTask.isCancelled",
							"android.os.AsyncTask.onCancelled",
							"android.os.AsyncTask.onCancelled",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"<android.app.Activity: void dismissDialog(int)>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask$1: void <init>(org.wordpress.android.ui.posts.PostsActivity$deletePostTask)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHelper: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHeaderTransformer: void setShowProgressBarOnly(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void ensureAttacher()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshingInt(android.view.View,boolean,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean isDestroyed()>",
							"<android.util.Log: int i(java.lang.String,java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void reset(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<android.view.View: boolean removeCallbacks(java.lang.Runnable)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void startRefresh(android.view.View,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.OnRefreshListener: void onRefreshStarted(android.view.View)>",
							"<android.view.View: boolean post(java.lang.Runnable)>",
							"<android.view.View: boolean postDelayed(java.lang.Runnable,long)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void updateHeaderViewPosition(android.view.View)>",
							"<android.app.Activity: android.view.Window getWindow()>",
							"<android.view.View: java.lang.Object getTag()>",
							"<android.view.ViewManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>",
							"<android.app.Activity: android.view.WindowManager getWindowManager()>",
							"<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>",
							"<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>",
							"<android.view.Window: android.view.View getDecorView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: void onRefreshStarted()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean canRefresh(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void resetTouch()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: boolean hasActivity()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Object)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Boolean)>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.xmlrpc.android.ApiHelper$GenericErrorCallback: void onFailure(org.xmlrpc.android.ApiHelper$ErrorType,java.lang.String,java.lang.Throwable)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback: void onSuccess(int)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Object doInBackground(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Boolean doInBackground(java.util.List[])>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.wordpress.android.WordPressDB: void savePosts(java.util.List,int,boolean,boolean)>",
							"<java.util.List: int size()>",
							"<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>",
							"<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>",
							"<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.util.SqlUtils: long boolToSql(boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.wordpress.android.util.MapUtils: int getMapInt(java.util.Map,java.lang.String,int)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.lang.Integer: int parseInt(java.lang.String)>",
							"<java.lang.Object: boolean equals(java.lang.Object)>",
							"<org.json.JSONArray: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: int getTimezoneOffset()>",
							"<java.util.Date: void <init>(long)>",
							"<java.lang.Long: long longValue()>",
							"<android.content.ContentValues: java.lang.Object get(java.lang.String)>",
							"<android.database.sqlite.SQLiteDatabase: void endTransaction()>",
							"<java.util.Date: void <init>()>",
							"<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<org.json.JSONArray: void <init>()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>",
							"<java.lang.Long: java.lang.Long valueOf(long)>",
							"<java.util.Date: long getTime()>",
							"<org.wordpress.android.util.MapUtils: java.util.Date getMapDate(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.String)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<android.content.ContentValues: void <init>()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<android.database.sqlite.SQLiteDatabase: void beginTransaction()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<org.wordpress.android.WordPressDB: void deleteUploadedPosts(int,boolean)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.xmlrpc.android.XMLRPCClientInterface: java.lang.Object call(java.lang.String,java.lang.Object[])>",
							"<org.wordpress.android.models.Blog: java.lang.String getPassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUsername()>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.xmlrpc.android.XMLRPCFactory: org.xmlrpc.android.XMLRPCClientInterface instantiate(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.xmlrpc.android.XMLRPCFactoryDefault: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.xmlrpc.android.XMLRPCFactoryAbstract: org.xmlrpc.android.XMLRPCClientInterface make(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void v(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean access$300(org.wordpress.android.util.AppLog$LogEntryList,org.wordpress.android.util.AppLog$LogEntry)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean addEntry(org.wordpress.android.util.AppLog$LogEntry)>",
							"<java.util.ArrayList: int size()>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void removeFirstEntry()>",
							"<java.util.ArrayList: java.util.Iterator iterator()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$EntrySet$1: java.util.Map$Entry next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt(int)>",
							"<org.apache.commons.lang.math.JVMRandom: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<java.util.Random: int nextInt(int)>",
							"<java.util.Random: int nextInt()>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object next()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: void checkTokenized()>",
							"<java.lang.String: void <clinit>()>",
							"<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.List: int size()>",
							"<java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.Vector: int size()>",
							"<java.util.ArrayList: int size()>",
							"<java.util.LinkedList: int size()>",
							"<java.util.concurrent.CopyOnWriteArrayList: int size()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer: java.util.List tokenize(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.Collections: void <clinit>()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<java.lang.String: int length()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: boolean add(java.lang.Object)>",
							"<java.util.AbstractList: boolean add(java.lang.Object)>",
							"<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<java.util.LinkedList: boolean add(java.lang.Object)>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isEmptyTokenAsNull()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isIgnoreEmptyTokens()>",
							"<org.apache.commons.lang.text.StrTokenizer: int readNextToken(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List)>",
							"<java.lang.Math: int max(int,int)>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<java.util.Arrays: int binarySearch(char[],char)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: int readWithQuotes(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder clear()>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isQuote(char[],int,int,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.String substring(int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int validateRange(int,int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char[],int,int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(int)>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder appendNull()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getQuoteMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void <init>()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: java.lang.Object next()>",
							"<java.util.GregorianCalendar: boolean equals(java.lang.Object)>",
							"<java.util.Calendar: void add(int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.GregorianCalendar: void add(int,int)>",
							"<java.util.Calendar: boolean equals(java.lang.Object)>",
							"<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$KeySet$1: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap$Values$1: java.lang.Object next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: java.lang.Object next()>",
							"<java.lang.Character: void <clinit>()>",
							"<java.lang.Character: void <init>(char)>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: void prepareNext()>",
							"<org.apache.commons.lang.CharRange: boolean access$100(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$200(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$300(org.apache.commons.lang.CharRange)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: java.lang.Object next()>",
							"<java.util.Scanner: java.lang.String next()>",
							"<android.support.v4.util.MapCollections$MapIterator: java.util.Map$Entry next()>",
							"<android.support.v4.util.MapCollections$MapIterator: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: boolean hasNext()>",
							"<java.util.Calendar: boolean before(java.lang.Object)>",
							"<com.google.gson.JsonStreamParser: boolean hasNext()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<com.google.gson.JsonIOException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<java.lang.RuntimeException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonSyntaxException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>",
							"<com.google.gson.stream.JsonReader$2: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: com.google.gson.stream.JsonScope[] values()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.support.v4.util.SparseArrayCompat: android.support.v4.util.SparseArrayCompat clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object cloneReset()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: java.lang.Object clone()>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrTokenizer reset()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.MalformedJsonException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.io.Reader: int read(char[],int,int)>",
							"<com.google.gson.internal.bind.JsonTreeReader$1: int read(char[],int,int)>",
							"<java.lang.AssertionError: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderReader: int read(char[],int,int)>",
							"<java.lang.IndexOutOfBoundsException: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void getChars(int,int,char[],int)>",
							"<java.lang.System: void <clinit>()>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<java.io.BufferedReader: int read(char[],int,int)>",
							"<java.io.InputStreamReader: int read(char[],int,int)>",
							"<java.io.FilterReader: int read(char[],int,int)>",
							"<java.io.PushbackReader: int read(char[],int,int)>",
							"<java.io.StringReader: int read(char[],int,int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.io.EOFException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: void skipToEndOfLine()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean skipTo(java.lang.String)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.String: char charAt(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken objectValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<java.lang.String: char charAt(int)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: char readEscapeCharacter()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.NumberFormatException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: void push(com.google.gson.stream.JsonScope)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken readLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeNumber(char[],int,int)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInObject(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInArray(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: void consumeNonExecutePrefix()>",
							"<com.google.gson.stream.JsonReader: void <clinit>()>",
							"<java.lang.String: char[] toCharArray()>",
							"<com.google.gson.stream.JsonReader$1: void <init>()>",
							"<com.google.gson.internal.JsonReaderInternalAccess: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.util.Scanner: boolean hasNext()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: boolean hasNext()>",
							"<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: boolean hasNext()>",
							"<java.util.ArrayList: boolean remove(java.lang.Object)>",
							"<android.util.Log: int v(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttppassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttpuser()>",
							"<org.wordpress.android.models.Blog: java.net.URI getUri()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUrl()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.net.URI: void <init>(java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void <init>(org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback)>",
							"<org.xmlrpc.android.ApiHelper$HelperAsyncTask: void <init>()>",
							"<android.os.AsyncTask: void <init>()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$7: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<android.view.View: void setVisibility(int)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: int getRemotePostCount()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.models.PostsListPost: boolean isLocalDraft()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: org.wordpress.android.ui.posts.adapters.PostsListAdapter getPostListAdapter()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$4: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: void <init>(android.content.Context,boolean,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnLoadMoreListener,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnPostsLoadedListener)>",
							"<android.widget.BaseAdapter: void <init>()>",
							"<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>",
							"<java.util.ArrayList: void <init>()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$5: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.NetworkUtils: boolean checkConnection(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: boolean isNetworkAvailable(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: android.net.NetworkInfo getActiveNetworkInfo(android.content.Context)>",
							"<android.content.Context: java.lang.Object getSystemService(java.lang.String)>",
							"<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>",
							"<android.net.NetworkInfo: boolean isConnected()>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.content.Context: java.lang.String getString(int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,java.lang.String,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.wordpress.android.WordPressDB: void updateLastBlogId(int)>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences$Editor: boolean commit()>",
							"<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>",
							"<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<org.wordpress.android.WordPressDB: org.wordpress.android.models.Blog instantiateBlogByLocalId(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<android.database.Cursor: void close()>",
							"<org.wordpress.android.models.Blog: void setHidden(boolean)>",
							"<org.wordpress.android.models.Blog: void setAdmin(boolean)>",
							"<org.wordpress.android.models.Blog: void setBlogOptions(java.lang.String)>",
							"<org.wordpress.android.models.Blog: org.json.JSONObject getBlogOptionsJSONObject()>",
							"<org.wordpress.android.models.Blog: java.lang.String getBlogOptions()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.wordpress.android.util.CrashlyticsUtils: void logException(java.lang.Throwable,org.wordpress.android.util.CrashlyticsUtils$ExceptionType,org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<java.lang.Enum: java.lang.String name()>",
							"<com.crashlytics.android.Crashlytics: void setString(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: int size()>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.v: void <init>()>",
							"<com.crashlytics.android.internal.m: void <clinit>()>",
							"<com.crashlytics.android.internal.n: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.o: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.B: void <init>(com.crashlytics.android.internal.m)>",
							"<android.os.Looper: android.os.Looper getMainLooper()>",
							"<android.os.Handler: void <init>(android.os.Looper)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String)>",
							"<com.crashlytics.android.internal.i: void <clinit>()>",
							"<com.crashlytics.android.internal.j: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String,com.crashlytics.android.internal.i)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(java.lang.String)>",
							"<java.util.HashMap: void <init>()>",
							"<com.crashlytics.android.internal.d: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<com.crashlytics.android.internal.c: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.v: int g()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>",
							"<com.crashlytics.android.internal.r: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<com.crashlytics.android.internal.ab: void <clinit>()>",
							"<com.crashlytics.android.internal.ac: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.ab: boolean f(android.content.Context)>",
							"<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.Crashlytics: void <init>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.u: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.System: long currentTimeMillis()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.u a(java.lang.Class)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: java.lang.String c(java.lang.String)>",
							"<java.lang.String: java.lang.String trim()>",
							"<java.lang.String: java.lang.String substring(int,int)>",
							"<java.lang.String: int length()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: void logException(java.lang.Throwable)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.v: void a(java.lang.Thread,java.lang.Throwable)>",
							"<java.util.Date: void <init>()>",
							"<com.crashlytics.android.v: java.util.concurrent.Future a(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.AbstractExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.G: void <init>(com.crashlytics.android.v,java.lang.Runnable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.P: void <init>(com.crashlytics.android.v,java.util.Date,java.lang.Thread,java.lang.Throwable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.A: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String,boolean)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int println(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<java.lang.Thread: java.lang.Thread currentThread()>",
							"<org.json.JSONObject: void <init>(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.json.JSONObject: java.lang.String getString(java.lang.String)>",
							"<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.json.JSONObject: boolean has(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHomeURL(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setScaledImageWidth(int)>",
							"<org.wordpress.android.models.Blog: void setScaledImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setPostFormats(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setWpVersion(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_key(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_password(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_username(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcomFlag(boolean)>",
							"<org.wordpress.android.models.Blog: void setLocation(boolean)>",
							"<org.wordpress.android.models.Blog: void setRemoteBlogId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidthId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidth(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setFullSizeImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setFeaturedImageCapable(boolean)>",
							"<android.database.Cursor: int getInt(int)>",
							"<org.wordpress.android.models.Blog: void setImagePlacement(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttppassword(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttpuser(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setPassword(java.lang.String)>",
							"<org.wordpress.android.WordPressDB: java.lang.String decryptPassword(java.lang.String)>",
							"<java.lang.String: byte[] getBytes(java.lang.String)>",
							"<java.lang.String: void <init>(byte[])>",
							"<javax.crypto.Cipher: byte[] doFinal(byte[])>",
							"<javax.crypto.Cipher: void init(int,java.security.Key)>",
							"<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
							"<android.util.Base64: byte[] decode(java.lang.String,int)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>",
							"<javax.crypto.spec.DESKeySpec: void <init>(byte[])>",
							"<org.wordpress.android.models.Blog: void setUsername(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setBlogName(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setUrl(java.lang.String)>",
							"<android.database.Cursor: int getColumnIndex(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setLocalTableBlogId(int)>",
							"<org.wordpress.android.models.Blog: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.util.List: int size()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPressDB: java.util.List getAccountsBy(java.lang.String,java.lang.String[])>",
							"<java.util.Vector: void <init>()>",
							"<java.util.Collections: void sort(java.util.List,java.util.Comparator)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: boolean moveToNext()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.util.HashMap: void <init>()>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: int getInt(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] addAll(java.lang.Object[],java.lang.Object[])>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] clone(java.lang.Object[])>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.Class: java.lang.String getName()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>",
							"<java.lang.Class: java.lang.Class getComponentType()>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlogToLastActive()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.WordPressDB: int getLastBlogId()>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences: int getInt(java.lang.String,int)>",
							"<org.wordpress.android.WordPressDB: boolean isDotComAccountVisible(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<org.wordpress.android.util.SqlUtils: boolean boolForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: boolean sqlToBool(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: org.wordpress.android.ui.posts.PostsListFragment access$100(org.wordpress.android.ui.posts.PostsActivity)>",
							"<org.wordpress.android.WordPressDB: boolean deletePost(org.wordpress.android.models.Post)>",
							"<org.wordpress.android.models.Post: int getLocalTableBlogId()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.models.Post: long getLocalTablePostId()>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void checkForLocalChanges(boolean)>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void popPostDetail()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getHTMLStringStackTrace(java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getStringStackTrace(java.lang.Throwable)>",
							"<java.io.StringWriter: void <init>()>",
							"<org.apache.commons.lang.exception.NestableError: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.NotImplementedException: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: void printStackTrace(java.io.PrintWriter)>",
							"<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableException: void printStackTrace(java.io.PrintWriter)>",
							"<java.io.PrintWriter: void <init>(java.io.Writer)>",
							"<java.io.StringWriter: java.lang.String toString()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<android.support.v4.app.FragmentManager: void popBackStack()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$5: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$4: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.WordPressDB: boolean findLocalChanges(int,boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.wordpress.android.ui.posts.PostsActivity: void attemptToSelectPost()>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setShouldSelectFirstPost(boolean)>",
							"<android.support.v4.app.Fragment: boolean isInLayout()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Object)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"android.os.AsyncTask.onPostExecute",
							"android.os.AsyncTask$Status.<clinit>",
							"android.os.AsyncTask$Status.<clinit>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<android.os.AsyncTask: void <init>()>",
							"android.os.AsyncTask$Status.<init>"
						]
					}
				]
			},
			{
				"Candidate Name":"org.wordpress.android.ui.posts.PostsListFragment$4.<init>",
				"Candidate Score":89,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.AsyncTask.finish",
							"android.os.AsyncTask.isCancelled",
							"android.os.AsyncTask.onCancelled",
							"android.os.AsyncTask.onCancelled",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"<android.app.Activity: void dismissDialog(int)>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask$1: void <init>(org.wordpress.android.ui.posts.PostsActivity$deletePostTask)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHelper: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHeaderTransformer: void setShowProgressBarOnly(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void ensureAttacher()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshingInt(android.view.View,boolean,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean isDestroyed()>",
							"<android.util.Log: int i(java.lang.String,java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void reset(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<android.view.View: boolean removeCallbacks(java.lang.Runnable)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void startRefresh(android.view.View,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.OnRefreshListener: void onRefreshStarted(android.view.View)>",
							"<android.view.View: boolean post(java.lang.Runnable)>",
							"<android.view.View: boolean postDelayed(java.lang.Runnable,long)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void updateHeaderViewPosition(android.view.View)>",
							"<android.app.Activity: android.view.Window getWindow()>",
							"<android.view.View: java.lang.Object getTag()>",
							"<android.view.ViewManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>",
							"<android.app.Activity: android.view.WindowManager getWindowManager()>",
							"<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>",
							"<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>",
							"<android.view.Window: android.view.View getDecorView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: void onRefreshStarted()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean canRefresh(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void resetTouch()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: boolean hasActivity()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Object)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Boolean)>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.xmlrpc.android.ApiHelper$GenericErrorCallback: void onFailure(org.xmlrpc.android.ApiHelper$ErrorType,java.lang.String,java.lang.Throwable)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback: void onSuccess(int)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Object doInBackground(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Boolean doInBackground(java.util.List[])>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.wordpress.android.WordPressDB: void savePosts(java.util.List,int,boolean,boolean)>",
							"<java.util.List: int size()>",
							"<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>",
							"<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>",
							"<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.util.SqlUtils: long boolToSql(boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.wordpress.android.util.MapUtils: int getMapInt(java.util.Map,java.lang.String,int)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.lang.Integer: int parseInt(java.lang.String)>",
							"<java.lang.Object: boolean equals(java.lang.Object)>",
							"<org.json.JSONArray: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: int getTimezoneOffset()>",
							"<java.util.Date: void <init>(long)>",
							"<java.lang.Long: long longValue()>",
							"<android.content.ContentValues: java.lang.Object get(java.lang.String)>",
							"<android.database.sqlite.SQLiteDatabase: void endTransaction()>",
							"<java.util.Date: void <init>()>",
							"<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<org.json.JSONArray: void <init>()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>",
							"<java.lang.Long: java.lang.Long valueOf(long)>",
							"<java.util.Date: long getTime()>",
							"<org.wordpress.android.util.MapUtils: java.util.Date getMapDate(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.String)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<android.content.ContentValues: void <init>()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<android.database.sqlite.SQLiteDatabase: void beginTransaction()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<org.wordpress.android.WordPressDB: void deleteUploadedPosts(int,boolean)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.xmlrpc.android.XMLRPCClientInterface: java.lang.Object call(java.lang.String,java.lang.Object[])>",
							"<org.wordpress.android.models.Blog: java.lang.String getPassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUsername()>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.xmlrpc.android.XMLRPCFactory: org.xmlrpc.android.XMLRPCClientInterface instantiate(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.xmlrpc.android.XMLRPCFactoryDefault: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.xmlrpc.android.XMLRPCFactoryAbstract: org.xmlrpc.android.XMLRPCClientInterface make(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void v(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean access$300(org.wordpress.android.util.AppLog$LogEntryList,org.wordpress.android.util.AppLog$LogEntry)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean addEntry(org.wordpress.android.util.AppLog$LogEntry)>",
							"<java.util.ArrayList: int size()>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void removeFirstEntry()>",
							"<java.util.ArrayList: java.util.Iterator iterator()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$EntrySet$1: java.util.Map$Entry next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt(int)>",
							"<org.apache.commons.lang.math.JVMRandom: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<java.util.Random: int nextInt(int)>",
							"<java.util.Random: int nextInt()>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object next()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: void checkTokenized()>",
							"<java.lang.String: void <clinit>()>",
							"<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.List: int size()>",
							"<java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.Vector: int size()>",
							"<java.util.ArrayList: int size()>",
							"<java.util.LinkedList: int size()>",
							"<java.util.concurrent.CopyOnWriteArrayList: int size()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer: java.util.List tokenize(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.Collections: void <clinit>()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<java.lang.String: int length()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: boolean add(java.lang.Object)>",
							"<java.util.AbstractList: boolean add(java.lang.Object)>",
							"<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<java.util.LinkedList: boolean add(java.lang.Object)>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isEmptyTokenAsNull()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isIgnoreEmptyTokens()>",
							"<org.apache.commons.lang.text.StrTokenizer: int readNextToken(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List)>",
							"<java.lang.Math: int max(int,int)>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<java.util.Arrays: int binarySearch(char[],char)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: int readWithQuotes(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder clear()>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isQuote(char[],int,int,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.String substring(int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int validateRange(int,int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char[],int,int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(int)>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder appendNull()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getQuoteMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void <init>()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: java.lang.Object next()>",
							"<java.util.GregorianCalendar: boolean equals(java.lang.Object)>",
							"<java.util.Calendar: void add(int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.GregorianCalendar: void add(int,int)>",
							"<java.util.Calendar: boolean equals(java.lang.Object)>",
							"<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$KeySet$1: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap$Values$1: java.lang.Object next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: java.lang.Object next()>",
							"<java.lang.Character: void <clinit>()>",
							"<java.lang.Character: void <init>(char)>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: void prepareNext()>",
							"<org.apache.commons.lang.CharRange: boolean access$100(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$200(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$300(org.apache.commons.lang.CharRange)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: java.lang.Object next()>",
							"<java.util.Scanner: java.lang.String next()>",
							"<android.support.v4.util.MapCollections$MapIterator: java.util.Map$Entry next()>",
							"<android.support.v4.util.MapCollections$MapIterator: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: boolean hasNext()>",
							"<java.util.Calendar: boolean before(java.lang.Object)>",
							"<com.google.gson.JsonStreamParser: boolean hasNext()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<com.google.gson.JsonIOException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<java.lang.RuntimeException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonSyntaxException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>",
							"<com.google.gson.stream.JsonReader$2: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: com.google.gson.stream.JsonScope[] values()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.support.v4.util.SparseArrayCompat: android.support.v4.util.SparseArrayCompat clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object cloneReset()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: java.lang.Object clone()>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrTokenizer reset()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.MalformedJsonException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.io.Reader: int read(char[],int,int)>",
							"<com.google.gson.internal.bind.JsonTreeReader$1: int read(char[],int,int)>",
							"<java.lang.AssertionError: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderReader: int read(char[],int,int)>",
							"<java.lang.IndexOutOfBoundsException: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void getChars(int,int,char[],int)>",
							"<java.lang.System: void <clinit>()>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<java.io.BufferedReader: int read(char[],int,int)>",
							"<java.io.InputStreamReader: int read(char[],int,int)>",
							"<java.io.FilterReader: int read(char[],int,int)>",
							"<java.io.PushbackReader: int read(char[],int,int)>",
							"<java.io.StringReader: int read(char[],int,int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.io.EOFException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: void skipToEndOfLine()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean skipTo(java.lang.String)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.String: char charAt(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken objectValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<java.lang.String: char charAt(int)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: char readEscapeCharacter()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.NumberFormatException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: void push(com.google.gson.stream.JsonScope)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken readLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeNumber(char[],int,int)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInObject(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInArray(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: void consumeNonExecutePrefix()>",
							"<com.google.gson.stream.JsonReader: void <clinit>()>",
							"<java.lang.String: char[] toCharArray()>",
							"<com.google.gson.stream.JsonReader$1: void <init>()>",
							"<com.google.gson.internal.JsonReaderInternalAccess: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.util.Scanner: boolean hasNext()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: boolean hasNext()>",
							"<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: boolean hasNext()>",
							"<java.util.ArrayList: boolean remove(java.lang.Object)>",
							"<android.util.Log: int v(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttppassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttpuser()>",
							"<org.wordpress.android.models.Blog: java.net.URI getUri()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUrl()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.net.URI: void <init>(java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void <init>(org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback)>",
							"<org.xmlrpc.android.ApiHelper$HelperAsyncTask: void <init>()>",
							"<android.os.AsyncTask: void <init>()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$7: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<android.view.View: void setVisibility(int)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: int getRemotePostCount()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.models.PostsListPost: boolean isLocalDraft()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: org.wordpress.android.ui.posts.adapters.PostsListAdapter getPostListAdapter()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$4: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: void <init>(android.content.Context,boolean,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnLoadMoreListener,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnPostsLoadedListener)>",
							"<android.widget.BaseAdapter: void <init>()>",
							"<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>",
							"<java.util.ArrayList: void <init>()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$5: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.NetworkUtils: boolean checkConnection(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: boolean isNetworkAvailable(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: android.net.NetworkInfo getActiveNetworkInfo(android.content.Context)>",
							"<android.content.Context: java.lang.Object getSystemService(java.lang.String)>",
							"<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>",
							"<android.net.NetworkInfo: boolean isConnected()>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.content.Context: java.lang.String getString(int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,java.lang.String,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.wordpress.android.WordPressDB: void updateLastBlogId(int)>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences$Editor: boolean commit()>",
							"<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>",
							"<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<org.wordpress.android.WordPressDB: org.wordpress.android.models.Blog instantiateBlogByLocalId(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<android.database.Cursor: void close()>",
							"<org.wordpress.android.models.Blog: void setHidden(boolean)>",
							"<org.wordpress.android.models.Blog: void setAdmin(boolean)>",
							"<org.wordpress.android.models.Blog: void setBlogOptions(java.lang.String)>",
							"<org.wordpress.android.models.Blog: org.json.JSONObject getBlogOptionsJSONObject()>",
							"<org.wordpress.android.models.Blog: java.lang.String getBlogOptions()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.wordpress.android.util.CrashlyticsUtils: void logException(java.lang.Throwable,org.wordpress.android.util.CrashlyticsUtils$ExceptionType,org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<java.lang.Enum: java.lang.String name()>",
							"<com.crashlytics.android.Crashlytics: void setString(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: int size()>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.v: void <init>()>",
							"<com.crashlytics.android.internal.m: void <clinit>()>",
							"<com.crashlytics.android.internal.n: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.o: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.B: void <init>(com.crashlytics.android.internal.m)>",
							"<android.os.Looper: android.os.Looper getMainLooper()>",
							"<android.os.Handler: void <init>(android.os.Looper)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String)>",
							"<com.crashlytics.android.internal.i: void <clinit>()>",
							"<com.crashlytics.android.internal.j: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String,com.crashlytics.android.internal.i)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(java.lang.String)>",
							"<java.util.HashMap: void <init>()>",
							"<com.crashlytics.android.internal.d: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<com.crashlytics.android.internal.c: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.v: int g()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>",
							"<com.crashlytics.android.internal.r: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<com.crashlytics.android.internal.ab: void <clinit>()>",
							"<com.crashlytics.android.internal.ac: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.ab: boolean f(android.content.Context)>",
							"<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.Crashlytics: void <init>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.u: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.System: long currentTimeMillis()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.u a(java.lang.Class)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: java.lang.String c(java.lang.String)>",
							"<java.lang.String: java.lang.String trim()>",
							"<java.lang.String: java.lang.String substring(int,int)>",
							"<java.lang.String: int length()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: void logException(java.lang.Throwable)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.v: void a(java.lang.Thread,java.lang.Throwable)>",
							"<java.util.Date: void <init>()>",
							"<com.crashlytics.android.v: java.util.concurrent.Future a(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.AbstractExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.G: void <init>(com.crashlytics.android.v,java.lang.Runnable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.P: void <init>(com.crashlytics.android.v,java.util.Date,java.lang.Thread,java.lang.Throwable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.A: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String,boolean)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int println(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<java.lang.Thread: java.lang.Thread currentThread()>",
							"<org.json.JSONObject: void <init>(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.json.JSONObject: java.lang.String getString(java.lang.String)>",
							"<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.json.JSONObject: boolean has(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHomeURL(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setScaledImageWidth(int)>",
							"<org.wordpress.android.models.Blog: void setScaledImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setPostFormats(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setWpVersion(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_key(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_password(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_username(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcomFlag(boolean)>",
							"<org.wordpress.android.models.Blog: void setLocation(boolean)>",
							"<org.wordpress.android.models.Blog: void setRemoteBlogId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidthId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidth(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setFullSizeImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setFeaturedImageCapable(boolean)>",
							"<android.database.Cursor: int getInt(int)>",
							"<org.wordpress.android.models.Blog: void setImagePlacement(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttppassword(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttpuser(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setPassword(java.lang.String)>",
							"<org.wordpress.android.WordPressDB: java.lang.String decryptPassword(java.lang.String)>",
							"<java.lang.String: byte[] getBytes(java.lang.String)>",
							"<java.lang.String: void <init>(byte[])>",
							"<javax.crypto.Cipher: byte[] doFinal(byte[])>",
							"<javax.crypto.Cipher: void init(int,java.security.Key)>",
							"<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
							"<android.util.Base64: byte[] decode(java.lang.String,int)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>",
							"<javax.crypto.spec.DESKeySpec: void <init>(byte[])>",
							"<org.wordpress.android.models.Blog: void setUsername(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setBlogName(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setUrl(java.lang.String)>",
							"<android.database.Cursor: int getColumnIndex(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setLocalTableBlogId(int)>",
							"<org.wordpress.android.models.Blog: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.util.List: int size()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPressDB: java.util.List getAccountsBy(java.lang.String,java.lang.String[])>",
							"<java.util.Vector: void <init>()>",
							"<java.util.Collections: void sort(java.util.List,java.util.Comparator)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: boolean moveToNext()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.util.HashMap: void <init>()>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: int getInt(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] addAll(java.lang.Object[],java.lang.Object[])>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] clone(java.lang.Object[])>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.Class: java.lang.String getName()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>",
							"<java.lang.Class: java.lang.Class getComponentType()>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlogToLastActive()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.WordPressDB: int getLastBlogId()>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences: int getInt(java.lang.String,int)>",
							"<org.wordpress.android.WordPressDB: boolean isDotComAccountVisible(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<org.wordpress.android.util.SqlUtils: boolean boolForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: boolean sqlToBool(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: org.wordpress.android.ui.posts.PostsListFragment access$100(org.wordpress.android.ui.posts.PostsActivity)>",
							"<org.wordpress.android.WordPressDB: boolean deletePost(org.wordpress.android.models.Post)>",
							"<org.wordpress.android.models.Post: int getLocalTableBlogId()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.models.Post: long getLocalTablePostId()>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void checkForLocalChanges(boolean)>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void popPostDetail()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getHTMLStringStackTrace(java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getStringStackTrace(java.lang.Throwable)>",
							"<java.io.StringWriter: void <init>()>",
							"<org.apache.commons.lang.exception.NestableError: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.NotImplementedException: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: void printStackTrace(java.io.PrintWriter)>",
							"<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableException: void printStackTrace(java.io.PrintWriter)>",
							"<java.io.PrintWriter: void <init>(java.io.Writer)>",
							"<java.io.StringWriter: java.lang.String toString()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<android.support.v4.app.FragmentManager: void popBackStack()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$5: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$4: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.WordPressDB: boolean findLocalChanges(int,boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.wordpress.android.ui.posts.PostsActivity: void attemptToSelectPost()>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setShouldSelectFirstPost(boolean)>",
							"<android.support.v4.app.Fragment: boolean isInLayout()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Object)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"android.os.AsyncTask.onPostExecute",
							"android.os.AsyncTask$Status.<clinit>",
							"android.os.AsyncTask$Status.<clinit>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<android.os.AsyncTask: void <init>()>",
							"android.os.AsyncTask$Status.<init>"
						]
					}
				]
			},
			{
				"Candidate Name":"org.wordpress.android.ui.posts.PostsListFragment$5.<init>",
				"Candidate Score":89,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.AsyncTask.finish",
							"android.os.AsyncTask.isCancelled",
							"android.os.AsyncTask.onCancelled",
							"android.os.AsyncTask.onCancelled",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"<android.app.Activity: void dismissDialog(int)>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask$1: void <init>(org.wordpress.android.ui.posts.PostsActivity$deletePostTask)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHelper: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHeaderTransformer: void setShowProgressBarOnly(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void ensureAttacher()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshingInt(android.view.View,boolean,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean isDestroyed()>",
							"<android.util.Log: int i(java.lang.String,java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void reset(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<android.view.View: boolean removeCallbacks(java.lang.Runnable)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void startRefresh(android.view.View,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.OnRefreshListener: void onRefreshStarted(android.view.View)>",
							"<android.view.View: boolean post(java.lang.Runnable)>",
							"<android.view.View: boolean postDelayed(java.lang.Runnable,long)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void updateHeaderViewPosition(android.view.View)>",
							"<android.app.Activity: android.view.Window getWindow()>",
							"<android.view.View: java.lang.Object getTag()>",
							"<android.view.ViewManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>",
							"<android.app.Activity: android.view.WindowManager getWindowManager()>",
							"<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>",
							"<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>",
							"<android.view.Window: android.view.View getDecorView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: void onRefreshStarted()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean canRefresh(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void resetTouch()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: boolean hasActivity()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Object)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Boolean)>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.xmlrpc.android.ApiHelper$GenericErrorCallback: void onFailure(org.xmlrpc.android.ApiHelper$ErrorType,java.lang.String,java.lang.Throwable)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback: void onSuccess(int)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Object doInBackground(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Boolean doInBackground(java.util.List[])>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.wordpress.android.WordPressDB: void savePosts(java.util.List,int,boolean,boolean)>",
							"<java.util.List: int size()>",
							"<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>",
							"<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>",
							"<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.util.SqlUtils: long boolToSql(boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.wordpress.android.util.MapUtils: int getMapInt(java.util.Map,java.lang.String,int)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.lang.Integer: int parseInt(java.lang.String)>",
							"<java.lang.Object: boolean equals(java.lang.Object)>",
							"<org.json.JSONArray: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: int getTimezoneOffset()>",
							"<java.util.Date: void <init>(long)>",
							"<java.lang.Long: long longValue()>",
							"<android.content.ContentValues: java.lang.Object get(java.lang.String)>",
							"<android.database.sqlite.SQLiteDatabase: void endTransaction()>",
							"<java.util.Date: void <init>()>",
							"<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<org.json.JSONArray: void <init>()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>",
							"<java.lang.Long: java.lang.Long valueOf(long)>",
							"<java.util.Date: long getTime()>",
							"<org.wordpress.android.util.MapUtils: java.util.Date getMapDate(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.String)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<android.content.ContentValues: void <init>()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<android.database.sqlite.SQLiteDatabase: void beginTransaction()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<org.wordpress.android.WordPressDB: void deleteUploadedPosts(int,boolean)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.xmlrpc.android.XMLRPCClientInterface: java.lang.Object call(java.lang.String,java.lang.Object[])>",
							"<org.wordpress.android.models.Blog: java.lang.String getPassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUsername()>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.xmlrpc.android.XMLRPCFactory: org.xmlrpc.android.XMLRPCClientInterface instantiate(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.xmlrpc.android.XMLRPCFactoryDefault: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.xmlrpc.android.XMLRPCFactoryAbstract: org.xmlrpc.android.XMLRPCClientInterface make(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void v(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean access$300(org.wordpress.android.util.AppLog$LogEntryList,org.wordpress.android.util.AppLog$LogEntry)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean addEntry(org.wordpress.android.util.AppLog$LogEntry)>",
							"<java.util.ArrayList: int size()>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void removeFirstEntry()>",
							"<java.util.ArrayList: java.util.Iterator iterator()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$EntrySet$1: java.util.Map$Entry next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt(int)>",
							"<org.apache.commons.lang.math.JVMRandom: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<java.util.Random: int nextInt(int)>",
							"<java.util.Random: int nextInt()>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object next()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: void checkTokenized()>",
							"<java.lang.String: void <clinit>()>",
							"<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.List: int size()>",
							"<java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.Vector: int size()>",
							"<java.util.ArrayList: int size()>",
							"<java.util.LinkedList: int size()>",
							"<java.util.concurrent.CopyOnWriteArrayList: int size()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer: java.util.List tokenize(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.Collections: void <clinit>()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<java.lang.String: int length()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: boolean add(java.lang.Object)>",
							"<java.util.AbstractList: boolean add(java.lang.Object)>",
							"<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<java.util.LinkedList: boolean add(java.lang.Object)>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isEmptyTokenAsNull()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isIgnoreEmptyTokens()>",
							"<org.apache.commons.lang.text.StrTokenizer: int readNextToken(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List)>",
							"<java.lang.Math: int max(int,int)>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<java.util.Arrays: int binarySearch(char[],char)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: int readWithQuotes(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder clear()>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isQuote(char[],int,int,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.String substring(int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int validateRange(int,int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char[],int,int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(int)>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder appendNull()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getQuoteMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void <init>()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: java.lang.Object next()>",
							"<java.util.GregorianCalendar: boolean equals(java.lang.Object)>",
							"<java.util.Calendar: void add(int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.GregorianCalendar: void add(int,int)>",
							"<java.util.Calendar: boolean equals(java.lang.Object)>",
							"<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$KeySet$1: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap$Values$1: java.lang.Object next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: java.lang.Object next()>",
							"<java.lang.Character: void <clinit>()>",
							"<java.lang.Character: void <init>(char)>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: void prepareNext()>",
							"<org.apache.commons.lang.CharRange: boolean access$100(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$200(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$300(org.apache.commons.lang.CharRange)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: java.lang.Object next()>",
							"<java.util.Scanner: java.lang.String next()>",
							"<android.support.v4.util.MapCollections$MapIterator: java.util.Map$Entry next()>",
							"<android.support.v4.util.MapCollections$MapIterator: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: boolean hasNext()>",
							"<java.util.Calendar: boolean before(java.lang.Object)>",
							"<com.google.gson.JsonStreamParser: boolean hasNext()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<com.google.gson.JsonIOException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<java.lang.RuntimeException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonSyntaxException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>",
							"<com.google.gson.stream.JsonReader$2: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: com.google.gson.stream.JsonScope[] values()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.support.v4.util.SparseArrayCompat: android.support.v4.util.SparseArrayCompat clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object cloneReset()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: java.lang.Object clone()>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrTokenizer reset()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.MalformedJsonException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.io.Reader: int read(char[],int,int)>",
							"<com.google.gson.internal.bind.JsonTreeReader$1: int read(char[],int,int)>",
							"<java.lang.AssertionError: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderReader: int read(char[],int,int)>",
							"<java.lang.IndexOutOfBoundsException: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void getChars(int,int,char[],int)>",
							"<java.lang.System: void <clinit>()>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<java.io.BufferedReader: int read(char[],int,int)>",
							"<java.io.InputStreamReader: int read(char[],int,int)>",
							"<java.io.FilterReader: int read(char[],int,int)>",
							"<java.io.PushbackReader: int read(char[],int,int)>",
							"<java.io.StringReader: int read(char[],int,int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.io.EOFException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: void skipToEndOfLine()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean skipTo(java.lang.String)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.String: char charAt(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken objectValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<java.lang.String: char charAt(int)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: char readEscapeCharacter()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.NumberFormatException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: void push(com.google.gson.stream.JsonScope)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken readLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeNumber(char[],int,int)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInObject(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInArray(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: void consumeNonExecutePrefix()>",
							"<com.google.gson.stream.JsonReader: void <clinit>()>",
							"<java.lang.String: char[] toCharArray()>",
							"<com.google.gson.stream.JsonReader$1: void <init>()>",
							"<com.google.gson.internal.JsonReaderInternalAccess: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.util.Scanner: boolean hasNext()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: boolean hasNext()>",
							"<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: boolean hasNext()>",
							"<java.util.ArrayList: boolean remove(java.lang.Object)>",
							"<android.util.Log: int v(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttppassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttpuser()>",
							"<org.wordpress.android.models.Blog: java.net.URI getUri()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUrl()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.net.URI: void <init>(java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void <init>(org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback)>",
							"<org.xmlrpc.android.ApiHelper$HelperAsyncTask: void <init>()>",
							"<android.os.AsyncTask: void <init>()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$7: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<android.view.View: void setVisibility(int)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: int getRemotePostCount()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.models.PostsListPost: boolean isLocalDraft()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: org.wordpress.android.ui.posts.adapters.PostsListAdapter getPostListAdapter()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$4: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: void <init>(android.content.Context,boolean,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnLoadMoreListener,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnPostsLoadedListener)>",
							"<android.widget.BaseAdapter: void <init>()>",
							"<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>",
							"<java.util.ArrayList: void <init>()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$5: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.NetworkUtils: boolean checkConnection(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: boolean isNetworkAvailable(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: android.net.NetworkInfo getActiveNetworkInfo(android.content.Context)>",
							"<android.content.Context: java.lang.Object getSystemService(java.lang.String)>",
							"<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>",
							"<android.net.NetworkInfo: boolean isConnected()>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.content.Context: java.lang.String getString(int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,java.lang.String,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.wordpress.android.WordPressDB: void updateLastBlogId(int)>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences$Editor: boolean commit()>",
							"<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>",
							"<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<org.wordpress.android.WordPressDB: org.wordpress.android.models.Blog instantiateBlogByLocalId(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<android.database.Cursor: void close()>",
							"<org.wordpress.android.models.Blog: void setHidden(boolean)>",
							"<org.wordpress.android.models.Blog: void setAdmin(boolean)>",
							"<org.wordpress.android.models.Blog: void setBlogOptions(java.lang.String)>",
							"<org.wordpress.android.models.Blog: org.json.JSONObject getBlogOptionsJSONObject()>",
							"<org.wordpress.android.models.Blog: java.lang.String getBlogOptions()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.wordpress.android.util.CrashlyticsUtils: void logException(java.lang.Throwable,org.wordpress.android.util.CrashlyticsUtils$ExceptionType,org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<java.lang.Enum: java.lang.String name()>",
							"<com.crashlytics.android.Crashlytics: void setString(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: int size()>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.v: void <init>()>",
							"<com.crashlytics.android.internal.m: void <clinit>()>",
							"<com.crashlytics.android.internal.n: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.o: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.B: void <init>(com.crashlytics.android.internal.m)>",
							"<android.os.Looper: android.os.Looper getMainLooper()>",
							"<android.os.Handler: void <init>(android.os.Looper)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String)>",
							"<com.crashlytics.android.internal.i: void <clinit>()>",
							"<com.crashlytics.android.internal.j: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String,com.crashlytics.android.internal.i)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(java.lang.String)>",
							"<java.util.HashMap: void <init>()>",
							"<com.crashlytics.android.internal.d: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<com.crashlytics.android.internal.c: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.v: int g()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>",
							"<com.crashlytics.android.internal.r: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<com.crashlytics.android.internal.ab: void <clinit>()>",
							"<com.crashlytics.android.internal.ac: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.ab: boolean f(android.content.Context)>",
							"<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.Crashlytics: void <init>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.u: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.System: long currentTimeMillis()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.u a(java.lang.Class)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: java.lang.String c(java.lang.String)>",
							"<java.lang.String: java.lang.String trim()>",
							"<java.lang.String: java.lang.String substring(int,int)>",
							"<java.lang.String: int length()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: void logException(java.lang.Throwable)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.v: void a(java.lang.Thread,java.lang.Throwable)>",
							"<java.util.Date: void <init>()>",
							"<com.crashlytics.android.v: java.util.concurrent.Future a(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.AbstractExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.G: void <init>(com.crashlytics.android.v,java.lang.Runnable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.P: void <init>(com.crashlytics.android.v,java.util.Date,java.lang.Thread,java.lang.Throwable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.A: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String,boolean)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int println(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<java.lang.Thread: java.lang.Thread currentThread()>",
							"<org.json.JSONObject: void <init>(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.json.JSONObject: java.lang.String getString(java.lang.String)>",
							"<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.json.JSONObject: boolean has(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHomeURL(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setScaledImageWidth(int)>",
							"<org.wordpress.android.models.Blog: void setScaledImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setPostFormats(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setWpVersion(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_key(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_password(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_username(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcomFlag(boolean)>",
							"<org.wordpress.android.models.Blog: void setLocation(boolean)>",
							"<org.wordpress.android.models.Blog: void setRemoteBlogId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidthId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidth(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setFullSizeImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setFeaturedImageCapable(boolean)>",
							"<android.database.Cursor: int getInt(int)>",
							"<org.wordpress.android.models.Blog: void setImagePlacement(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttppassword(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttpuser(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setPassword(java.lang.String)>",
							"<org.wordpress.android.WordPressDB: java.lang.String decryptPassword(java.lang.String)>",
							"<java.lang.String: byte[] getBytes(java.lang.String)>",
							"<java.lang.String: void <init>(byte[])>",
							"<javax.crypto.Cipher: byte[] doFinal(byte[])>",
							"<javax.crypto.Cipher: void init(int,java.security.Key)>",
							"<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
							"<android.util.Base64: byte[] decode(java.lang.String,int)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>",
							"<javax.crypto.spec.DESKeySpec: void <init>(byte[])>",
							"<org.wordpress.android.models.Blog: void setUsername(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setBlogName(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setUrl(java.lang.String)>",
							"<android.database.Cursor: int getColumnIndex(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setLocalTableBlogId(int)>",
							"<org.wordpress.android.models.Blog: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.util.List: int size()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPressDB: java.util.List getAccountsBy(java.lang.String,java.lang.String[])>",
							"<java.util.Vector: void <init>()>",
							"<java.util.Collections: void sort(java.util.List,java.util.Comparator)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: boolean moveToNext()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.util.HashMap: void <init>()>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: int getInt(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] addAll(java.lang.Object[],java.lang.Object[])>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] clone(java.lang.Object[])>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.Class: java.lang.String getName()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>",
							"<java.lang.Class: java.lang.Class getComponentType()>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlogToLastActive()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.WordPressDB: int getLastBlogId()>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences: int getInt(java.lang.String,int)>",
							"<org.wordpress.android.WordPressDB: boolean isDotComAccountVisible(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<org.wordpress.android.util.SqlUtils: boolean boolForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: boolean sqlToBool(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: org.wordpress.android.ui.posts.PostsListFragment access$100(org.wordpress.android.ui.posts.PostsActivity)>",
							"<org.wordpress.android.WordPressDB: boolean deletePost(org.wordpress.android.models.Post)>",
							"<org.wordpress.android.models.Post: int getLocalTableBlogId()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.models.Post: long getLocalTablePostId()>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void checkForLocalChanges(boolean)>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void popPostDetail()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getHTMLStringStackTrace(java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getStringStackTrace(java.lang.Throwable)>",
							"<java.io.StringWriter: void <init>()>",
							"<org.apache.commons.lang.exception.NestableError: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.NotImplementedException: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: void printStackTrace(java.io.PrintWriter)>",
							"<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableException: void printStackTrace(java.io.PrintWriter)>",
							"<java.io.PrintWriter: void <init>(java.io.Writer)>",
							"<java.io.StringWriter: java.lang.String toString()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<android.support.v4.app.FragmentManager: void popBackStack()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$5: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$4: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.WordPressDB: boolean findLocalChanges(int,boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.wordpress.android.ui.posts.PostsActivity: void attemptToSelectPost()>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setShouldSelectFirstPost(boolean)>",
							"<android.support.v4.app.Fragment: boolean isInLayout()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Object)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"android.os.AsyncTask.onPostExecute",
							"android.os.AsyncTask$Status.<clinit>",
							"android.os.AsyncTask$Status.<clinit>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<android.os.AsyncTask: void <init>()>",
							"android.os.AsyncTask$Status.<init>"
						]
					}
				]
			},
			{
				"Candidate Name":"org.wordpress.android.ui.posts.adapters.PostsListAdapter.<init>",
				"Candidate Score":89,
				"Reasons":[
					{
						"Reason Type":"Executed Method 2",
						"Explanation":"Not in the crash stack but has been executedNot in the crash stack but has been executed",
						"Trace":[
							"android.os.AsyncTask.finish",
							"android.os.AsyncTask.isCancelled",
							"android.os.AsyncTask.onCancelled",
							"android.os.AsyncTask.onCancelled",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"<android.app.Activity: void dismissDialog(int)>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask$1: void <init>(org.wordpress.android.ui.posts.PostsActivity$deletePostTask)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHelper: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.PullToRefreshHeaderTransformer: void setShowProgressBarOnly(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout: void ensureAttacher()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshing(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void setRefreshingInt(android.view.View,boolean,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean isDestroyed()>",
							"<android.util.Log: int i(java.lang.String,java.lang.String)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void reset(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean hideHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<android.view.View: boolean removeCallbacks(java.lang.Runnable)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void startRefresh(android.view.View,boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.OnRefreshListener: void onRefreshStarted(android.view.View)>",
							"<android.view.View: boolean post(java.lang.Runnable)>",
							"<android.view.View: boolean postDelayed(java.lang.Runnable,long)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: android.view.View getHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void updateHeaderViewPosition(android.view.View)>",
							"<android.app.Activity: android.view.Window getWindow()>",
							"<android.view.View: java.lang.Object getTag()>",
							"<android.view.ViewManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>",
							"<android.app.Activity: android.view.WindowManager getWindowManager()>",
							"<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>",
							"<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>",
							"<android.view.Window: android.view.View getDecorView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener: void onStateChanged(android.view.View,int)>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: boolean showHeaderView()>",
							"<uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer: void onRefreshStarted()>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: boolean canRefresh(boolean)>",
							"<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher: void resetTouch()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: boolean hasActivity()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Object)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void onPostExecute(java.lang.Boolean)>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.xmlrpc.android.ApiHelper$GenericErrorCallback: void onFailure(org.xmlrpc.android.ApiHelper$ErrorType,java.lang.String,java.lang.Throwable)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback: void onSuccess(int)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Object doInBackground(java.lang.Object[])>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: java.lang.Boolean doInBackground(java.util.List[])>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.wordpress.android.WordPressDB: void savePosts(java.util.List,int,boolean,boolean)>",
							"<java.util.List: int size()>",
							"<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>",
							"<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>",
							"<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.util.SqlUtils: long boolToSql(boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.wordpress.android.util.MapUtils: int getMapInt(java.util.Map,java.lang.String,int)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.lang.Integer: int parseInt(java.lang.String)>",
							"<java.lang.Object: boolean equals(java.lang.Object)>",
							"<org.json.JSONArray: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: int getTimezoneOffset()>",
							"<java.util.Date: void <init>(long)>",
							"<java.lang.Long: long longValue()>",
							"<android.content.ContentValues: java.lang.Object get(java.lang.String)>",
							"<android.database.sqlite.SQLiteDatabase: void endTransaction()>",
							"<java.util.Date: void <init>()>",
							"<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<org.json.JSONArray: void <init>()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>",
							"<java.lang.Long: java.lang.Long valueOf(long)>",
							"<java.util.Date: long getTime()>",
							"<org.wordpress.android.util.MapUtils: java.util.Date getMapDate(java.util.Map,java.lang.String)>",
							"<java.util.Map: boolean containsKey(java.lang.Object)>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.String)>",
							"<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.MapUtils: java.lang.String getMapStr(java.util.Map,java.lang.String)>",
							"<android.content.ContentValues: void <init>()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<android.database.sqlite.SQLiteDatabase: void beginTransaction()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<org.wordpress.android.WordPressDB: void deleteUploadedPosts(int,boolean)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.xmlrpc.android.XMLRPCClientInterface: java.lang.Object call(java.lang.String,java.lang.Object[])>",
							"<org.wordpress.android.models.Blog: java.lang.String getPassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUsername()>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.xmlrpc.android.XMLRPCFactory: org.xmlrpc.android.XMLRPCClientInterface instantiate(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.xmlrpc.android.XMLRPCFactoryDefault: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.xmlrpc.android.XMLRPCFactoryAbstract: org.xmlrpc.android.XMLRPCClientInterface make(java.net.URI,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void v(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void <init>()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>(org.wordpress.android.util.AppLog$1)>",
							"<org.wordpress.android.util.AppLog$LogEntry: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean access$300(org.wordpress.android.util.AppLog$LogEntryList,org.wordpress.android.util.AppLog$LogEntry)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: boolean addEntry(org.wordpress.android.util.AppLog$LogEntry)>",
							"<java.util.ArrayList: int size()>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<org.wordpress.android.util.AppLog$LogEntryList: void removeFirstEntry()>",
							"<java.util.ArrayList: java.util.Iterator iterator()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$EntrySet$1: java.util.Map$Entry next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt()>",
							"<org.apache.commons.lang.math.JVMRandom: int nextInt(int)>",
							"<org.apache.commons.lang.math.JVMRandom: void <clinit>()>",
							"<java.util.Random: void <init>()>",
							"<java.util.Random: int nextInt(int)>",
							"<java.util.Random: int nextInt()>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object next()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: void checkTokenized()>",
							"<java.lang.String: void <clinit>()>",
							"<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.List: int size()>",
							"<java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>",
							"<java.util.Vector: int size()>",
							"<java.util.ArrayList: int size()>",
							"<java.util.LinkedList: int size()>",
							"<java.util.concurrent.CopyOnWriteArrayList: int size()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer: java.util.List tokenize(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.Collections: void <clinit>()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<java.lang.String: int length()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: boolean add(java.lang.Object)>",
							"<java.util.AbstractList: boolean add(java.lang.Object)>",
							"<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>",
							"<java.util.ArrayList: boolean add(java.lang.Object)>",
							"<java.util.LinkedList: boolean add(java.lang.Object)>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isEmptyTokenAsNull()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isIgnoreEmptyTokens()>",
							"<org.apache.commons.lang.text.StrTokenizer: int readNextToken(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List)>",
							"<java.lang.Math: int max(int,int)>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<java.util.Arrays: int binarySearch(char[],char)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: int readWithQuotes(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder clear()>",
							"<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$TrimMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharSetMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$CharMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$NoMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrMatcher$StringMatcher: int isMatch(char[],int,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean isQuote(char[],int,int,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.String substring(int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int validateRange(int,int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char[],int,int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(int)>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder ensureCapacity(int)>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder appendNull()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: void addToken(java.util.List,java.lang.String)>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getQuoteMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getDelimiterMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getTrimmerMatcher()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrMatcher getIgnoredMatcher()>",
							"<java.util.ArrayList: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void <init>()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.util.List tokenize(char[],int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: java.lang.Object next()>",
							"<java.util.GregorianCalendar: boolean equals(java.lang.Object)>",
							"<java.util.Calendar: void add(int,int)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.GregorianCalendar: void add(int,int)>",
							"<java.util.Calendar: boolean equals(java.lang.Object)>",
							"<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$KeySet$1: java.lang.String next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<com.google.gson.internal.StringMap$Values$1: java.lang.Object next()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: com.google.gson.internal.StringMap$LinkedEntry nextEntry()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: java.lang.Object next()>",
							"<java.lang.Character: void <clinit>()>",
							"<java.lang.Character: void <init>(char)>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: void prepareNext()>",
							"<org.apache.commons.lang.CharRange: boolean access$100(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$200(org.apache.commons.lang.CharRange)>",
							"<org.apache.commons.lang.CharRange: char access$300(org.apache.commons.lang.CharRange)>",
							"<java.util.NoSuchElementException: void <init>()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: java.lang.Object next()>",
							"<java.util.Scanner: java.lang.String next()>",
							"<android.support.v4.util.MapCollections$MapIterator: java.util.Map$Entry next()>",
							"<android.support.v4.util.MapCollections$MapIterator: boolean hasNext()>",
							"<org.apache.commons.lang.text.StrTokenizer: boolean hasNext()>",
							"<com.google.gson.internal.StringMap$LinkedHashIterator: boolean hasNext()>",
							"<com.google.gson.internal.StringMap: void <clinit>()>",
							"<com.google.gson.internal.StringMap: com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap)>",
							"<org.apache.commons.lang.time.DateUtils$DateIterator: boolean hasNext()>",
							"<java.util.Calendar: boolean before(java.lang.Object)>",
							"<com.google.gson.JsonStreamParser: boolean hasNext()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<com.google.gson.JsonIOException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<java.lang.RuntimeException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonSyntaxException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.JsonParseException: void <init>(java.lang.Throwable)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>",
							"<com.google.gson.stream.JsonReader$2: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonScope: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: com.google.gson.stream.JsonScope[] values()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.support.v4.util.SparseArrayCompat: android.support.v4.util.SparseArrayCompat clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: java.lang.Object cloneReset()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>",
							"<java.lang.Enum: java.lang.Object clone()>",
							"<org.apache.http.entity.StringEntity: java.lang.Object clone()>",
							"<java.text.DecimalFormatSymbols: java.lang.Object clone()>",
							"<android.webkit.WebSyncManager: java.lang.Object clone()>",
							"<android.content.Intent: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
							"<org.apache.http.HttpHost: java.lang.Object clone()>",
							"<java.util.Date: java.lang.Object clone()>",
							"<java.util.SimpleTimeZone: java.lang.Object clone()>",
							"<java.util.TimeZone: java.lang.Object clone()>",
							"<android.webkit.CookieManager: java.lang.Object clone()>",
							"<org.apache.http.message.BasicHeader: java.lang.Object clone()>",
							"<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>",
							"<java.util.EnumSet: java.util.EnumSet clone()>",
							"<java.util.Calendar: java.lang.Object clone()>",
							"<java.util.TreeMap: java.lang.Object clone()>",
							"<java.util.Locale: java.lang.Object clone()>",
							"<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>",
							"<java.util.Hashtable: java.lang.Object clone()>",
							"<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>",
							"<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>",
							"<android.util.SparseIntArray: android.util.SparseIntArray clone()>",
							"<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>",
							"<org.apache.http.message.HeaderGroup: java.lang.Object clone()>",
							"<org.apache.commons.lang.text.StrBuilder: java.lang.Object clone()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: java.lang.Object clone()>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<org.apache.commons.lang.text.StrTokenizer: org.apache.commons.lang.text.StrTokenizer reset()>",
							"<android.app.Notification: android.app.Notification clone()>",
							"<java.text.DecimalFormat: java.lang.Object clone()>",
							"<java.util.TreeSet: java.lang.Object clone()>",
							"<android.util.SparseArray: android.util.SparseArray clone()>",
							"<java.text.Format: java.lang.Object clone()>",
							"<java.util.BitSet: java.lang.Object clone()>",
							"<java.text.DateFormat: java.lang.Object clone()>",
							"<java.text.NumberFormat: java.lang.Object clone()>",
							"<java.text.MessageFormat: java.lang.Object clone()>",
							"<org.apache.http.ProtocolVersion: java.lang.Object clone()>",
							"<java.util.Vector: java.lang.Object clone()>",
							"<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>",
							"<android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>",
							"<android.app.Notification$Action: android.app.Notification$Action clone()>",
							"<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>",
							"<android.view.animation.Animation: android.view.animation.Animation clone()>",
							"<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>",
							"<android.widget.RemoteViews: android.widget.RemoteViews clone()>",
							"<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>",
							"<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>",
							"<java.security.MessageDigest: java.lang.Object clone()>",
							"<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>",
							"<java.util.HashMap: java.lang.Object clone()>",
							"<java.security.MessageDigestSpi: java.lang.Object clone()>",
							"<java.util.AbstractMap: java.lang.Object clone()>",
							"<java.text.DateFormatSymbols: java.lang.Object clone()>",
							"<java.util.ArrayList: java.lang.Object clone()>",
							"<java.util.LinkedList: java.lang.Object clone()>",
							"<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>",
							"<java.text.SimpleDateFormat: java.lang.Object clone()>",
							"<com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()>",
							"<java.text.BreakIterator: java.lang.Object clone()>",
							"<android.os.Bundle: java.lang.Object clone()>",
							"<android.animation.Animator: android.animation.Animator clone()>",
							"<java.util.EnumMap: java.util.EnumMap clone()>",
							"<java.util.HashSet: java.lang.Object clone()>",
							"<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>",
							"<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>",
							"<org.apache.http.entity.FileEntity: java.lang.Object clone()>",
							"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>",
							"<android.content.ComponentName: android.content.ComponentName clone()>",
							"<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>",
							"<java.lang.IllegalStateException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.MalformedJsonException: void <init>(java.lang.String)>",
							"<java.io.IOException: void <init>(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.System: void <clinit>()>",
							"<java.io.Reader: int read(char[],int,int)>",
							"<com.google.gson.internal.bind.JsonTreeReader$1: int read(char[],int,int)>",
							"<java.lang.AssertionError: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder$StrBuilderReader: int read(char[],int,int)>",
							"<java.lang.IndexOutOfBoundsException: void <init>()>",
							"<org.apache.commons.lang.text.StrBuilder: void getChars(int,int,char[],int)>",
							"<java.lang.System: void <clinit>()>",
							"<org.apache.commons.lang.text.StrBuilder: int length()>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>",
							"<java.lang.StringIndexOutOfBoundsException: void <init>(int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<org.apache.commons.lang.text.StrBuilder: int size()>",
							"<java.io.BufferedReader: int read(char[],int,int)>",
							"<java.io.InputStreamReader: int read(char[],int,int)>",
							"<java.io.FilterReader: int read(char[],int,int)>",
							"<java.io.PushbackReader: int read(char[],int,int)>",
							"<java.io.StringReader: int read(char[],int,int)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.io.EOFException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: void skipToEndOfLine()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean skipTo(java.lang.String)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.String: char charAt(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken objectValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.String: void <clinit>()>",
							"<java.lang.String: void <init>(char[],int,int)>",
							"<java.lang.String: char charAt(int)>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: char readEscapeCharacter()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<java.lang.NumberFormatException: void <init>(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: void push(com.google.gson.stream.JsonScope)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken readLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeLiteral()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeNumber(char[],int,int)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInObject(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.lang.String: int length()>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInArray(boolean)>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: void checkLenient()>",
							"<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<com.google.gson.stream.JsonReader: int getColumnNumber()>",
							"<com.google.gson.stream.JsonReader: int getLineNumber()>",
							"<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>",
							"<com.google.gson.stream.JsonReader: void consumeNonExecutePrefix()>",
							"<com.google.gson.stream.JsonReader: void <clinit>()>",
							"<java.lang.String: char[] toCharArray()>",
							"<com.google.gson.stream.JsonReader$1: void <init>()>",
							"<com.google.gson.internal.JsonReaderInternalAccess: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>",
							"<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>",
							"<java.lang.AssertionError: void <init>()>",
							"<java.lang.Enum: int ordinal()>",
							"<com.google.gson.stream.JsonScope: void <clinit>()>",
							"<com.google.gson.stream.JsonToken: void <clinit>()>",
							"<java.util.Scanner: boolean hasNext()>",
							"<org.apache.commons.lang.CharRange$CharacterIterator: boolean hasNext()>",
							"<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>",
							"<android.support.v4.util.MapCollections$ArrayIterator: boolean hasNext()>",
							"<java.util.ArrayList: boolean remove(java.lang.Object)>",
							"<android.util.Log: int v(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttppassword()>",
							"<org.wordpress.android.models.Blog: java.lang.String getHttpuser()>",
							"<org.wordpress.android.models.Blog: java.net.URI getUri()>",
							"<org.wordpress.android.models.Blog: java.lang.String getUrl()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.net.URI: void <init>(java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<org.xmlrpc.android.ApiHelper$FetchPostsTask: void <init>(org.xmlrpc.android.ApiHelper$FetchPostsTask$Callback)>",
							"<org.xmlrpc.android.ApiHelper$HelperAsyncTask: void <init>()>",
							"<android.os.AsyncTask: void <init>()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$7: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<android.view.View: void setVisibility(int)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Vector: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: int getRemotePostCount()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.models.PostsListPost: boolean isLocalDraft()>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: org.wordpress.android.ui.posts.adapters.PostsListAdapter getPostListAdapter()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$4: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.ui.posts.adapters.PostsListAdapter: void <init>(android.content.Context,boolean,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnLoadMoreListener,org.wordpress.android.ui.posts.adapters.PostsListAdapter$OnPostsLoadedListener)>",
							"<android.widget.BaseAdapter: void <init>()>",
							"<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>",
							"<java.util.ArrayList: void <init>()>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.ui.posts.PostsListFragment$5: void <init>(org.wordpress.android.ui.posts.PostsListFragment)>",
							"<java.lang.Object: void <init>()>",
							"<org.wordpress.android.util.NetworkUtils: boolean checkConnection(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: boolean isNetworkAvailable(android.content.Context)>",
							"<org.wordpress.android.util.NetworkUtils: android.net.NetworkInfo getActiveNetworkInfo(android.content.Context)>",
							"<android.content.Context: java.lang.Object getSystemService(java.lang.String)>",
							"<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>",
							"<android.net.NetworkInfo: boolean isConnected()>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,int,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.content.Context: java.lang.String getString(int)>",
							"<org.wordpress.android.util.ToastUtils: void showToast(android.content.Context,java.lang.String,org.wordpress.android.util.ToastUtils$Duration)>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: void setGravity(int,int,int)>",
							"<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.models.Blog: int getRemoteBlogId()>",
							"<org.wordpress.android.WordPressDB: void updateLastBlogId(int)>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences$Editor: boolean commit()>",
							"<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>",
							"<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<org.wordpress.android.WordPressDB: org.wordpress.android.models.Blog instantiateBlogByLocalId(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<android.database.Cursor: void close()>",
							"<org.wordpress.android.models.Blog: void setHidden(boolean)>",
							"<org.wordpress.android.models.Blog: void setAdmin(boolean)>",
							"<org.wordpress.android.models.Blog: void setBlogOptions(java.lang.String)>",
							"<org.wordpress.android.models.Blog: org.json.JSONObject getBlogOptionsJSONObject()>",
							"<org.wordpress.android.models.Blog: java.lang.String getBlogOptions()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: void <init>()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String toString()>",
							"<java.lang.Throwable: java.lang.String toString()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <clinit>()>",
							"<org.wordpress.android.util.CrashlyticsUtils$ExceptionType: void <init>(java.lang.String,int)>",
							"<java.lang.Enum: void <init>(java.lang.String,int)>",
							"<org.wordpress.android.util.CrashlyticsUtils: void logException(java.lang.Throwable,org.wordpress.android.util.CrashlyticsUtils$ExceptionType,org.wordpress.android.util.AppLog$T,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<java.lang.Enum: java.lang.String name()>",
							"<com.crashlytics.android.Crashlytics: void setString(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>",
							"<java.util.concurrent.ConcurrentHashMap: int size()>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.v: void <init>()>",
							"<com.crashlytics.android.internal.m: void <clinit>()>",
							"<com.crashlytics.android.internal.n: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.o: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.B: void <init>(com.crashlytics.android.internal.m)>",
							"<android.os.Looper: android.os.Looper getMainLooper()>",
							"<android.os.Handler: void <init>(android.os.Looper)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m)>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String)>",
							"<com.crashlytics.android.internal.i: void <clinit>()>",
							"<com.crashlytics.android.internal.j: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String,com.crashlytics.android.internal.i)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>()>",
							"<com.crashlytics.android.internal.b: void <init>(java.lang.String)>",
							"<java.util.HashMap: void <init>()>",
							"<com.crashlytics.android.internal.d: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<com.crashlytics.android.internal.c: void <init>(com.crashlytics.android.internal.b)>",
							"<java.lang.ThreadLocal: void <init>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.v: int g()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>",
							"<com.crashlytics.android.internal.r: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<com.crashlytics.android.internal.ab: void <clinit>()>",
							"<com.crashlytics.android.internal.ac: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.ab: boolean f(android.content.Context)>",
							"<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.Crashlytics: void <init>()>",
							"<java.lang.System: void <clinit>()>",
							"<java.util.concurrent.ConcurrentHashMap: void <init>()>",
							"<com.crashlytics.android.internal.u: void <init>()>",
							"<com.crashlytics.android.internal.p: void <init>()>",
							"<java.lang.System: long currentTimeMillis()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.u a(java.lang.Class)>",
							"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.y: void <clinit>()>",
							"<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: java.lang.String c(java.lang.String)>",
							"<java.lang.String: java.lang.String trim()>",
							"<java.lang.String: java.lang.String substring(int,int)>",
							"<java.lang.String: int length()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.Crashlytics: void logException(java.lang.Throwable)>",
							"<com.crashlytics.android.Crashlytics: void <clinit>()>",
							"<com.crashlytics.android.internal.q: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.v: void a(java.lang.Thread,java.lang.Throwable)>",
							"<java.util.Date: void <init>()>",
							"<com.crashlytics.android.v: java.util.concurrent.Future a(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<com.crashlytics.android.internal.q: void a(java.lang.String,java.lang.String)>",
							"<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<java.util.concurrent.AbstractExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>",
							"<com.crashlytics.android.G: void <init>(com.crashlytics.android.v,java.lang.Runnable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.P: void <init>(com.crashlytics.android.v,java.util.Date,java.lang.Thread,java.lang.Throwable)>",
							"<java.lang.Object: void <init>()>",
							"<com.crashlytics.android.internal.A: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.r: void a(int,java.lang.String,java.lang.String,boolean)>",
							"<com.crashlytics.android.internal.r: boolean b(int)>",
							"<android.util.Log: int println(int,java.lang.String,java.lang.String)>",
							"<com.crashlytics.android.internal.A: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.r: void a(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.q b()>",
							"<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>",
							"<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>",
							"<java.lang.Thread: java.lang.Thread currentThread()>",
							"<org.json.JSONObject: void <init>(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.String,java.lang.Throwable)>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>",
							"<org.json.JSONObject: java.lang.String getString(java.lang.String)>",
							"<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.json.JSONObject: boolean has(java.lang.String)>",
							"<java.lang.RuntimeException: void <init>(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHomeURL(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setScaledImageWidth(int)>",
							"<org.wordpress.android.models.Blog: void setScaledImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setPostFormats(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setWpVersion(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_blogid(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setApi_key(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_password(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcom_username(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setDotcomFlag(boolean)>",
							"<org.wordpress.android.models.Blog: void setLocation(boolean)>",
							"<org.wordpress.android.models.Blog: void setRemoteBlogId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidthId(int)>",
							"<org.wordpress.android.models.Blog: void setMaxImageWidth(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setFullSizeImage(boolean)>",
							"<org.wordpress.android.models.Blog: void setFeaturedImageCapable(boolean)>",
							"<android.database.Cursor: int getInt(int)>",
							"<org.wordpress.android.models.Blog: void setImagePlacement(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttppassword(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setHttpuser(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setPassword(java.lang.String)>",
							"<org.wordpress.android.WordPressDB: java.lang.String decryptPassword(java.lang.String)>",
							"<java.lang.String: byte[] getBytes(java.lang.String)>",
							"<java.lang.String: void <init>(byte[])>",
							"<javax.crypto.Cipher: byte[] doFinal(byte[])>",
							"<javax.crypto.Cipher: void init(int,java.security.Key)>",
							"<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
							"<android.util.Base64: byte[] decode(java.lang.String,int)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>",
							"<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>",
							"<javax.crypto.spec.DESKeySpec: void <init>(byte[])>",
							"<org.wordpress.android.models.Blog: void setUsername(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setBlogName(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setUrl(java.lang.String)>",
							"<android.database.Cursor: int getColumnIndex(java.lang.String)>",
							"<org.wordpress.android.models.Blog: void setLocalTableBlogId(int)>",
							"<org.wordpress.android.models.Blog: void <init>()>",
							"<java.lang.Object: void <init>()>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.List: java.lang.Object get(int)>",
							"<java.util.List: int size()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPressDB: java.util.List getAccountsBy(java.lang.String,java.lang.String[])>",
							"<java.util.Vector: void <init>()>",
							"<java.util.Collections: void sort(java.util.List,java.util.Comparator)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: boolean moveToNext()>",
							"<java.util.List: boolean add(java.lang.Object)>",
							"<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>",
							"<java.lang.Integer: java.lang.Integer valueOf(int)>",
							"<java.util.HashMap: void <init>()>",
							"<java.lang.String: boolean equals(java.lang.Object)>",
							"<android.database.Cursor: java.lang.String getString(int)>",
							"<android.database.Cursor: int getInt(int)>",
							"<android.database.Cursor: boolean moveToFirst()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] addAll(java.lang.Object[],java.lang.Object[])>",
							"<org.apache.commons.lang.ArrayUtils: java.lang.Object[] clone(java.lang.Object[])>",
							"<java.lang.Object: java.lang.Object clone()>",
							"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>",
							"<java.lang.StringBuffer: java.lang.String toString()>",
							"<java.lang.Class: java.lang.String getName()>",
							"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
							"<java.lang.StringBuffer: void <init>()>",
							"<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>",
							"<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
							"<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>",
							"<java.lang.Class: java.lang.Class getComponentType()>",
							"<java.lang.Object: java.lang.Class getClass()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlogToLastActive()>",
							"<org.wordpress.android.WordPressDB: java.util.List getVisibleAccounts()>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog setCurrentBlog(int)>",
							"<java.lang.Integer: int intValue()>",
							"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
							"<java.lang.Object: java.lang.String toString()>",
							"<java.util.Map: java.lang.Object get(java.lang.Object)>",
							"<java.util.Iterator: java.lang.Object next()>",
							"<java.util.Iterator: boolean hasNext()>",
							"<java.util.List: java.util.Iterator iterator()>",
							"<org.wordpress.android.WordPressDB: int getLastBlogId()>",
							"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
							"<android.content.SharedPreferences: int getInt(java.lang.String,int)>",
							"<org.wordpress.android.WordPressDB: boolean isDotComAccountVisible(int)>",
							"<java.lang.Integer: java.lang.String toString(int)>",
							"<org.wordpress.android.util.SqlUtils: boolean boolForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>",
							"<org.wordpress.android.util.SqlUtils: boolean sqlToBool(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: org.wordpress.android.ui.posts.PostsListFragment access$100(org.wordpress.android.ui.posts.PostsActivity)>",
							"<org.wordpress.android.WordPressDB: boolean deletePost(org.wordpress.android.models.Post)>",
							"<org.wordpress.android.models.Post: int getLocalTableBlogId()>",
							"<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>",
							"<java.lang.String: java.lang.String valueOf(long)>",
							"<org.wordpress.android.models.Post: long getLocalTablePostId()>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void checkForLocalChanges(boolean)>",
							"<org.wordpress.android.WordPress: org.wordpress.android.models.Blog getCurrentBlog()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setRefreshing(boolean)>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void requestPosts(boolean)>",
							"<org.wordpress.android.ui.posts.PostsActivity: void popPostDetail()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<org.wordpress.android.util.AppLog: void e(org.wordpress.android.util.AppLog$T,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog$LogLevel: void <clinit>()>",
							"<org.xmlrpc.android.XMLRPCFault: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
							"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.NotImplementedException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableError: java.lang.String getMessage()>",
							"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>",
							"<org.xml.sax.SAXException: java.lang.String getMessage()>",
							"<java.lang.Throwable: java.lang.String getMessage()>",
							"<com.android.volley.AuthFailureError: java.lang.String getMessage()>",
							"<java.net.URISyntaxException: java.lang.String getMessage()>",
							"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>",
							"<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
							"<java.lang.Enum: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.String toString()>",
							"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
							"<java.lang.StringBuilder: void <init>()>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getHTMLStringStackTrace(java.lang.Throwable)>",
							"<org.wordpress.android.util.AppLog: void <clinit>()>",
							"<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>",
							"<org.wordpress.android.util.AppLog: java.lang.String getStringStackTrace(java.lang.Throwable)>",
							"<java.io.StringWriter: void <init>()>",
							"<org.apache.commons.lang.exception.NestableError: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.NotImplementedException: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableRuntimeException: void printStackTrace(java.io.PrintWriter)>",
							"<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>",
							"<org.apache.commons.lang.exception.NestableException: void printStackTrace(java.io.PrintWriter)>",
							"<java.io.PrintWriter: void <init>(java.io.Writer)>",
							"<java.io.StringWriter: java.lang.String toString()>",
							"<org.wordpress.android.util.AppLog: void addEntry(org.wordpress.android.util.AppLog$T,org.wordpress.android.util.AppLog$LogLevel,java.lang.String)>",
							"<org.wordpress.android.util.AppLog: void crashlyticsLog(org.wordpress.android.util.AppLog$T,java.lang.Throwable,java.lang.String)>",
							"<android.support.v4.app.FragmentManager: void popBackStack()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<android.app.Dialog: void show()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog create()>",
							"<android.app.Activity: boolean isFinishing()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$5: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>",
							"<org.wordpress.android.ui.posts.PostsActivity$4: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<java.lang.Object: void <init>()>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>",
							"<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<android.app.AlertDialog$Builder: void <init>(android.content.Context)>",
							"<org.wordpress.android.WordPressDB: boolean findLocalChanges(int,boolean)>",
							"<java.lang.String: java.lang.String valueOf(int)>",
							"<android.database.Cursor: void close()>",
							"<android.database.Cursor: int getCount()>",
							"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
							"<org.wordpress.android.models.Blog: int getLocalTableBlogId()>",
							"<android.widget.Toast: void show()>",
							"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
							"<android.content.res.Resources: java.lang.CharSequence getText(int)>",
							"<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>",
							"<java.lang.Boolean: boolean booleanValue()>",
							"<org.wordpress.android.ui.posts.PostsActivity: void attemptToSelectPost()>",
							"<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>",
							"<org.wordpress.android.ui.posts.PostsListFragment: void setShouldSelectFirstPost(boolean)>",
							"<android.support.v4.app.Fragment: boolean isInLayout()>",
							"<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentById(int)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Object)>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void onPostExecute(java.lang.Boolean)>",
							"android.os.AsyncTask.onPostExecute",
							"android.os.AsyncTask$Status.<clinit>",
							"android.os.AsyncTask$Status.<clinit>",
							"<org.wordpress.android.ui.posts.PostsActivity$deletePostTask: void <init>(org.wordpress.android.ui.posts.PostsActivity)>",
							"<android.os.AsyncTask: void <init>()>",
							"android.os.AsyncTask$Status.<init>"
						]
					}
				]
			},
			{
				"Candidate Name":"dalvik.system.NativeStart.main",
				"Candidate Score":79,
				"Reasons":[
					{
						"Reason Type":"Executed Method 1",
						"Explanation":"Not influence the keyVar but in crash trace",
						"Trace":[
							"dalvik.system.NativeStart.main"
						]
					},
					{
						"Reason Type":"Key Variable Related 1",
						"Explanation":"Influences the value of keyVar by modifying the value of the passed parameters",
						"Influenced parameter id":"0",
						"Influenced method":"android.app.Activity.missingDialog",
						"Trace":[
							"dalvik.system.NativeStart.main"
						]
					}
				]
			}
		],
		"None-Code Labels":[]
	}
}